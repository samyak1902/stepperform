{
    "pipes": [
        {
            "name": "OrdinalPipe",
            "id": "pipe-OrdinalPipe-dca5c6e5ce539d25134379b26d23139d",
            "file": "src/app/components/installment/ordinal.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "int",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "jsdoctags": [
                        {
                            "name": "int",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "ordinal",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'ordinal'\r\n})\r\nexport class OrdinalPipe implements PipeTransform {\r\n\r\n  transform(int): any {\r\n    const ones = +int % 10, tens = +int % 100 - ones;\r\n        return int + [\"th\",\"st\",\"nd\",\"rd\"][ tens === 10 || ones > 3 ? 0 : ones ];\r\n  }\r\n\r\n}\r\n"
        }
    ],
    "interfaces": [],
    "injectables": [
        {
            "name": "CommonDataService",
            "id": "injectable-CommonDataService-39b0fb27116eac6e257139d95b858d8b",
            "file": "src/app/common-data.service.ts",
            "properties": [
                {
                    "name": "defaultData",
                    "defaultValue": "{\r\ncoversData: {cover: \"\"},\r\ninstallmentsData: {term: \"\"},\r\ninsuringPartyData: {egn: \"\", address: \"mumbai\", email: \"\"},\r\npolicyDetailsData: {policyDate: \"\", policyLength: \"\", check1: false, check2: false},\r\nvehicleData: {registrationNumber: \"\", certificateNumber: \"\", purpose: \"\", yesNo: \"\"},\r\n}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "defaultData2",
                    "defaultValue": "{\r\n  contactInformation: {\r\n    No: \"\",\r\nappartment: \"\",\r\nblock: \"\",\r\ncity: \"\",\r\nentrance: \"\",\r\nphone: \"\",\r\npincode: \"\",\r\nstreet: \"\",\r\n  },\r\ndeliveryInformation:{\r\nappt: \"\",\r\nblock: \"\",\r\nbusiness: \"\",\r\ncity: \"\",\r\ncontact: null,\r\nentrance: \"\",\r\nfullName: \"\",\r\nnotes: \"\",\r\nnumber: \"\",\r\npincode: \"\",\r\nstreet: \"\",\r\n},\r\npersonalInformation:{\r\nbirth: \"\",\r\ncitizen: \"\",\r\nfullname: {firstname: \"\", lastname: \"\", surname: \"\"},\r\nfullnameeng: {firstnameeng: \"\", lastnameeng: \"\", surnameeng: \"\"},\r\nlnch: \"\"},\r\n\r\nvehicleOwnerInformation: {fullname: {firstname: \"\", lastname: \"\", surname: \"\"},\r\nlnch: \"\"}\r\n}",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "formData",
                    "defaultValue": "new BehaviorSubject<any>(this.defaultData)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "installmentData",
                    "defaultValue": "new BehaviorSubject<any>('')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "policyData",
                    "defaultValue": "new BehaviorSubject<any>(this.defaultData2)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonDataService {\r\ndefaultData={\r\ncoversData: {cover: \"\"},\r\ninstallmentsData: {term: \"\"},\r\ninsuringPartyData: {egn: \"\", address: \"mumbai\", email: \"\"},\r\npolicyDetailsData: {policyDate: \"\", policyLength: \"\", check1: false, check2: false},\r\nvehicleData: {registrationNumber: \"\", certificateNumber: \"\", purpose: \"\", yesNo: \"\"},\r\n}\r\ndefaultData2={\r\n  contactInformation: {\r\n    No: \"\",\r\nappartment: \"\",\r\nblock: \"\",\r\ncity: \"\",\r\nentrance: \"\",\r\nphone: \"\",\r\npincode: \"\",\r\nstreet: \"\",\r\n  },\r\ndeliveryInformation:{\r\nappt: \"\",\r\nblock: \"\",\r\nbusiness: \"\",\r\ncity: \"\",\r\ncontact: null,\r\nentrance: \"\",\r\nfullName: \"\",\r\nnotes: \"\",\r\nnumber: \"\",\r\npincode: \"\",\r\nstreet: \"\",\r\n},\r\npersonalInformation:{\r\nbirth: \"\",\r\ncitizen: \"\",\r\nfullname: {firstname: \"\", lastname: \"\", surname: \"\"},\r\nfullnameeng: {firstnameeng: \"\", lastnameeng: \"\", surnameeng: \"\"},\r\nlnch: \"\"},\r\n\r\nvehicleOwnerInformation: {fullname: {firstname: \"\", lastname: \"\", surname: \"\"},\r\nlnch: \"\"}\r\n}\r\n  constructor() { }\r\n  formData=new BehaviorSubject<any>(this.defaultData);\r\n  policyData=new BehaviorSubject<any>(this.defaultData2);\r\n  installmentData=new BehaviorSubject<any>('');\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 48
            },
            "type": "injectable"
        },
        {
            "name": "InstallmentService",
            "id": "injectable-InstallmentService-363fbffbcefd6099b9de3970ea5de38d",
            "file": "src/app/components/installment/installment.service.ts",
            "properties": [
                {
                    "name": "getInstallmentData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "url",
                    "defaultValue": "'http://3.6.39.44:3000/getInstallmentOptions'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InstallmentService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  url='http://3.6.39.44:3000/getInstallmentOptions'\r\n\r\n  getInstallmentData=()=>{\r\n  //   return [\r\n  //     {\r\n  //         \"title\": \"Single Payment\",\r\n  //         \"subtitle\": \"Best value\",\r\n  //         \"amount\": 4039999,\r\n  //         \"saving\": 60497,\r\n  //         \"installmentsCount\": 1,\r\n  //         \"discounts\": 0,\r\n  //         \"installments\": []\r\n  //     },\r\n  //     {\r\n  //         \"title\": \"Two Payments\",\r\n  //         \"subtitle\": \"Every 6 months\",\r\n  //         \"amount\": 4060098,\r\n  //         \"saving\": 40398,\r\n  //         \"installmentsCount\": 2,\r\n  //         \"discounts\": 0,\r\n  //         \"installments\": [\r\n  //             2030049,\r\n  //             2030049\r\n  //         ]\r\n  //     },\r\n  //     {\r\n  //         \"title\": \"Four Payments\",\r\n  //         \"subtitle\": \"Every 3 months\",\r\n  //         \"amount\": 4100496,\r\n  //         \"saving\": 0,\r\n  //         \"installmentsCount\": 4,\r\n  //         \"discounts\": 0,\r\n  //         \"installments\": [\r\n  //             1025124,\r\n  //             1025124,\r\n  //             1025124,\r\n  //             1025124\r\n  //         ]\r\n  //     }\r\n  // ]\r\n  return this.http.post(this.url,{})\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LoggedInServiceService",
            "id": "injectable-LoggedInServiceService-023d2a2ccc5ad5df5b0efae596baeea5",
            "file": "src/app/logged-in-service.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggedInServiceService {\r\n\r\n  constructor() { }\r\n\r\n  logout() :void \r\n  {    \r\n    sessionStorage.setItem('isLoggedIn','false');    \r\n    sessionStorage.removeItem('username');    \r\n  }  \r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-b0dda38f970a6690b77b35dfb293b3ac",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  navigateTo(): Promise<unknown> {\r\n    return browser.get(browser.baseUrl) as Promise<unknown>;\r\n  }\r\n\r\n  getTitleText(): Promise<string> {\r\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AdditionalCoversComponent",
            "id": "component-AdditionalCoversComponent-95f41ebc9976d542cb39886267146bfa",
            "file": "src/app/components/additional-covers/additional-covers.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-additional-covers",
            "styleUrls": [
                "./additional-covers.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./additional-covers.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cover",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "installment",
                    "line": 19
                }
            ],
            "outputsClass": [
                {
                    "name": "NextTab",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "additionalcoverForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "imageUrl",
                    "defaultValue": "\"./assets/carlogo.jpeg \"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "installmentData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "next",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "tickimage",
                    "defaultValue": "\"./assets/tick.jpg\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\nimport { InstallmentComponent } from '../installment/installment.component';\r\nimport { CommonDataService } from 'src/app/common-data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-additional-covers',\r\n  templateUrl: './additional-covers.component.html',\r\n  styleUrls: ['./additional-covers.component.css']\r\n})\r\nexport class AdditionalCoversComponent implements OnInit {\r\n  @Output() OnRegister = new EventEmitter()\r\n  @Output() OnToggle = new EventEmitter()\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n  @Output() NextTab = new EventEmitter()\r\n  @Input() cover: string\r\n  @Input ()installment\r\n  imageUrl=\"./assets/carlogo.jpeg \";;\r\n  tickimage=\"./assets/tick.jpg\";\r\n  additionalcoverForm: FormGroup;\r\n  installmentData\r\n  constructor( private formBuilder: FormBuilder, private GAService: GoogleAnalyticsService,private com:CommonDataService ){ }\r\n\r\n  ngOnInit(): void {\r\n    this.additionalcoverForm = this.formBuilder.group({\r\n      cover: ['', Validators.required],\r\n    });\r\n    \r\n  this.com.installmentData.subscribe(data=>{\r\n    \r\n    this.installmentData=data\r\n  })\r\n  \r\n    \r\n }\r\n  \r\n  change=()=>{\r\n   \r\n    if(this.additionalcoverForm.valid){\r\n      this.OnToggle.emit(true);\r\n      this.OnRegister.emit(this.additionalcoverForm.value);\r\n    }else{\r\n      this.OnToggle.emit(false)\r\n    }\r\n  }\r\n  next=()=>{\r\n    this.GAService.event('Next Button clicked','Additional Covers','Next')\r\n    console.log(this.additionalcoverForm.value, \"additional covers\");\r\n    this.OnRegister.emit(this.additionalcoverForm.value);\r\n    this.NextTab.emit(1)\r\n    this.OnSubmission.emit('Additional Covers form is submitted!')\r\n  }\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*.container{\r\n   \r\n    padding-top: 50px;\r\n    width: 2000px;\r\n   \r\n      \r\n}*/\r\n.mon{\r\n    text-align: left;\r\n    font-size: 15px;\r\n}\r\n.heading{\r\n    color:rgb(8,56,95);\r\n    font-family: 'Trebuchet MS',Arial,sans-serif;\r\n    font-weight: bold;\r\n} \r\n.middle-heading{\r\n    display: flex;\r\n    height: 100%;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    padding-left: 20px;\r\n}\r\n.bg-dark-blue{\r\n    background-color:  #003564;\r\n    color: #ffffff;\r\n}\r\n.sub-head{\r\n    font-weight:bold;\r\n}\r\n/* .bgn{\r\n    \r\n    text-align: right;\r\n    font-size: 15px;\r\n    padding-top: 5%;\r\n    \r\n} */\r\n.cardrow{\r\n    padding-left: 20px;\r\n    color:rgb(8,56,95);\r\n}\r\n.nearelm{\r\n    font-size: 20px;\r\n}\r\n.num{\r\n    color:rgb(8,56,95);\r\n    \r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    \r\n    padding: 0%;\r\n   \r\n}\r\n.months{\r\n    color:rgb(8,56,95);\r\n    padding-left: 25%;\r\n}\r\n.whitecard{\r\n    padding: 0%;\r\n    margin-top: 20px;\r\n}\r\n.firstcard{\r\n    /*width:800px;*/\r\n     height: auto;\r\n    /*min-width:100px;*/\r\n }\r\n .secondcard{\r\n       \r\n    /*width:800px;*/\r\n    height: auto;\r\n   \r\n    \r\n }\r\n .thirdcard{\r\n           \r\n    /*width:800px;*/\r\n    height:auto;\r\n   \r\n}\r\n.thirdparty{\r\n    background-color: rgb(8, 56, 95); \r\n    height:auto;\r\n    width:1000px;\r\n   \r\n}\r\n.policy {\r\n    color:white;\r\n    margin-left:-1px ;\r\n    margin-top: -50px;\r\n    font-size: 20px;\r\n   \r\n}\r\n.bgn  {\r\ncolor:white;\r\nmargin-left: 30px;\r\n}\r\n.card-body{\r\n    padding-top: 2px;\r\n} \r\n/* 'Times New Roman',Lucida Grande , Arial, Tahomasans-serifTrebuchet MS' */\r\n\r\n/*.firstcard{\r\n   width:2000px;\r\n    height:90px;\r\n    margin-left: 25px;\r\n    margin-right: 25px;\r\n    margin-top: -30px;\r\n    \r\n    }\r\n   \r\n.discription{\r\n        color:rgb(8, 56, 95);\r\n        padding-left: 15px;\r\n        margin-top: -5px;\r\n}\r\n.secondcard{\r\n       \r\n    width:2000px;\r\n    height:110px;\r\n    margin-left: 25px;\r\n    margin-right: 25px;\r\n    margin-top: -30px;\r\n    \r\n        }\r\n\r\n.valuebutton{\r\n            width:80px;\r\n           height:20px;\r\n           padding-top: 1px;\r\n}\r\n.afterpremium{\r\n    padding-left: 15px;\r\n    margin-top: -5px;\r\n}\r\n.afterpremium span{\r\n\r\n    color:rgb(8, 56, 95);\r\n}\r\n.bgnpremium {\r\n    margin-right: -180px;\r\n    margin-top: -1px;\r\n    text-align: right;\r\n    color:rgb(8, 56, 95);\r\n    font-size: 20px;\r\n    \r\n}\r\n .thirdcard{\r\n           \r\n            width:2000px;\r\n            height:550px;\r\n            margin-left: 25px;\r\n            margin-right: 25px;\r\n            margin-top: -30px;\r\n }*/\r\n .textcolor{\r\n    \r\n    color:rgb(8, 56, 95);\r\n    margin-top: -20px;\r\n    padding-left: 15px;\r\n    \r\n}\r\n\r\n \r\n \r\n .spc{\r\n    padding-left: 2%;\r\n}\r\n\r\n .car{\r\n     margin-left:-5px;\r\n }\r\n\r\n @media screen and (max-width: 450px){\r\n     .mon{\r\n         margin-top: 0px;\r\n     }\r\n     .bgn{\r\n        margin-left: 18px;\r\n     }\r\n    .whitecard .months{\r\n        padding-left:0%;\r\n        margin-left: 10px;\r\n    }\r\n    .whitecard .num{\r\n        margin-left: 10px;\r\n    }\r\n    .num{\r\n        margin-left: 30px;\r\n    }\r\n    .middle-heading{\r\n        margin-left: 20px;\r\n    }\r\n    .col-lg-12{\r\n       margin-left: 200px;\r\n    }\r\n    .spc{\r\n        margin-top: 0px;\r\n    }\r\n }\r\n @media all and (max-width: 767px) {\r\n    .text-small{\r\n        font-size:11px;\r\n    }\r\n}\r\n @media all and (max-width: 767px) {\r\n    .num{\r\n        font-size: 20px;\r\n        padding-left: 10%;\r\n        text-align: left;\r\n        padding-left: 0%;\r\n        padding-top: 5%;\r\n    }\r\n    .nearelm{\r\n        font-size: 13px;\r\n    }\r\n    .bgn{\r\n        font-size: 12px;\r\n        padding-left: 5%;\r\n        text-align: left;\r\n        \r\n    }\r\n    .mon{\r\n        font-size: 12px;\r\n    }\r\n    .textcolor{\r\n        display: none;\r\n    }\r\n    .middle-heading{\r\n        font-size: 15px;\r\n        padding-left: 5%;\r\n        height:80%;\r\n        padding-top: 0%;\r\n        padding-bottom: 0%;\r\n        \r\n    }\r\n    .adjust{\r\n        padding-left: 0%;\r\n        padding-top: 5%;\r\n    }\r\n    \r\n    .spc{\r\n        padding-left: 6%;\r\n    }\r\n}\r\n@media screen and (max-width: 575px){\r\n    .nextbtn{\r\n        width: 250px;\r\n        margin: auto;\r\n        display: block;\r\n     \r\n        \r\n    }\r\n}",
                    "styleUrl": "./additional-covers.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    },
                    {
                        "name": "com",
                        "type": "CommonDataService"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "com",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n    <h1 class=\"heading \">Additional covers</h1><br>\r\n    <form [formGroup]=\"additionalcoverForm\" (submit)=\"next()\">\r\n        <div class=\"row \">\r\n            <div class=\"card shadow p-3 mb-5 rounded thirdparty\">\r\n                <div class=\"card-body bg-dark-blue\">\r\n                    <div class=\"row\">\r\n                         <div class=\"col-md-1 col-2 motor-img p-0\">\r\n                            <img src=\"../../assets/motor_policy.PNG\">\r\n                            \r\n                        </div>\r\n                        \r\n                        <!--<div class=\"col-sm-11 col-9 pr-0 m-auto adjust\" style=\"background-color: rgb(6, 112, 20);\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-9 col-12 p-0\">\r\n                                    <span class=\"middle-heading text-small\" style=\"color: yellow;\">Motor Third party Liability Policy</span>\r\n                                </div>\r\n                                <div class=\"col-sm-5 col-auto col-8\">\r\n                                    <div>\r\n                                        <div class=\"num\" style=\"color: whitesmoke;\">382<span class=\"nearelm\">,00 BGN</span></div>\r\n                                        <div class=\"bgn\" >\r\n                                        Four payments\r\n                                        </div> \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>-->\r\n                    \r\n                        <div class=\"col-md-10 col-9 pr-0 m-auto\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-9 col-12 p-0\">\r\n                                    <span class=\"middle-heading text-small\">Motor Third party Liability Policy</span>\r\n                                </div>\r\n                                <div class=\"col-md-3 col-12 p-0\">\r\n                                    <div>\r\n                                        <div class=\"num\" style=\"color: whitesmoke;\">382<span class=\"nearelm\">,00 BGN</span></div>\r\n                                        <div class=\"bgn\">\r\n                                            Four payments\r\n                                        </div> \r\n                                    </div>\r\n                                </div>\r\n                           \r\n                        </div>\r\n                            </div>\r\n                    \r\n                   <!---->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                \r\n                        <!-- <div class=\"col-lg-7 col-md-8 col-4 col-7 policy\">\r\n                         <span>Motor Third Party Liability Policy</span></div>\r\n                        \r\n                        <div class=\"col-lg-5 col-md-4 col-auto col-5 bgn \">\r\n                            382,00BGN<br>\r\n                            <h6>Four payments</h6>\r\n                        </div> -->\r\n                        <div class=\"border shadow p-3 mb-3 bg-white rounded firstcard\">\r\n                            <div class=\"row cardrow\">\r\n                                <div class=\"col-auto mr-auto pt-1\">\r\n                                    <label class=\"form-check-label\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"cover\" formControlName=\"cover\" [(ngModel)]=\"cover\" (change)=\"change()\" [checked]=\"cover==='None'\"><h3 class=\"sub-head\">None</h3></label>\r\n                                        <div class=\"mon\">Description of additional cover here</div>\r\n                                </div>   \r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"border shadow p-3 mb-3 bg-white rounded secondcard\">\r\n                            <div class=\"row cardrow\">\r\n                                <div class=\"col-auto mr-auto pt-1\">\r\n                                    <label class=\"form-check-label\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"cover\" formControlName=\"cover\" value=\"premium\" (change)=\"change()\"><h3 class=\"sub-head\">Premium</h3></label>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-xs-4\">\r\n                                            <button class=\"btn btn-success mon\">Best Value</button>\r\n                                        </div>&nbsp;&nbsp;&nbsp;\r\n                                        <div class=\"col-md-8.5\" style=\"padding-top: 1.5%;\">\r\n                                            <span class=\"mon\">Description of additional cover here</span>\r\n                                        </div>  \r\n                                        </div>\r\n                                        \r\n                                </div>   \r\n                                <div class=\"col-sm-3 whitecard\">\r\n                                    <div class=\"num\">+25<span class=\"nearelm\">,00 BGN</span></div>\r\n                                    <div class=\"months\">\r\n                                        for 12 months\r\n                                    </div> \r\n                                        \r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n                            <br><a href=\"www.google.com\"><u class=\"spc\">See what's more</u></a>\r\n                        </div>\r\n                        <!---->\r\n                        <div class=\"border shadow p-3 mb-3 bg-white rounded thirdcard\">\r\n                            <div class=\"row cardrow\">\r\n                                <div class=\"col-auto mr-auto pt-1\">\r\n                                    <label class=\"form-check-label\">\r\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"cover\" formControlName=\"cover\" [(ngModel)]=\"cover\" (change)=\"change()\" [checked]=\"cover==='VIP'\"><h3 class=\"sub-head\">VIP</h3></label>\r\n                                        <div class=\"mon\">Description of additional cover here\r\n                                        </div>\r\n                                        \r\n                                </div>   \r\n                                <div class=\"col-sm-3 whitecard\">\r\n                                    <div class=\"num\">+80<span class=\"nearelm\">,00 BGN</span></div>\r\n                                    <div  class=\"months\">\r\n                                        for 12 months\r\n                                    </div> \r\n                                     \r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <br/>\r\n                            <div class=\"textcolor\" >\r\n                                <p><b>Services provded under the \"PREMIUM\" clause, but with higher\r\n                                        limits when transporting vehicles</b></p>\r\n        \r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col-0 image\">\r\n                                        <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\r\n                                    <span class=\"col-10\"> In case of an insurance event(no limit in the number of transports\r\n                                        and up to 900 km\r\n                                        mileage)</span>\r\n                                </div>\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col-0 off-set-0\">\r\n                                        <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\r\n                                    <span class=\"col-10 wid\">Technical failure(no mileage limit and up to 2 transports)\r\n                                    </span><br>\r\n                                </div>\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col-0 off-set-0\">\r\n                                        <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\r\n                                    <span class=\"col-10 wid\">Wrong fuet(disposable)\r\n                                    </span><br>\r\n                                </div><br>\r\n        \r\n                                <p><b>And more:</b></p>\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col-0 off-set-0\">\r\n                                        <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\">\r\n                                    </div>\r\n                                    <span class=\"col-10 wid\">\r\n                                        Stay in the parking lot of the damaged car </span><br>\r\n                                </div>\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col-0 off-set-0\">\r\n                                        <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\">\r\n                                    </div>\r\n                                    <span class=\"col-10 wid\">Overview in a hotel of the driver of the vehicle </span><br>\r\n                                </div>\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col-0 off-set-0\">\r\n                                        <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\r\n                                    <span class=\"col-10 wid\">Transportation of persons traveling in vehicles, in case the\r\n                                        vehicle\r\n                                        has suffered damage\r\n                                    </span><br>\r\n                                </div>\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col-0 off-set-0\">\r\n                                        <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\r\n                                    <span class=\"col-10 wid\">Medical transportation in case of an accident</span><br>\r\n                                </div>\r\n                                <div class=\"form-row\">\r\n                                    <div class=\"col-0 off-set-0\">\r\n                                        <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"></div>\r\n                                    <span class=\"col-10 wid\">Costs of examinations, medical examinations and manipulations in\r\n                                        case of bodily\r\n                                        injuries to the driver and / or persons traveling in the vehicle as a result of the\r\n                                        accident</span><br> \r\n                                    </div>\r\n                                    <div class=\"form-row\">\r\n                                        <div class=\"col-0 off-set-0\">\r\n                                            <img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\">\r\n                                        </div>\r\n                                        <span class=\"col-10 wid\">In case of damages covered by Casco + insurance - up to 2\r\n                                            vehicle inspections at\r\n                                            the address indicated by the client</span><br>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <a href=\"www.google.com\"><u class=\"spc\">Hide what's included</u></a>\r\n                        </div>\r\n\r\n\r\n        \r\n            <br/>\r\n            <button type=\"submit\" class=\"btn btn-primary rounded-pill  col-sm-4 col-lg-2 col-md-3 nextbtn\" [disabled]=\"!additionalcoverForm.valid\"\r\n                matStepperNext>\r\n                Next</button>\r\n    </form>\r\n\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-4c124a2d2bee653624738464f0627795",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'stepperForm'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'stepperForm';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\r\n<!-- <app-delivery></app-delivery> -->\r\n\r\n<!-- <app-tab2></app-tab2> -->\r\n<!-- <app-login></app-login> -->\r\n<!-- <app-tabs></app-tabs> -->"
        },
        {
            "name": "ContactComponent",
            "id": "component-ContactComponent-ba1ed64a205a3af42ae8075610d24fc7",
            "file": "src/app/components/contact/contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contact",
            "styleUrls": [
                "./contact.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./contact.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appartment",
                    "line": 20,
                    "type": "String"
                },
                {
                    "name": "block",
                    "line": 18,
                    "type": "String"
                },
                {
                    "name": "city",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "entrance",
                    "line": 19,
                    "type": "String"
                },
                {
                    "name": "No",
                    "line": 17,
                    "type": "String"
                },
                {
                    "name": "phone",
                    "line": 21,
                    "type": "String"
                },
                {
                    "name": "pincode",
                    "line": 15,
                    "type": "String"
                },
                {
                    "name": "street",
                    "line": 16,
                    "type": "String"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "registerForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  @Output() OnRegister = new EventEmitter()\r\n  @Output() OnToggle = new EventEmitter()\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n  @Input() city:string;\r\n  @Input() pincode:String;\r\n  @Input() street:String;\r\n  @Input() No:String;\r\n  @Input() block:String;\r\n  @Input() entrance:String;\r\n  @Input() appartment:String;\r\n  @Input() phone:String;\r\n  registerForm: FormGroup;\r\n  constructor(private formBuilder: FormBuilder, private GAService: GoogleAnalyticsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      city: ['', Validators.required],\r\n      pincode: ['', Validators.required],\r\n      street: [''],\r\n      No: [''],\r\n      block:[''],\r\n      entrance:[''],\r\n      appartment:[''],\r\n      phone:['',[Validators.required,Validators.pattern(\"^[0-9]+$\"),Validators.minLength(8),Validators.maxLength(9)]]\r\n    });\r\n  }\r\n  submit=()=>{\r\n    this.GAService.event('Next Button clicked','Contact Details','Next')\r\n    console.log(this.registerForm.value, \"policy details\");\r\n    this.OnRegister.emit(this.registerForm.value);  \r\n    this.OnSubmission.emit('Contact Details form is submitted!')\r\n  }\r\n  change=()=>{\r\n    if(this.registerForm.valid){\r\n      this.OnToggle.emit(true)\r\n      this.OnRegister.emit(this.registerForm.value);\r\n    }else{\r\n      this.OnToggle.emit(false)\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Style inputs with type=\"text\", select elements and textareas */\r\n\r\n\r\nh1{\r\n    \r\n  color:rgb(8,56,95);\r\n  font-family: 'Trebuchet MS',Arial,sans-serif;\r\n  font-weight: bold;\r\n}\r\nlabel{\r\n  color:rgb(8,56,95);\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n\r\n/* Style the submit button with a specific background color etc */\r\n\r\n@media screen and (max-width: 1090px){\r\n  .space{\r\n      padding: 4px;\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n@media screen and (max-width: 800px) {\r\n  .line{\r\n      display : none;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 575px){\r\n  .nextbtn{\r\n    width: 250px;\r\n    margin: auto;\r\n    display: block;\r\n \r\n    \r\n}\r\n}",
                    "styleUrl": "./contact.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n  \r\n    <h1><b>Contact Details</b></h1><br>\r\n    <form [formGroup]=\"registerForm\" (submit)=\"submit()\">\r\n      <div class=\"row\">\r\n       \r\n          <label for=\"city\" class=\"col-lg-7\">City</label>\r\n       \r\n        <div class=\"col-md-3 space\">\r\n          <select id=\"city\" name=\"city\" class=\"form-control\" [(ngModel)]=\"city\" formControlName=\"city\" (change)=\"change()\">\r\n            <option selected disabled value=\"\">--SELECT--</option>\r\n            <option value=\"Sophia City\" [selected]=\"city==='SophiaCity'\">Sofia City</option>\r\n            <option value=\"techCity\" [selected]=\"city==='techCity'\">Tech City</option>\r\n            <option value=\"electronicCity\" [selected]=\"city==='electronicCity'\">Electronic City</option>\r\n          </select>\r\n          <div\r\n            *ngIf=\"registerForm.controls.city.hasError('required') &&(registerForm.controls.city.dirty || registerForm.controls.city.touched)\"\r\n            class=\"error\">This field is mandatory</div>\r\n        </div>\r\n\r\n        <div class=\"col-md-4 col-4\">\r\n          <input type=\"text\" id=\"num\" name=\"num\" [(ngModel)]=\"pincode\" placeholder=\"Pin Code\" class=\"form-control\" (change)=\"change()\"\r\n            formControlName=\"pincode\">\r\n          <div\r\n            *ngIf=\"registerForm.controls.pincode.hasError('required') &&(registerForm.controls.pincode.dirty || registerForm.controls.pincode.touched)\"\r\n            class=\"error\">This field is mandatory</div>\r\n\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <div class=\" row\">\r\n        <div class=\"col-md-4 col-12\">\r\n          <label for=\"street\">Street and Number</label>\r\n        </div>\r\n        <div class=\"col-md-4 col-8\">\r\n          <input type=\"text\" id=\"street\" [(ngModel)]=\"street\" name=\"streetName\" class=\"form-control \" placeholder=\"Street Name\"\r\n            (change)=\"change()\" formControlName=\"street\">\r\n        </div>\r\n\r\n        <div class=\"col-md-4 col-4\">\r\n          <input type=\"text\" id=\"streetNumber\" [(ngModel)]=\"No\" name=\"streetNumber\" placeholder=\"Street  number\" class=\"form-control\"\r\n            size=\"10\" (change)=\"change()\" formControlName=\"No\"><br>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3 col-12\">\r\n          <label for=\"block\">Block,Entrance and Apartment</label>\r\n        </div>\r\n        <div class=\"col-md-3 offset-md-1 col-4\">\r\n          <input type=\"text\" id=\"block\" class=\"form-control\" [(ngModel)]=\"block\" placeholder=\"Block\" name=\"blockName\" (change)=\"change()\"\r\n            formControlName=\"block\">\r\n        </div>\r\n\r\n        <label for=\"entranceName\"></label>\r\n        <div class=\"col-md-3 col-4\">\r\n          <input type=\"text\" class=\"form-control\" id=\"entranceName\" [(ngModel)]=\"entrance\" placeholder=\"Entrance\" name=\"entranceName\"\r\n            (change)=\"change()\" formControlName=\"entrance\">\r\n        </div>\r\n        <!-- </div> -->\r\n\r\n        <label for=\"appartmentName\"></label>\r\n        <div class=\"col-md-2 col-4\">\r\n          <input type=\"text\" class=\"form-control\" id=\"appartmentName\" [(ngModel)]=\"appartment\" placeholder=\"Appartment\" name=\"appartmentName\"\r\n            (change)=\"change()\" formControlName=\"appartment\"><br>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <label for=\"phoneNo\">Phone Number</label>\r\n        </div>\r\n        <div class=\"col-md-4 ml-auto\">\r\n          <input type=\"text\" class=\"form-control\" id=\"phoneNo\" [(ngModel)]=\"phone\" placeholder=\"Phone Number\" (change)=\"change()\"\r\n            formControlName=\"phone\"><br>\r\n          <div\r\n            *ngIf=\"registerForm.controls.phone.hasError('required') &&(registerForm.controls.phone.dirty || registerForm.controls.phone.touched)\"\r\n            class=\"error\">This field is mandatory</div>\r\n          <div\r\n            *ngIf=\"registerForm.controls.phone.hasError('pattern') &&(registerForm.controls.phone.dirty || registerForm.controls.phone.touched)\"\r\n            class=\"error\">Only numbers allowed</div>\r\n          <div\r\n            *ngIf=\"(!registerForm.controls.phone.hasError('pattern') && (registerForm.controls.phone.hasError('minlength') || registerForm.controls.phone.hasError('maxlength'))) &&(registerForm.controls.phone.dirty || registerForm.controls.phone.touched)\"\r\n            class=\"error\">Enter valid phone number</div>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn btn-primary rounded-pill col-sm-4 col-lg-2 col-md-3\" type=\"submit\" matStepperNext\r\n      [disabled]=\"!registerForm.valid\">Next</button>\r\n    </form>\r\n    \r\n \r\n"
        },
        {
            "name": "DeliveryComponent",
            "id": "component-DeliveryComponent-1e7bd80e81cb9288a0ca02040a440091",
            "file": "src/app/components/delivery/delivery.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delivery",
            "styleUrls": [
                "./delivery.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./delivery.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appt",
                    "line": 21,
                    "type": "String"
                },
                {
                    "name": "block",
                    "line": 19,
                    "type": "String"
                },
                {
                    "name": "city",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "contact",
                    "line": 24,
                    "type": "String"
                },
                {
                    "name": "entrance",
                    "line": 20,
                    "type": "String"
                },
                {
                    "name": "fullName",
                    "line": 14,
                    "type": "String"
                },
                {
                    "name": "notes",
                    "line": 22,
                    "type": "String"
                },
                {
                    "name": "number",
                    "line": 18,
                    "type": "String"
                },
                {
                    "name": "pincode",
                    "line": 16,
                    "type": "String"
                },
                {
                    "name": "street",
                    "line": 17,
                    "type": "String"
                },
                {
                    "name": "type",
                    "line": 23,
                    "type": "String"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "cities",
                    "defaultValue": "[\"New Delhi\",\"Mumbai\", \"Chennai\", \"Bangalore\", \"Kolkata\", \"Mysore\", \"Pune\", \"Jaipur\"]",
                    "type": "String[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "codes",
                    "defaultValue": "[55, 86, 33, 49, 91]",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "detailsForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                },
                {
                    "name": "register",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                },
                {
                    "name": "toggle1",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\n\r\n@Component({\r\n  selector: 'app-delivery',\r\n  templateUrl: './delivery.component.html',\r\n  styleUrls: ['./delivery.component.css']\r\n})\r\nexport class DeliveryComponent implements OnInit {\r\n  @Output() OnRegister= new EventEmitter();\r\n  @Output() OnToggle=new EventEmitter();\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n @Input() fullName:String;\r\n  @Input() city:string;\r\n  @Input() pincode:String;\r\n  @Input() street:String;\r\n  @Input() number :String;\r\n  @Input() block:String;\r\n  @Input() entrance:String;\r\n  @Input() appt:String;\r\n  @Input() notes:String;\r\n  @Input() type:String;\r\n  @Input() contact:String;\r\n  detailsForm: FormGroup;\r\n\r\n  cities:String[] = [\"New Delhi\",\"Mumbai\", \"Chennai\", \"Bangalore\", \"Kolkata\", \"Mysore\", \"Pune\", \"Jaipur\"];\r\n\r\n  codes:number[] = [55, 86, 33, 49, 91];\r\n\r\n  submitted:boolean = false;\r\n\r\n  change=()=>{\r\n    if(this.detailsForm.valid){\r\n      this.OnToggle.emit(true)\r\n      this.OnRegister.emit(this.detailsForm.value);\r\n    }else{\r\n      this.OnToggle.emit(false)\r\n      // this.OnRegister.emit(this.personalForm.value);\r\n    }\r\n  }\r\n  toggle() {\r\n    this.submitted = true;\r\n  }\r\n\r\n  toggle1() {\r\n    this.submitted = false;\r\n  }\r\n\r\n  constructor(private formBuilder: FormBuilder, private GAService: GoogleAnalyticsService) { }\r\n\r\n  ngOnInit() {\r\n    this.detailsForm = this.formBuilder.group({\r\n      fullName: ['', Validators.compose([Validators.required,Validators.pattern(\"^[a-zA-Z ]+\")])],\r\n      city: ['', Validators.required],\r\n      pincode: ['', Validators.compose([Validators.required,Validators.maxLength(6)])],\r\n      street: [''],\r\n      number: [''],\r\n      block: [''],\r\n      entrance: [''],\r\n      appt: [''],\r\n      contact: ['', Validators.compose([Validators.required,Validators.max(999999999),Validators.min(10000000)])],\r\n      business: ['', Validators.required],\r\n      notes: ['']\r\n    });\r\n  };\r\n\r\n  register(){\r\n    this.GAService.event('Next Button clicked','Delivery','Next')\r\n    this.OnRegister.emit(this.detailsForm.value);\r\n    this.OnSubmission.emit('Delivery form is submitted!')\r\n  }\r\n  get formControls(){\r\n    return this.detailsForm.controls\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container-fluid{\r\n    padding-bottom: 200px;\r\n    /* width: 30cm; */\r\n}\r\n\r\n.display-1 {\r\n    font-size: 45px;\r\n    color: rgb(12, 44, 70);\r\n}\r\n\r\n.address {\r\n    font-size: large;\r\n}\r\n\r\n.input-1 {\r\n    padding-left: 10px;\r\n}\r\n\r\n.radio-1 {\r\n    height: 25px;\r\n    width: 25px;\r\n}\r\n\r\n.input-1_radio-1 {\r\n    padding-left: 10px;\r\n    color: rgb(12, 44, 70);\r\n}\r\n\r\n.input-1_input-1 {\r\n    padding-left: 36px;\r\n}\r\n\r\n.form-1 {\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    border-radius: 10px;\r\n    background-color: #F0F8FF;\r\n}\r\n\r\n.form-1_row-1 {\r\n    padding-top: 30px;\r\n}\r\n.form-1_row-2 {\r\n    padding-left: 20px;\r\n    font-size: medium;\r\n}\r\n\r\n.form-1_row-3 {\r\n    color: rgb(12, 44, 70);\r\n    height: 40px;\r\n    font-size: large;\r\n    border-radius: 10px;\r\n}\r\n\r\n.form-1_row-4 {\r\n    padding-right: 15px;\r\n\r\n}\r\n\r\n.form-1_row-5 {\r\n    padding-top: 30px;\r\n    padding-bottom: 30px;\r\n}\r\n\r\n.details {\r\n    font-size: 30px;\r\n    color: rgb(12, 44, 70);\r\n}\r\n\r\n.details_row-1 {\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.details_row-2 {\r\n    padding-left: 10px;\r\n    padding-top: 30px;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.details_row-3 {\r\n    font-size: large;\r\n    color: rgb(12, 44, 70);\r\n}\r\n\r\n.details_row-4 {\r\n    resize: none;\r\n    border-radius: 10px;\r\n    font-size: medium;\r\n}\r\n\r\n.delivery-2 {\r\n    /* padding-left: 20px;\r\n    padding-right: 20px;\r\n    padding-top: 20px; */\r\n    margin-left: 0.5cm;\r\n}\r\n\r\np{\r\n    text-align: justify;\r\n}\r\n\r\n@media all and (max-width: 767px) {\r\n    .text-small{\r\n        font-size:11px;\r\n    }\r\n}\r\n\r\n.user-key{\r\n    width: 40px;\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 15px;\r\n    left: -17px;\r\n}\r\n\r\n.delivery-1_row-1 {\r\n    border: gainsboro solid 1px;\r\n    border-radius: 10px;\r\n    font-size: large;\r\n}\r\n\r\n.delivery-1_row-2 {\r\n    padding-top: 30px;\r\n    padding-left: 30px;\r\n}\r\n\r\n.btn {\r\n    font-size: large;\r\n    width: 80px;\r\n    border-radius: 15px;\r\n}\r\n\r\n.heading{\r\n    color: rgb(8, 56, 95);\r\n    font-family: 'Trebuchet MS', Arial, sans-serif;\r\n    font-weight: bold;\r\n}\r\n\r\n.sub-head{\r\n    font-weight: bold;\r\n    color: rgb(8, 56, 95);\r\n    font-family: 'Trebuchet MS', Arial, sans-serif;\r\n}\r\n.nextbtn{\r\n    min-width:100px;\r\n}\r\n@media screen and (max-width: 575px){\r\n    .nextbtn{\r\n        width: 250px;\r\n        margin: auto;\r\n        display: block;\r\n    }\r\n        \r\n}",
                    "styleUrl": "./delivery.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formControls": {
                    "name": "formControls",
                    "getSignature": {
                        "name": "formControls",
                        "type": "",
                        "returnType": "",
                        "line": 73
                    }
                }
            },
            "templateData": "<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n    <script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\r\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>\r\n    <title>Delivery</title>\r\n</head>\r\n<body>\r\n    <!--<div class=\"container overflowAuto h-100\" style=\"margin-left: auto !important;\">-->\r\n    \r\n        <!-- Heading --><br>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-10 col-sm-offset-1\">\r\n                <h1 class=\"heading\"><b>Delivery Address</b></h1>\r\n            </div>\r\n        </div><br>\r\n        <!-- Heading -->\r\n\r\n        <!-- Form -->\r\n        <div class=\"row\">\r\n            <div class=\"container-fluid\">\r\n                <form [formGroup]=\"detailsForm\" (ngSubmit)=\"register()\">\r\n                    <!-- Form -->\r\n                    <div>\r\n                        <div class=\"form-1\">\r\n                            <div class=\"row form-group form-1_row-1\">\r\n                                <div class=\"col-md-4 form-1_row-2\">\r\n                                    <label>Full Name</label>\r\n                                </div>\r\n                                <div class=\"col-sm-6 col-sm-offset-2\">\r\n                                    <input type=\"text\" formControlName=\"fullName\" class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"fullName\" id=\"firstName\">\r\n                                    <div class=\"error\" *ngIf=\"formControls.fullName.touched && formControls.fullName.errors\">\r\n                                        <div *ngIf=\"formControls.fullName.errors.required\">This field is mandatory</div>\r\n                                        <div *ngIf=\"formControls.fullName.errors.pattern\">Only alphabets allowed</div>\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div class=\"form-1_row-4\"><hr></div>\r\n                            <div class=\"row form-group form-1_row-1\">\r\n                                <div class=\"col-md-4 form-1_row-2\">\r\n                                    <label>City & Pincode</label>\r\n                                </div>\r\n                                <div class=\"col-sm-4 col-sm-offset-2\">\r\n                                    <select name=\"city\" id=\"city\"  formControlName=\"city\" [(ngModel)]=\"city\" class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"city\">\r\n                                        <option selected disabled value=\"\">--SELECT--</option>\r\n                                        <option value=\"{{city}}\" *ngFor=\"let city of cities\">{{city}}</option>\r\n                                    </select>\r\n                                    <div class=\"error\" *ngIf=\"formControls.city.touched && formControls.city.errors\">\r\n                                        <div *ngIf=\"formControls.city.errors.required\">This field is mandatory</div>\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div class=\"col-sm-2\">\r\n                                    <input formControlName=\"pincode\" type=\"text\"  class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"pincode\">\r\n                                    <div class=\"error\" *ngIf=\"formControls.pincode.touched && formControls.pincode.errors\">\r\n                                        <div *ngIf=\"formControls.pincode.errors.required\">This field is mandatory</div>\r\n                                        <div *ngIf=\"formControls.pincode.errors.maxlength\">Only 6 characters are allowed</div>\r\n                                       \r\n                                    </div><br>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div class=\"form-1_row-4\"><hr></div>\r\n                            <div class=\"row form-group form-1_row-1\">\r\n                                <div class=\"col-md-4 form-1_row-2\">\r\n                                    <label>Street & Number</label>\r\n                                </div>\r\n                                <div class=\"col-sm-4 col-sm-offset-2\">\r\n                                    <input type=\"text\" formControlName=\"street\" class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"street\">\r\n                                    <!-- <div class=\"error\" *ngIf=\"formControls.street.touched && formControls.street.errors\">\r\n                                        <div *ngIf=\"formControls.street.errors.required\">Street is required</div>\r\n                                        <div *ngIf=\"formControls.street.errors.minlength\">Street should be atleast 3 characters</div>\r\n                                       \r\n                                    </div> -->\r\n                                </div>\r\n                                \r\n                                <div class=\"col-sm-2\">\r\n                                    <input type=\"text\" formControlName=\"number\" class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"number\"> \r\n                                    <div class=\"error\" *ngIf=\"formControls.number.touched && formControls.number.errors\">\r\n                                        <!-- <div *ngIf=\"formControls.number.errors.required\">Number is required</div> -->\r\n                                                                          \r\n                                    </div><br>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div class=\"form-1_row-4\"><hr></div>\r\n                            <div class=\"row form-group form-1_row-5\">\r\n                                <div class=\"col-md-4 form-1_row-2\">\r\n                                    <label>Block, Entrance & Appartment</label>\r\n                                </div>\r\n                                <div class=\"col-sm-2 col-sm-offset-1\">\r\n                                    <input type=\"text\" formControlName=\"block\" class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"block\">\r\n                                    <!-- <div class=\"error\" *ngIf=\"formControls.block.touched && formControls.block.errors\">\r\n                                        <div *ngIf=\"formControls.block.errors.required\">Block is required</div>\r\n                                    </div> -->\r\n                                </div>\r\n                                \r\n                                <div class=\"col-sm-2\">\r\n                                    <input type=\"text\" formControlName=\"entrance\" class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"entrance\">\r\n                                    <!-- <div class=\"error\" *ngIf=\"formControls.entrance.touched && formControls.entrance.errors\">\r\n                                        <div *ngIf=\"formControls.entrance.errors.required\">Entrance is required</div>\r\n                                    </div> -->\r\n                                </div>\r\n                                \r\n                                <div class=\"col-sm-2\">\r\n                                    <input type=\"text\" formControlName=\"appt\" class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"appt\">\r\n                                    <!-- <div class=\"error\" *ngIf=\"formControls.appt.touched && formControls.appt.errors\">\r\n                                        <div *ngIf=\"formControls.appt.errors.required\">Appartment is required</div>\r\n                                    </div> -->\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div><br>\r\n                        <!-- Form -->\r\n                        <!-- Additional Details -->\r\n                        <h2 class=\"sub-head\"><b>Additonal Details</b></h2>\r\n                        <br>\r\n                        <div class=\"row form-group details_row-1\">\r\n                            <div class=\"col-md-4\" style=\"font-size: medium;\">\r\n                                Contact Number\r\n                            </div>\r\n                            <div class=\"col-sm-5 col-sm-offset-3\">\r\n                                <input type=\"number\" formControlName=\"contact\" class=\"form-control form-1_row-3\" (change)=\"change()\" [(ngModel)]=\"contact\">\r\n                                <div class=\"error\" *ngIf=\"formControls.contact.touched && formControls.contact.errors\">\r\n                                    <div *ngIf=\"formControls.contact.errors.required\">This field is mandatory</div>\r\n                                    <div *ngIf=\"formControls.contact.errors.min\">Minimum 8 charaters are required</div>\r\n                                    <div *ngIf=\"formControls.contact.errors.max\">Maximum 9 charaters are allowed</div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"details_row-2\">\r\n                            <div class=\"row form-group\">\r\n                                <div class=\"col-md-5\">\r\n                                    <span style=\"font-size: medium;\">Type of Business</span>\r\n                                    <p style=\"font-size: small; text-align: justify;\">For Business address your package will be delivered only during\r\n                                        normal work days from 9:00 to 17:00\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"col-md-7 details_row-3\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-6\">\r\n                                            <input type=\"radio\" formControlName=\"business\" name=\"business\" class=\"radio-1\" (change)=\"change()\" [(ngModel)]=\"type\" [checked]=\"type==='Home'\" value=\"Home\">&nbsp;Home\r\n                                        </div>\r\n                                        <div class=\"col-sm-6\">\r\n                                            <input type=\"radio\" formControlName=\"business\" name=\"business\" class=\"radio-1\" (change)=\"change()\" [(ngModel)]=\"type\" [checked]=\"type==='Business'\" value=\"Business\">&nbsp;Business\r\n                                        </div>\r\n                                        <div class=\"error\" *ngIf=\"formControls.business.touched && formControls.business.errors\">\r\n                                            <div *ngIf=\"formControls.business.errors.required\">This field is mandatory</div>\r\n                                        </div>\r\n                                    </div>                            \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"row form-group details_row-1\">\r\n                            <div class=\"col-sm-4\" style=\"font-size: medium;\">\r\n                                Additional Notes\r\n                            </div>\r\n                            <div class=\"col-sm-8 col-sm-offset-1\">\r\n                                <textarea name=\"notes\" id=\"notes\" cols=\"30\" rows=\"5\" formControlName=\"notes\" class=\"form-control details_row-4\" (change)=\"change()\"></textarea>\r\n                            </div>\r\n                            <div class=\"col-sm-12\" style=\"text-align: right; font-size: small;\">Optional</div>\r\n                        </div>\r\n                        <!-- Additional Details -->\r\n                    </div>                    \r\n                    <!-- Delivery Estimate -->\r\n                    <!-- <div class=\"delivery-2\">\r\n                        <div class=\"delivery-1_row-1\">\r\n                            <div class=\"delivery-1_row-2\">\r\n                                <img class=\"delivery-icon\" src=\"../../assets/delivery.jpeg\">\r\n                                <b style=\"color: grey;\">Estimated delivery in your area is 2 days</b>\r\n                                <br>\r\n                                <p><a href=\"\">More info here</a></p>\r\n                            </div>\r\n                        </div>\r\n                    </div><br><br> -->\r\n\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div style=\"margin-left: 0.5cm;width: 26.2cm;\">\r\n                                <div class=\"card border mb-4\">\r\n                                    <img class=\"user-key\" src=\"../../assets/delivery.jpeg\">\r\n                                    <div class=\"card-body\">\r\n                                        <p class=\"card-text pl-3 text-color\">\r\n                                            <b style=\"color: grey;\">Estimated delivery in your area is 2 days</b>\r\n                                            <br>\r\n                                            <a href=\"\">More info here</a>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- Delivery Estimate -->\r\n                    <!-- Button -->\r\n                    <button type=\"submit\" class=\"btn btn-primary rounded-pill col-sm-4 col-lg-2 col-md-3 nextbtn\" mat-raised-button  matStepperNext [disabled]=\"detailsForm.invalid\">Next</button>\r\n                    <!-- Button -->\r\n                </form>               \r\n            </div>\r\n        </div><br><br>\r\n        <!-- Form -->        \r\n    \r\n    \r\n</body>\r\n</html>"
        },
        {
            "name": "InstallmentComponent",
            "id": "component-InstallmentComponent-e115fc1c910ea3d46cab10c0390a6be3",
            "file": "src/app/components/installment/installment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-installment",
            "styleUrls": [
                "./installment.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./installment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "term",
                    "line": 19,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnFourPayments",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 26,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 17,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSinglePayment",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnTwoPayments",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "errorMessage",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "installmentForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "name",
                    "defaultValue": "'karan'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "obj",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "serviceData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31
                },
                {
                    "name": "submitInstalmentForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder,Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\nimport { InstallmentService } from './installment.service';\r\nimport { AdditionalCoversComponent } from '../additional-covers/additional-covers.component';\r\nimport { CommonDataService } from 'src/app/common-data.service';\r\n\r\n@Component({\r\n  selector: 'app-installment',\r\n  templateUrl: './installment.component.html',\r\n  styleUrls: ['./installment.component.css']\r\n})\r\nexport class InstallmentComponent implements OnInit {\r\n  installmentForm: FormGroup;\r\n  errorMessage;\r\n  @Output() OnRegister = new EventEmitter()\r\n  @Output() OnToggle = new EventEmitter()\r\n  @Input() term: string\r\n  serviceData\r\n obj\r\n name='karan';\r\n\r\n @Output() OnSinglePayment = new EventEmitter<any>();\r\n @Output() OnTwoPayments = new EventEmitter<any>();\r\n @Output() OnFourPayments = new EventEmitter<any>();\r\n @Output() OnSubmission = new EventEmitter<any>();\r\n\r\n  constructor(private formBuilder: FormBuilder,private router: Router, private GAService: GoogleAnalyticsService, private installmentService:InstallmentService,private com:CommonDataService) { }\r\n\r\n  ngOnInit()  {\r\n    this.installmentForm=this.formBuilder.group({\r\n      term: ['',Validators.required],\r\n      installment:['']\r\n    });\r\n    this.installmentService.getInstallmentData().subscribe((res)=>{\r\n      this.serviceData=res;\r\n      console.log(res);\r\n      \r\n    },\r\n    (err)=>{\r\n      this.errorMessage=err.error.message;\r\n      console.log(this.errorMessage);\r\n      \r\n    })\r\n    console.log(this.serviceData);\r\n    \r\n  }\r\n  submitInstalmentForm(){\r\n    \r\n    this.router.navigate(['/']);\r\n  }\r\n  submit=()=>{\r\n    this.GAService.event('Next Button clicked','Installment','Next')\r\n    this.OnRegister.emit(this.obj);\r\n    this.OnSubmission.emit('Installemt form is submitted!')\r\n  }\r\n  change=()=>{\r\n   \r\n    for(let element of this.serviceData){\r\n      if(element.title==this.installmentForm.value.term){\r\n        var obj={\r\n          term:this.installmentForm.value.term,\r\n          installments:element.installments,\r\n          amount:element.amount\r\n          // installment:this.serviceData[this.installmentForm.value]\r\n        }\r\n        this.obj=obj\r\n        \r\n\r\n\r\n      }\r\n    }\r\n    if(this.installmentForm.valid){\r\n      this.OnToggle.emit(true)\r\n      this.OnRegister.emit(obj);\r\n    }else{\r\n      this.OnToggle.emit(false)\r\n    }\r\n    this.com.installmentData.next(obj);\r\n    // code for storybook START\r\n    if(this.obj.term == this.serviceData[0].title)\r\n      this.OnSinglePayment.emit('You have opted Single Payment option');\r\n    else if(this.obj.term == this.serviceData[1].title)\r\n      this.OnTwoPayments.emit('You have opted Two Payments option');\r\n    else\r\n      this.OnFourPayments.emit('You have opted Four Payments option');\r\n    // code for storybook START\r\n  }\r\n\r\n  get formControl(){\r\n    return this.installmentForm.controls\r\n  }\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*.container{\r\n    margin: 0px;\r\n    padding-top: 50px;\r\n    width: 2000px;\r\n}*/\r\n\r\n/*.overflowAuto {\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n  }*/\r\n.heading{\r\n    color:rgb(8,56,95);\r\n    font-family: 'Trebuchet MS',Arial,sans-serif;\r\n    font-weight: bold;\r\n} \r\n.sub-head{\r\n    font-weight:bold;\r\n}\r\n.bgn{\r\n    color:rgb(8,56,95);\r\n    text-align: right;\r\n    font-size: 15px;\r\n    padding-top: 5%;\r\n}\r\n.cardrow{\r\n    padding-left: 20px;\r\n    color:rgb(8,56,95);\r\n}\r\n.nearelm{\r\n    font-size: 20px;\r\n}\r\n.num{\r\n    color:rgb(8,56,95);\r\n    text-align: end;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    padding-top: 2%;\r\n}\r\n.mon{\r\n    text-align: left;\r\n    font-size: 15px;\r\n}\r\n.viewhide{\r\n    padding-left: 2%;\r\n    color:rgb(8,56,95);\r\n}\r\n.border{\r\n      padding: 0%;\r\n      /*width: 800px;*/\r\n      height: auto;\r\n}\r\n.viewins{\r\n    display:none;\r\n}\r\n.firstcard{\r\n    /*width:800px;*/\r\n     height: auto;\r\n    /*min-width:100px;*/\r\n }\r\n .secondcard{\r\n       \r\n    /*width:800px;*/\r\n    height: auto;\r\n   \r\n    \r\n }\r\n .thirdcard{\r\n           \r\n    /*width:800px;*/\r\n    height:auto;\r\n   \r\n}\r\n.content{\r\n    height:auto;\r\n    width: auto;\r\n    color:rgb(8,56,95);\r\n    /*width:1000px;*/\r\n}\r\n\r\n.hrline{\r\n    /*width:800px;*/\r\n    margin-left: 30px;\r\n}\r\n.wid{\r\n    /*padding-top: 2%;*/\r\n    \r\n    font-size: 18px;\r\n}\r\n.nextbtn{\r\n    min-width:100px;\r\n}\r\n\r\n@media screen and (max-width: 450px) {\r\n    /*.firstcard,.secondcard,.thirdcard,.content,.hrline{\r\n        width: 350px;\r\n        \r\n    }*/\r\n    .num{\r\n        font-size: 20px;\r\n        padding-left: 10%;\r\n        text-align: left;\r\n        padding-left: 0%;\r\n        padding-top: 5%;\r\n    }\r\n    .nearelm{\r\n        font-size: 13px;\r\n    }\r\n    .bgn{\r\n        font-size: 12px;\r\n        padding-left: 10%;\r\n        text-align: left;\r\n        padding-left: 0%;\r\n    }\r\n    .col-md-5 col-auto col-7{\r\n        padding-left: 0%;\r\n    }\r\n    .viewins{\r\n        display:block;\r\n        padding-left: 7%;\r\n        padding-top: 5%;\r\n    }\r\n    .viewhide, .cardhr{\r\n        display:none;\r\n    }\r\n    /*h1{\r\n        font-size: 150%;\r\n    }*/\r\n    .wid{\r\n        width:80%;\r\n        padding-top: 2%;\r\n        font-size: 15px;\r\n        width: auto;\r\n    }\r\n    .nextbtn{\r\n        width: 250px;\r\n        margin: auto;\r\n    }\r\n    \r\n    .imgsz{\r\n        padding-top: 1%;\r\n    }\r\n  }\r\n  @media screen and (max-width: 575px){\r\n    .nextbtn{\r\n        width: 250px;\r\n        margin: auto;\r\n        display: block;\r\n     \r\n        \r\n    }\r\n}\r\n\r\n  \r\n  @media screen and (max-width: 1024px) {\r\n    .viewhide{\r\n        margin-left: 0px;\r\n    }\r\n\r\n  }\r\n",
                    "styleUrl": "./installment.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    },
                    {
                        "name": "installmentService",
                        "type": "InstallmentService"
                    },
                    {
                        "name": "com",
                        "type": "CommonDataService"
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "installmentService",
                        "type": "InstallmentService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "com",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formControl": {
                    "name": "formControl",
                    "getSignature": {
                        "name": "formControl",
                        "type": "",
                        "returnType": "",
                        "line": 91
                    }
                }
            },
            "templateData": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n                    <h1 class=\"heading\">Instalment options</h1><br/>\r\n                    <form [formGroup]=\"installmentForm\" (submit)=\"submit()\">\r\n                        <!--<div class=\"form-check\" style=\"padding-left: 0px !important; \">\r\n                            <div class=\"form-row\">-->\r\n                                <div>\r\n                                    <div class=\"border shadow p-3 mb-3 bg-white rounded firstcard\" *ngFor=\"let element of serviceData\">\r\n                                        <div class=\"row cardrow\">\r\n                                            <div class=\"col-auto mr-auto pt-1\">\r\n                                                <label class=\"form-check-label\">\r\n                                                    <input class=\"form-check-input\" type=\"radio\" name=\"term\" formControlName=\"term\"  value={{element.title}} (change)=\"change()\" [checked]=\"term===element.title\"><h3 class=\"sub-head\">{{element.title}}</h3></label>\r\n                                                    <div><button class=\"btn btn-success mon\">{{element.subtitle}}</button></div>\r\n                                            </div>   \r\n                                            <div class=\"col-sm-6 col-auto col-8\">\r\n                                                <div class=\"num\">{{element.amount}}<span class=\"nearelm\"> BGN</span></div>\r\n                                                \r\n                                                    <div class=\"bgn\" style=\"color: green;font-weight: bold;\">\r\n                                                        You save {{element.saving}} BGN\r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div *ngIf=\"element.installmentsCount>1\">\r\n                                            <hr class=\"cardhr\">\r\n                                        <div class=\"viewins\">\r\n                                            <a href=\"#\">View Instalments</a>\r\n                                        </div>\r\n                                        <div class=\"row viewhide\">\r\n                                            <div class=\"col-auto mr-auto pt-2 col-sm\" *ngFor=\"let installments of element.installments;let indexOfElement=index;\" >\r\n                                                {{indexOfElement + 1 | ordinal}} Installment\r\n                                                <div style=\"font-weight: bold;\">{{installments}} BGN</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                    <!-- <div class=\"border shadow p-3 mb-3 bg-white rounded firstcard\">\r\n                                        <div class=\"row cardrow\">\r\n                                            <div class=\"col-auto mr-auto pt-1\">\r\n                                                <label class=\"form-check-label\">\r\n                                                    <input class=\"form-check-input\" type=\"radio\" name=\"term\" formControlName=\"term\" value=\"siglePayment\" (change)=\"change()\"><h3 class=\"sub-head\">Single payment</h3></label>\r\n                                                    <div><button class=\"btn btn-success mon\">Best Value</button></div>\r\n                                            </div>   \r\n                                            <div class=\"col-sm-6 col-auto col-8\">\r\n                                                <div class=\"num\">285<span class=\"nearelm\">,00 BGN</span></div>\r\n                                                \r\n                                                    <div class=\"bgn\" style=\"color: green;font-weight: bold;\">\r\n                                                        You save 39.00 BGN\r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> -->\r\n                                            \r\n                            \r\n                        <!--</div>\r\n    \r\n                        <div class=\"form-check\" style=\"padding-left: 0px !important; \">\r\n                            <div class=\"form-row\">-->\r\n                            \r\n<!--                                 \r\n                                    <div class=\"border shadow p-3 mb-3 bg-white rounded secondcard\">\r\n                                        <div class=\"row cardrow\">\r\n                                            <div class=\"col-auto mr-auto pt-1\">\r\n                                                <label class=\"form-check-label\" >\r\n                                                <input class=\"form-check-input\" type=\"radio\" name=\"term\" formControlName=\"term\" value=\"twoPayment\" (change)=\"change()\"><h3 class=\"sub-head\">Two payments</h3></label>\r\n                                                <div class=\"mon\">Every 6 months</div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-6 col-auto col-8\">\r\n                                                <div class=\"num\">302<span class=\"nearelm\">,00 BGN</span></div>\r\n                                                <div class=\"bgn\">\r\n                                                    You save 22.00 BGN\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr class=\"cardhr\">\r\n                                        <div class=\"viewins\">\r\n                                            <a href=\"#\">View Instalments</a>\r\n                                        </div>\r\n                                        <div class=\"row viewhide\">\r\n                                            <div class=\"col-auto mr-auto pt-2\">\r\n                                                    First Instalment\r\n                                                    <div style=\"font-weight: bold;\">170.27 BGN</div>\r\n                                            </div>\r\n                                            <div class=\"col-auto mr-auto pt-2 col-sm offset-1\">\r\n                                                    Second Instalment\r\n                                                    <div style=\"font-weight: bold;\">132.40 BGN</div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                    </div> -->\r\n                                \r\n                           \r\n                        <!--</div>\r\n                        <div class=\"form-check\" style=\"padding-left: 0px !important; \" >\r\n                            <div class=\"form-row\">-->\r\n                            \r\n                                \r\n                                    <!-- <div class=\"border shadow p-3 mb-3 bg-white rounded thirdcard\">\r\n                                        <div class=\"row cardrow \">\r\n                                            <div class=\"col-auto mr-auto pt-1\">\r\n                                                <label class=\"form-check-label\" style=\"font-weight: bold;\">\r\n                                                <input class=\"form-check-input\" type=\"radio\" name=\"term\" formControlName=\"term\" value=\"fourPayment\"  (change)=\"change()\"><h3 class=\"sub-head\">Four payments</h3></label>\r\n                                                <div class=\"mon\">Every 4 months</div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-6 col-auto col-8\">\r\n                                                <div class=\"num\">324<span class=\"nearelm\">,00 BGN</span></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr class=\"cardhr\">\r\n                                        <div class=\"viewins\">\r\n                                            <a href=\"#\">View Instalments</a>\r\n                                        </div>\r\n                                        <div class=\"row viewhide\">\r\n                                            <div class=\"col-auto mr-auto pt-2\">\r\n                                                    First Instalment\r\n                                                    <div style=\"font-weight: bold;\">170.27 BGN</div>\r\n                                            </div>\r\n                                            <div class=\"col-auto mr-auto pt-2\">\r\n                                                    Second Instalment\r\n                                                    <div style=\"font-weight: bold;\">132.40 BGN</div>\r\n                                            </div>\r\n                                            <div class=\"col-auto mr-auto pt-2\">\r\n                                                Third Instalment\r\n                                                <div style=\"font-weight: bold;\">132.40 BGN</div>\r\n                                            </div>\r\n                                            <div class=\"col-auto mr-auto pt-2\">\r\n                                                Fourth Instalment\r\n                                                <div style=\"font-weight: bold;\">132.40 BGN</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> -->\r\n                                \r\n                            \r\n                        <!--</div>-->\r\n                        <hr class=\"hrline\">\r\n                        <div class=\"form-row content\">\r\n                            <div class=\"col-0 imgsz\"><img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\" />\r\n                            </div>\r\n                            <span class=\"col-10 wid\">\r\n                               \r\n                                Premiums indicated are final and include Contribution to the Guarantee and Insurance Fund, sticker and 2% tax on insurance premiums.\r\n                                \r\n                            </span>\r\n                        </div>\r\n                        <br/>\r\n                        <div class=\"form-row content\">\r\n                            <div class=\"col-0 imgsz\"><img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"  /></div>\r\n                            <span class=\"col-10 wid\">\r\n                            \r\n                            The insurance premium is calculated with included - 5% Discount for insurance with \"Casco+\"\r\n                            \r\n                            </span>\r\n                        </div>\r\n                        <br/>\r\n                        <div class=\"form-row content\">\r\n                            <div class=\"col-0 imgsz\"><img width=\"30px\" height=\"20px\" src=\"./assets/tick.jpg\"  /></div>\r\n                            <span class=\"col-10 wid\">\r\n                            Annual Technical Inspection Voucher\r\n                            </span>\r\n                            \r\n                        </div>\r\n                        <hr  class=\"hrline\">\r\n                        <button class=\"btn btn-primary rounded-pill  col-sm-4 col-lg-2 col-md-3 nextbtn\" matStepperNext type=\"submit\" [disabled]=\"installmentForm.invalid\">  Next  </button>\r\n                    </form>\r\n                \r\n"
        },
        {
            "name": "InsuringPartyComponent",
            "id": "component-InsuringPartyComponent-8d109bd38125a6b44f7b01164a969c2e",
            "file": "src/app/components/insuring-party/insuring-party.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-insuring-party",
            "styleUrls": [
                "./insuring-party.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./insuring-party.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "address",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "egn",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "email",
                    "line": 17,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "addressList",
                    "defaultValue": "['Sofia','Varna','Burgas']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "insuringParty",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\n\r\n@Component({\r\n  selector: 'app-insuring-party',\r\n  templateUrl: './insuring-party.component.html',\r\n  styleUrls: ['./insuring-party.component.css']\r\n})\r\nexport class InsuringPartyComponent implements OnInit {\r\n  @Output() OnRegister= new EventEmitter()\r\n  @Output() OnToggle=new EventEmitter()\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n  @Input() egn: string;\r\n  @Input() address: string;\r\n  @Input() email: string;\r\n  insuringParty: FormGroup;\r\n  addressList=['Sofia','Varna','Burgas']\r\n  constructor(private router: Router, private fb: FormBuilder, private GAService: GoogleAnalyticsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.insuringParty = this.fb.group({\r\n      egn: ['', [Validators.required, Validators.pattern(\"^[0-9]{10}$\")]],\r\n      address: ['', Validators.required],\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')])]\r\n    });\r\n  }\r\n\r\n  submit = () => {\r\n    this.GAService.event('Next Button clicked', 'Insuring Party', 'Next')\r\n    console.log(this.insuringParty.value, \"insuring party\");\r\n    this.OnRegister.emit(this.insuringParty.value);\r\n    this.OnSubmission.emit('Insuring Party form is submitted!')\r\n  }\r\n  change = () => {\r\n\r\n    if (this.insuringParty.valid) {\r\n      this.OnToggle.emit(true)\r\n      this.OnRegister.emit(this.insuringParty.value);\r\n    } else {\r\n      this.OnToggle.emit(false)\r\n    }\r\n  }\r\n  get formsControl() {\r\n    return this.insuringParty.controls\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input[type=text],input[type=date],input[type=email]{border-radius: 7px;}\r\nselect{border-radius: 7px;}\r\nh1{color: #003768;}\r\n@media screen and (max-width: 768px){\r\n    .line{\r\n        display : none;\r\n    }\r\n}\r\n@media screen and (max-width: 575px){\r\n    .btn{\r\n        width: 250px;\r\n        margin: auto;\r\n        display: block;\r\n     \r\n        \r\n    }\r\n}\r\n",
                    "styleUrl": "./insuring-party.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formsControl": {
                    "name": "formsControl",
                    "getSignature": {
                        "name": "formsControl",
                        "type": "",
                        "returnType": "",
                        "line": 45
                    }
                }
            },
            "templateData": "<h1  style=\"color:rgb(8,56,95);font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\">\r\n    <b>Insuring Party</b></h1>\r\n    <form [formGroup]=\"insuringParty\" (submit)=\"submit()\" style=\"color:rgb(8,56,95)\"><br>\r\n        <div class=\"form-row\">\r\n            <div class=\"col-12 col-sm-7 col-md-8 col-lg-8\">\r\n                <label for=\"egn\">Enter your EGN/EIK/LNCH<br>\r\n                <a href=\"\"><u>Who's data should I fill in?</u> </a></label>\r\n           \r\n            </div>\r\n            <div class=\"col-12 col-sm-5 col-md-4 col-lg-4\">\r\n                <input class=\"form-control\" id=\"egn\" type=\"text\" formControlName=\"egn\" (change)=\"change()\"\r\n                    placeholder=\"Enter your EGN/EIK/LNCH\" [(ngModel)]=\"egn\">\r\n                <div *ngIf=\"insuringParty.controls.egn.hasError('required') &&(insuringParty.controls.egn.dirty || insuringParty.controls.egn.touched)\"\r\n                    class=\"error\">This field is mandatory</div>\r\n                <div *ngIf=\"insuringParty.controls.egn.hasError('pattern') &&(insuringParty.controls.egn.dirty || insuringParty.controls.egn.touched)\"\r\n                    class=\"error\">Only 10 digit numerical value allowed</div>\r\n            </div>\r\n        </div>\r\n        <hr class=\"line\">\r\n        <br>\r\n        <div class=\"form-row\">\r\n            <div class=\"col-12 col-sm-7  col-md-8 col-lg-8\">\r\n               <label for=\"address\">Place of Permanent Residence?</label>\r\n            </div>\r\n            <div class=\"col-12 col-sm-5 col-md-4 col-lg-4\">\r\n                <select formControlName=\"address\" [(ngModel)]=\"address\" class=\"form-control\" (change)=\"change()\">\r\n                    <option [selected]='\"\"===address' disabled value=\"\" id=\"address\">--SELECT--</option>\r\n                    <option *ngFor=\"let a of addressList\" id=\"address\" value='a' [selected]='a===address'>{{a}}</option>\r\n                </select>\r\n                <div class=\"error\" *ngIf=\"formsControl.address.touched && formsControl.address.errors\">\r\n                    <div *ngIf=\"formsControl.address.errors.required\">This field is mandatory</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <hr class=\"line\">\r\n        <br>\r\n        <div class=\"form-row\">\r\n            <div class=\"col-12 col-sm-7 col-md-8 col-lg-8\">\r\n                <label for=\"email\"> Email</label>\r\n            </div>\r\n            <div class=\"col-12 col-sm-5 col-md-4 col-lg-4\">\r\n                <input class=\"form-control\" id=\"email\" type=\"email\" formControlName=\"email\" (change)=\"change()\"\r\n                    placeholder=\"Enter you email\" [(ngModel)]=\"email\">\r\n                <div class=\"error\" *ngIf=\"formsControl.email.touched && formsControl.email.errors\">\r\n                    <div *ngIf=\"formsControl.email.errors.required\">This field is mandatory</div>\r\n                    <div *ngIf=\"formsControl.email.errors.pattern\">Please enter a valid email</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr class=\"line\">\r\n        <br>\r\n        <button type=\"submit\" class=\"btn btn-primary rounded-pill col-sm-4 col-lg-2 col-md-3\" \r\n        matStepperNext [disabled]=\"insuringParty.invalid\">Next</button>\r\n    \r\n</form>\r\n\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-b0b905a269644ffbc32500ce7cc8ab97",
            "file": "src/app/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "asGuestLogin",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLoginError",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLoginSuccess",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                },
                {
                    "name": "redirect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\nimport { LoggedInServiceService } from 'src/app/logged-in-service.service'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';  \r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\nconstructor(private router: Router) { }\r\n\r\n  \r\n  @Output() onLoginError = new EventEmitter<any>();\r\n  @Output() onLoginSuccess = new EventEmitter<any>();\r\n  @Output() asGuestLogin = new EventEmitter<any>();\r\n\r\n  email: string;\r\npassword: string;\r\n  ngOnInit() {\r\n  }\r\n  login() : void {\r\n  \r\n    if(this.email == 'admin' && this.password == 'admin'){\r\n      this.onLoginSuccess.emit('form submitted successfully');\r\n      sessionStorage.setItem('isLoggedIn', \"true\");  \r\n      sessionStorage.setItem('username', this.email );\r\n      \r\n      this.router.navigate([\"tab\"]);\r\n    }else {\r\n      this.onLoginError.emit('Wrong data entered');\r\n      alert(\"Invalid credentials\");\r\n    }\r\n  }\r\n\r\n  redirect(){\r\n    this.asGuestLogin.emit('logged in as a guest');\r\n    // this.router.navigate([\"tab\"]);\r\n  }\r\n  }\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* .monospace {\r\n    font-family: \"Lucida Console\", Courier, monospace;\r\n    font-weight: bold;\r\n    color: midnightblue;\r\n  }\r\n  .btn{\r\n    border-radius: 15px;\r\n\r\n  }\r\n  .example-card{\r\n   width: 100%;\r\n    \r\n    \r\n  }\r\n  .images{\r\n    max-width:100 px;\r\n\r\n  }\r\n.example-full-width{\r\n  width: 100%;\r\n  position:center;\r\n} */\r\n\r\n.login-card-description{\r\n  font-family: 'Trebuchet MS',Arial,sans-serif;\r\n    font-weight: bold;\r\n    color:rgb(8,56,95);\r\n    font-size: 20px;\r\n}\r\n.login-btn {\r\n  padding: 10px 20px 10px;\r\n  background-color:rgb(9, 113, 231);\r\n  border-radius: 20px;\r\n  font-size: 15px;\r\n  /* font-weight: bold; */\r\n  line-height: 20px;\r\n  color: #fff;\r\n  margin-bottom: 24px; \r\n}\r\n.hr-text{\r\n  position: relative;\r\n  border: none;\r\n  height: 1px;\r\n  background: #999;\r\n}\r\n.redirect-btn{\r\n  padding: 10px 20px 10px;\r\n  background-color:rgb(8,56,95);\r\n  border-radius: 20px;\r\n  font-size: 15px;\r\n  /* font-weight: bold; */\r\n  line-height: 20px;\r\n  color: #fff;\r\n  margin-bottom: 24px; \r\n\r\n}\r\n.login-card-footer-text{\r\n  color:gray;\r\n}\r\n.loginimg{\r\n  width: 500%;\r\n  \r\n  padding-right:0%;\r\n  padding-left: 10%;\r\n}\r\n.card-body{\r\n  padding-top: 25%;\r\n}\r\n@media screen and (max-width: 450px){\r\n  .loginimg{\r\n    display:none;\r\n    \r\n  }\r\n  \r\n}\r\n\r\n@media all and (min-width: 768px){\r\n  .card-body{\r\n    \r\n    padding-left: 25%;\r\n    \r\n  }\r\n  .loginimg{\r\n    padding-left: 0%;\r\n    padding-right: 10%;\r\n  }\r\n}\r\n@media all and (min-width: 1024px){\r\n  .card-body{\r\n    padding-left: 0%;\r\n    \r\n  }\r\n  .loginimg{\r\n    padding-left: 8%;\r\n  }\r\n}\r\n",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- \r\n<div class=\"container\"> \r\n  <mat-grid-list cols=\"2\" rowHeight=\"1:1\">\r\n    <mat-grid-tile>\r\n      <div class=\"images\"> \r\n        <img src=\"../../../assets/WhatsApp Image 2020-06-15 at 7.54.49 PM.jpeg\"/>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>  \r\n\r\n      <mat-card class=\"example-card\">\r\n        <img src=\"../../../assets/logo.jpeg\"/>\r\n          \r\n            <mat-card-title class=\"monospace\">Sign In</mat-card-title>\r\n         \r\n          \r\n          <div class=\"text-primary\">Forget Password?</div>\r\n          \r\n          <mat-card-content>\r\n            <form class=\"example-form\">\r\n              <table class=\"example-full-width\" cellspacing=\"0\">\r\n                <tr>\r\n                  <td>\r\n                  <mat-label > Email</mat-label><br>\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                    <input matInput placeholder=\"Enter your email\"  [(ngModel)]=\"email\" name=\"email\" required>\r\n                    </mat-form-field>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                    \r\n                <td>\r\n                  <mat-label > Password</mat-label><br>\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <input matInput placeholder=\"Password\" [(ngModel)]=\"password\"type=\"password\" name=\"password\" required>\r\n                </mat-form-field></td>\r\n              </tr></table>\r\n            </form>\r\n          </mat-card-content>\r\n          <mat-card-actions>\r\n            &nbsp;&nbsp;&nbsp;<button mat-raised-button (click)=\"login()\" class=\"btn btn-primary btn\">Login</button>\r\n          </mat-card-actions>\r\n          <mat-divider></mat-divider>\r\n          <mat-card-actions>\r\n            &nbsp;&nbsp;&nbsp;<button mat-raised-button (click)=\"redirect()\" class=\"btn btn-primary\">Continue as as guest</button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </mat-grid-tile>\r\n    \r\n  </mat-grid-list>\r\n  \r\n  \r\n\r\n</div> -->\r\n<main class=\"d-flex align-items-center min-vh-100 py-3 py-md-0\">\r\n  <div class=\"container\">\r\n    <div class=\"card login-card\">\r\n      <div class=\"row no-gutters\">\r\n        <div class=\"col-md-6 loginimg\">\r\n          <img src=\"../../../assets/cardimg.jpeg\" alt=\"login\" class=\"login-card-img\">\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"card-body\">\r\n            <div class=\"brand-wrapper\">\r\n              <img src=\"../../../assets/logo.jpeg\" alt=\"logo\" class=\"logo\">\r\n            </div>\r\n            <p class=\"login-card-description\">Sign In</p>\r\n            <a href=\"#!\" class=\"forgot-password-link\">Forgot password?</a>\r\n            <form action=\"#!\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label for=\"email\" class=\"sr-only\">Email</label>\r\n                  <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" [(ngModel)]=\"email\" placeholder=\"Email address\">\r\n                </div>\r\n                <div class=\"form-group mb-4\">\r\n                  <label for=\"password\" class=\"sr-only\">Password</label>\r\n                  <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" [(ngModel)]=\"password\" placeholder=\"***********\">\r\n                </div>\r\n                <input name=\"login\" id=\"login\" class=\"btn  login-btn \" type=\"button\" (click)=\"login()\" value=\"Login\">\r\n    \r\n                  <hr data-content=\"OR\" class=\"hr-text\">\r\n                  <input name=\"redirect\" id=\"redirect\" class=\"btn redirect-btn btn-block\" type=\"button\" (click)=\"redirect()\" value=\"Continue as a Guest\">\r\n              \r\n              </form>\r\n             \r\n              <p class=\"login-card-footer-text\">You can create your account at the end of the process <a href=\"/signUp\" class=\"text-reset\"><u>Register here</u></a></p>\r\n              \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"card login-card\">\r\n      <img src=\"assets/images/login.jpg\" alt=\"login\" class=\"login-card-img\">\r\n      <div class=\"card-body\">\r\n        <h2 class=\"login-card-title\">Login</h2>\r\n        <p class=\"login-card-description\">Sign in to your account to continue.</p>\r\n        <form action=\"#!\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\" class=\"sr-only\">Email</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\" class=\"sr-only\">Password</label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\">\r\n          </div>\r\n          <div class=\"form-prompt-wrapper\">\r\n            <div class=\"custom-control custom-checkbox login-card-check-box\">\r\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n              <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\r\n            </div>              \r\n            <a href=\"#!\" class=\"text-reset\">Forgot password?</a>\r\n          </div>\r\n          <input name=\"login\" id=\"login\" class=\"btn btn-block login-btn mb-4\" type=\"button\" value=\"Login\">\r\n        </form>\r\n        <p class=\"login-card-footer-text\">Don't have an account? <a href=\"#!\" class=\"text-reset\">Register here</a></p>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n</main>"
        },
        {
            "name": "MTPLCalculatorComponent",
            "id": "component-MTPLCalculatorComponent-a0f215ed44a2f3f8142cc437dcfad76d",
            "file": "src/app/components/mtpl-calculator/mtpl-calculator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mtpl-calculator",
            "styleUrls": [
                "./mtpl-calculator.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./mtpl-calculator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "NextTabSwitch",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectionChange",
                    "line": 12,
                    "type": "EventEmitter<StepperSelectionEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "covers",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "coversData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "installments",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "installmentsData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "insuringParty",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "insuringPartyData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "move",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "mtplCalculaterData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "nextTab",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "policyDetails",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "policyDetailsData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "stepper1",
                    "type": "MatStepper",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'stepper1'"
                        }
                    ]
                },
                {
                    "name": "summary",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "toggle1",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "toggle2",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "toggle3",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "toggle4",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "toggle5",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "toggle6",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "vehicle",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "vehicleData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter, ViewChild, Input } from '@angular/core';\r\nimport { StepperSelectionEvent } from '@angular/cdk/stepper';\r\nimport { CommonDataService } from 'src/app/common-data.service';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n@Component({\r\n  selector: 'app-mtpl-calculator',\r\n  templateUrl: './mtpl-calculator.component.html',\r\n  styleUrls: ['./mtpl-calculator.component.css']\r\n})\r\nexport class MTPLCalculatorComponent implements OnInit {\r\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent>\r\n  @Output() NextTabSwitch = new EventEmitter()\r\n\r\n  @ViewChild('stepper1') stepper1: MatStepper;\r\n  constructor(private _commonData:CommonDataService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  vehicle\r\n  insuringParty\r\n  policyDetails\r\n  installments\r\n  covers\r\n  summary\r\n  toggle1=false\r\n  toggle2=false\r\n  toggle3=false\r\n  toggle4=false\r\n  toggle5=false\r\n  toggle6=true\r\n  mtplCalculaterData\r\n\r\n  move=(index)=> {\r\n    console.log(\"calculators\");\r\n    \r\n    this.stepper1.selectedIndex = index;\r\n  }\r\n\r\n  vehicleData=(data)=>{\r\n    this.vehicle=data\r\n    console.log(this.vehicle);\r\n  }\r\n\r\n  insuringPartyData=(data)=>{\r\n    this.insuringParty=data\r\n    console.log(this.insuringParty);\r\n  }\r\n\r\n  policyDetailsData=(data)=>{\r\n    this.policyDetails=data\r\n    console.log(this.policyDetails);\r\n  }\r\n\r\n  installmentsData=(data)=>{\r\n    this.installments=data\r\n    console.log(this.installments);\r\n  }\r\n\r\n  coversData=(data)=>{\r\n    this.covers=data\r\n    console.log(this.covers);\r\n    this.mtplCalculaterData={\r\n      vehicleData:this.vehicle,\r\n      insuringPartyData:this.insuringParty,\r\n      policyDetailsData:this.policyDetails,\r\n      installmentsData:this.installments,\r\n      coversData:this.covers\r\n    }\r\n  this._commonData.formData.next(this.mtplCalculaterData)\r\n  //  this._commonData.formData.subscribe(data=>{\r\n  //    console.log(data);\r\n  //    }) \r\n  }\r\n\r\n\r\n  nextTab=(data)=>{\r\n    this.NextTabSwitch.emit(data)\r\n  }\r\n  change=(data)=>{\r\n    console.log(data);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\r\n    width: 50%;\r\n}\r\n@media screen and (max-width: 800px){\r\n    .container{\r\n        \r\n        width: auto;\r\n    }\r\n}",
                    "styleUrl": "./mtpl-calculator.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_commonData",
                        "type": "CommonDataService"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "_commonData",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n<mat-horizontal-stepper  (selectionChange)=\"change($event)\" labelPosition=\"bottom\" #stepper1  linear>\r\n  \r\n      <mat-step completed={{toggle1}}>\r\n        <ng-template matStepLabel>Vehicle </ng-template>\r\n        <app-v-info (OnRegister)=\"vehicleData($event)\" (OnToggle)=\"toggle1=$event\"></app-v-info>\r\n      </mat-step>\r\n\r\n      <mat-step completed={{toggle2}}>\r\n        <ng-template matStepLabel>Insuring Party</ng-template>\r\n        <app-insuring-party (OnRegister)=\"insuringPartyData($event)\" (OnToggle)=\"toggle2=$event\"></app-insuring-party>\r\n      </mat-step>\r\n\r\n      <mat-step completed={{toggle3}}>\r\n        <ng-template matStepLabel>Policy Details</ng-template>\r\n        <app-policy-details (OnRegister)=\"policyDetailsData($event)\" (OnToggle)=\"toggle3=$event\"></app-policy-details>\r\n      </mat-step>\r\n\r\n      <mat-step completed={{toggle4}}>\r\n        <ng-template matStepLabel>Installments</ng-template>\r\n        <app-installment (OnRegister)=\"installmentsData($event)\" (OnToggle)=\"toggle4=$event\" ></app-installment>\r\n      </mat-step>\r\n\r\n      <mat-step completed={{toggle5}}>\r\n        <ng-template matStepLabel>Covers</ng-template>\r\n        <app-additional-covers (OnRegister)=\"coversData($event)\" [installment]='installments' (OnToggle)=\"toggle5=$event\" (NextTab)=\"nextTab($event)\"></app-additional-covers>\r\n      </mat-step>\r\n\r\n      <!-- <mat-step completed={{toggle6}}>\r\n        <ng-template matStepLabel>Summary</ng-template>\r\n        Summary\r\n      </mat-step> -->\r\n\r\n</mat-horizontal-stepper>\r\n</div>\r\n"
        },
        {
            "name": "MTPLPolicyComponent",
            "id": "component-MTPLPolicyComponent-3ec0a39fcc4e702d9d8346e72dc5c418",
            "file": "src/app/components/mtpl-policy/mtpl-policy.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mtpl-policy",
            "styleUrls": [
                "./mtpl-policy.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./mtpl-policy.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "switchTab",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "contactDetailsData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "contactInformation",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "deliveryData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "deliveryInformation",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "formData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "move",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "personalData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "personalInformation",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "stepper",
                    "type": "MatStepper",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'stepper'"
                        }
                    ]
                },
                {
                    "name": "switch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "toggle1",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "toggle2",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "toggle3",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "toggle4",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "toggle5",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "toggle6",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "vehicleOwnerData",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "vehicleOwnerInformation",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { CommonDataService } from 'src/app/common-data.service';\r\nimport { MatStepper } from '@angular/material/stepper';\r\n\r\n@Component({\r\n  selector: 'app-mtpl-policy',\r\n  templateUrl: './mtpl-policy.component.html',\r\n  styleUrls: ['./mtpl-policy.component.css']\r\n})\r\nexport class MTPLPolicyComponent implements OnInit {\r\n  @Output() switchTab = new EventEmitter()\r\n\r\n  constructor(private _commonData:CommonDataService) { }\r\n  @ViewChild('stepper') stepper: MatStepper;\r\n  ngOnInit(): void {\r\n  }\r\n  toggle1=false\r\n  toggle2=false\r\n  toggle3=false\r\n  toggle4=true\r\n  toggle5=true\r\n  toggle6=true\r\n  personalInformation\r\n  contactInformation\r\n  vehicleOwnerInformation\r\n  deliveryInformation\r\nformData\r\n\r\nswitch=(index)=>{\r\nthis.switchTab.emit(index)\r\n}\r\nmove=(index)=> {\r\n  this.stepper.selectedIndex = index;\r\n}\r\n  personalData=(data)=>{\r\n    this.personalInformation=data\r\n    console.log(this.personalInformation);\r\n  }\r\n\r\n  contactDetailsData=(data)=>{\r\n    this.contactInformation=data\r\n    console.log(this.contactInformation);\r\n  }\r\n\r\n  vehicleOwnerData=(data)=>{\r\n    this.vehicleOwnerInformation=data\r\n    console.log(this.vehicleOwnerInformation);\r\n  }\r\n  \r\n  deliveryData=(data)=>{\r\n    this.deliveryInformation=data;\r\n    this.formData={\r\n      personalInformation:this.personalInformation,\r\n      contactInformation:this.contactInformation,\r\n      vehicleOwnerInformation:this.vehicleOwnerInformation,\r\n      deliveryInformation:this.deliveryInformation\r\n    \r\n      }\r\n    this._commonData.policyData.next(this.formData)\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\r\n    width: 50%;\r\n}\r\n@media screen and (max-width: 800px){\r\n    .container{\r\n        \r\n        width: auto;\r\n    }\r\n}",
                    "styleUrl": "./mtpl-policy.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_commonData",
                        "type": "CommonDataService"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "_commonData",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n<mat-horizontal-stepper labelPosition=\"bottom\" #stepper linear>\r\n  <mat-step completed={{toggle1}}>\r\n    <ng-template matStepLabel>Personal details</ng-template>\r\n    <app-personal (OnRegister)=\"personalData($event)\" (OnToggle)=\"toggle1=$event\"></app-personal>\r\n  </mat-step>  \r\n  \r\n  <mat-step completed={{toggle2}}>\r\n    <ng-template matStepLabel>Contact details</ng-template>\r\n    <app-contact (OnRegister)=\"contactDetailsData($event)\" (OnToggle)=\"toggle2=$event\"></app-contact>\r\n  </mat-step> \r\n  \r\n  <mat-step completed={{toggle3}}>\r\n    <ng-template matStepLabel>Vehicle Owner</ng-template>\r\n    <app-vehicle-owner (OnRegister)=\"vehicleOwnerData($event)\" (OnToggle)=\"toggle3=$event\"></app-vehicle-owner>\r\n  </mat-step>  \r\n\r\n  <mat-step completed={{toggle4}}>\r\n    <ng-template matStepLabel>Delivery</ng-template>\r\n    <app-delivery (OnRegister)=\"deliveryData($event)\" (OnToggle)=\"toggle4=$event\"></app-delivery>\r\n  </mat-step>  \r\n\r\n  <mat-step completed={{toggle5}}>\r\n    <ng-template matStepLabel >Summary</ng-template>\r\n    <app-proposal (changeStep)=\"move($event)\" (moveTab)=\"switch($event)\"></app-proposal>\r\n  </mat-step>  \r\n\r\n  <mat-step completed={{toggle6}}>\r\n    <ng-template matStepLabel>Payment</ng-template>\r\n    <app-payment></app-payment>\r\n  </mat-step> \r\n\r\n  <!-- <mat-step >\r\n        <ng-template matStepLabel>Policy Details</ng-template>\r\n        <app-policy-details  ></app-policy-details>\r\n      </mat-step>\r\n        \r\n      <mat-step >\r\n        <ng-template matStepLabel>Vehicle </ng-template>\r\n        <app-v-info ></app-v-info>\r\n       \r\n      </mat-step> -->\r\n   \r\n</mat-horizontal-stepper>\r\n</div>\r\n"
        },
        {
            "name": "PaymentComponent",
            "id": "component-PaymentComponent-102f72277e2629c983a4f1e39370b966",
            "file": "src/app/components/payment/payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payment",
            "styleUrls": [
                "./payment.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "payment",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "enable",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "optradio",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "action",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "box",
                    "args": [
                        {
                            "name": "e",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "check",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n  optradio:boolean;\r\n  @Input() payment: string;\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n  enable:boolean=true;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  check(){\r\n    this.optradio=true;\r\n  }\r\n  box(e){\r\n   if(e.target.checked){\r\n    this.enable=false;\r\n   }\r\n   else{\r\n     this.enable=true;\r\n   }\r\n  }\r\n  action(){\r\n    this.OnSubmission.emit('Payment method selected!')\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".row{\r\n    margin: 0;\r\n}\r\n.heading{\r\n    color:rgb(8,56,95);\r\n    font-family: 'Trebuchet MS',Arial,sans-serif;\r\n    font-weight: bold;\r\n} \r\n.bg-dark-blue{\r\n    background-color:  #003564;\r\n    color: #ffffff;\r\n}\r\n.middle-heading{\r\n    display: flex;\r\n    height: 100%;\r\n    align-items: center;\r\n}\r\n.radio{\r\n    border-radius: 10px;\r\n    -webkit-box-shadow: 0 0 10px #ccc;\r\n    box-shadow: 0 0 10px #ccc;\r\n}\r\n.radio-inner{\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 20px;\r\n    margin: 0;\r\n    cursor: pointer;\r\n}\r\n.radio-action{\r\n    width: 25px;\r\n}\r\ninput[type=\"checkbox\" i]{\r\n    margin: 0px 8px 0px 0px;\r\n}\r\n.buy-btn{\r\n    border-radius:20px;\r\n}\r\n.user-key{\r\n    width: 40px;\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 15px;\r\n    left: -17px;\r\n}\r\n.text-color{\r\n    color: #003564\r\n}\r\n.nearelm{\r\n    font-size: 20px;\r\n}\r\n.num{\r\n    \r\n    \r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    \r\n}\r\n.text-small{\r\n    font-size: 20px;\r\n    padding-left: 0%;\r\n}\r\n@media all and (max-width: 767px) {\r\n    .text-small{\r\n        font-size:11px;\r\n        \r\n    }\r\n}\r\n@media screen and (max-width: 450px){\r\n\r\n.num{\r\n    font-size: 20px;\r\n    \r\n}\r\n.nearelm{\r\n    font-size: 13px;\r\n }\r\n}\r\n/*@media all and (min-width: 1024px){\r\n    .text-small{\r\n        padding-left: 3%;\r\n        font-size: 12px;\r\n        \r\n    }\r\n    .num{\r\n        font-size: 15px;\r\n        padding-left: 5%;\r\n    }\r\n    .nearelm{\r\n        font-size: 10px;\r\n    }\r\n   \r\n}*/",
                    "styleUrl": "./payment.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n    \r\n            <h1 class=\"heading\">Select payment option</h1>\r\n            <div class=\"card bg-dark-blue\">\r\n                <div class=\"card-body p-2\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-1 col-2 motor-img p-0 \" >\r\n                            <img src=\"../../assets/motor_policy.PNG\">\r\n                        </div>\r\n                        <div class=\"col-md-11 col-9 pr-0 m-auto\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-9 col-12 p-0\">\r\n                                    <span class=\"middle-heading text-small\">Motor Third party Liability Policy</span>\r\n                                </div>\r\n                                <div class=\"col-md-3 col-12 p-0\">\r\n                                    <div>\r\n                                        <!--<div><strong>324,00BGN</strong></div>-->\r\n                                        <div class=\"num\">324<span class=\"nearelm\">,00 BGN</span></div>\r\n                                        <div class=\"text-small\">Four payments</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row pt-3\">\r\n                    <div class=\"col-md-4 p-0\">\r\n                        <label class=\"text-color\">Select payment method</label>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-md-8 radio-container p-0\">\r\n                        <div class=\"row justify-content-around\">\r\n                            <div class=\"col-md-5 radio mb-3 p-0\">\r\n                                <label class=\"radio-inner d-flex flex-sm-column\">\r\n                                    <div class=\"radio-action d-flex flex-sm-column align-items-center align-items-sm-baseline\"><input type=\"radio\" [(ngModel)]=\"payment\" [checked]=\"payment==='Card'\" name=\"optradio\" (click)=\"check()\"></div>\r\n                                    <div class=\"text-center d-flex flex-sm-column align-items-center\">\r\n                                        <div class=\"radio-img\"><img src=\"../../assets/credit-card.PNG\"></div>\r\n                                        <div class=\"text-color\">Credit/debit card</div>\r\n                                    </div>\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"col-md-5 radio mb-3 p-0\">\r\n                                <label class=\"radio-inner d-flex flex-sm-column\">\r\n                                    <div class=\"radio-action d-flex flex-sm-column align-items-center align-items-sm-baseline\"><input type=\"radio\" [(ngModel)]=\"payment\" [checked]=\"payment==='EPay'\" name=\"optradio\" (click)=\"check()\"></div>\r\n                                    <div class=\"text-center d-flex flex-sm-column align-items-center\">\r\n                                        <div class=\"radio-img\"><img src=\"../../assets/e-pay.PNG\"></div>\r\n                                        <div class=\"text-color\">ePay</div>\r\n                                    </div>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n                <div *ngIf=\"optradio\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 p-0 pl-3\">\r\n                        <div class=\"card border-warning mb-4\">\r\n                            <img class=\"user-key\" src=\"../../assets/user-key.png\">\r\n                            <div class=\"card-body\">\r\n                                <p class=\"card-text pl-3 text-color\" style=\"text-align: justify; padding-right: 15px; padding-top: 15px; padding-bottom: 10px;\">\r\n                                    If you are not the card holder, you will be asked to sign the policy with \r\n                                    e-Signature. If you don't own an e-Signature, please pay with your own card\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           \r\n                <div class=\"row\">\r\n                    <div class=\"col shadow-lg p-3 mb-5 bg-white rounded d-flex align-items-baseline\">\r\n                        <input type=\"checkbox\" (change)=\"box($event)\">\r\n                        <label class=\"text-color\">I declare I am owner of the card for this payment</label><br>\r\n                    </div>\r\n                </div></div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 p-0\">\r\n                    <button class=\"btn btn-primary px-5 buy-btn\" [disabled]=\"enable\" (click)=\"action()\">Buy Policy</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n \r\n "
        },
        {
            "name": "PersonalComponent",
            "id": "component-PersonalComponent-81b39dd581e0fe54dfb88e5a39d770df",
            "file": "src/app/components/personal/personal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-personal",
            "styleUrls": [
                "./personal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./personal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "citizen",
                    "line": 23,
                    "type": "String"
                },
                {
                    "name": "dob",
                    "line": 24,
                    "type": "Date"
                },
                {
                    "name": "firstname",
                    "line": 16,
                    "type": "String"
                },
                {
                    "name": "firstnameeng",
                    "line": 20,
                    "type": "String"
                },
                {
                    "name": "lastname",
                    "line": 17,
                    "type": "String"
                },
                {
                    "name": "lastnameeng",
                    "line": 21,
                    "type": "String"
                },
                {
                    "name": "lnch",
                    "line": 15,
                    "type": "String"
                },
                {
                    "name": "surname",
                    "line": 18,
                    "type": "String"
                },
                {
                    "name": "surnameeng",
                    "line": 22,
                    "type": "String"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "citizens",
                    "defaultValue": "['Indian','American','African']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "personalForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51
                },
                {
                    "name": "success",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter,Input } from '@angular/core';\r\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\n\r\n@Component({\r\n  selector: 'app-personal',\r\n  templateUrl: './personal.component.html',\r\n  styleUrls: ['./personal.component.css']\r\n})\r\nexport class PersonalComponent implements OnInit {\r\n  @Output() OnRegister= new EventEmitter()\r\n  @Output() OnToggle=new EventEmitter()\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n\r\n  @Input() lnch:String;\r\n  @Input() firstname:String;\r\n  @Input() lastname:String;\r\n  @Input() surname:String;\r\n\r\n  @Input() firstnameeng:String;\r\n  @Input() lastnameeng:String;\r\n  @Input() surnameeng:String;\r\n  @Input() citizen:String;\r\n  @Input() dob:Date;\r\n  personalForm:FormGroup;\r\n  citizens=['Indian','American','African'];\r\n  constructor(private formBuilder:FormBuilder, private GAService: GoogleAnalyticsService) { }\r\n  success(){\r\n    this.GAService.event('Next Button clicked','Personal Details','Next')\r\n    //console.log(this.personalForm.value);\r\n    //console.log(this.personalForm.value,\"vehicle Info\");\r\n    // this.OnToggle.emit(true)\r\n    console.log(23123124);\r\n\r\n    \r\n    \r\n    this.OnRegister.emit(this.personalForm.value);\r\n    this.OnSubmission.emit('Personal Details form is submitted!')\r\n  }\r\n  change=()=>{\r\n      \r\n    if(this.personalForm.valid){\r\n      this.OnToggle.emit(true)\r\n      this.OnRegister.emit(this.personalForm.value);\r\n    }else{\r\n      this.OnToggle.emit(false)\r\n      // this.OnRegister.emit(this.personalForm.value);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.personalForm=this.formBuilder.group({\r\n      lnch:['',[Validators.required,Validators.pattern(\"^[0-9]{10}$\")]],\r\n      fullname:this.formBuilder.group({\r\n        firstname:['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\"),Validators.maxLength(20)]],\r\n        lastname:['',Validators.pattern(\"^[a-zA-Z]*$\")],\r\n        surname:['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\"),Validators.maxLength(20)]]\r\n      }),\r\n      fullnameeng:this.formBuilder.group({\r\n        firstnameeng:['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\"),Validators.maxLength(20)]],\r\n        lastnameeng:['',Validators.pattern(\"^[a-zA-Z]*$\")],\r\n        surnameeng:['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\"),Validators.maxLength(20)]]\r\n      }),\r\n      citizen:['',Validators.required],\r\n      birth:['',Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n\r\n/*.container{\r\n    margin: 200px;\r\n}*/\r\n\r\n.user-key{\r\n    width: 40px;\r\n    position: absolute;\r\n    z-index: 1;\r\n    top:15px;\r\n    left: -25px;\r\n}\r\nh1{\r\n    \r\n    color:rgb(8,56,95); \r\n    font-weight: bold;\r\n    font-family:'Trebuchet MS',Arial,sans-serif;\r\n}\r\nlabel{\r\n    color:rgb(8,56,95);\r\n    font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n\r\n.panel{\r\n    border-width: thin;\r\n    border-style: solid;\r\n    border-color:yellow;\r\n    border-radius:5px;\r\n    padding:25px;\r\n    margin-bottom: 20px;\r\n}\r\n.error{\r\n    color: red;\r\n}\r\n\r\n@media screen and (max-width: 800px) {\r\n    .line{\r\n        display : none;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 575px){\r\n    .nextbtn{\r\n        width: 250px;\r\n        margin: auto;\r\n        display: block;\r\n     \r\n        \r\n    }\r\n}\r\n\r\n@media screen and (max-width: 1090px){\r\n    .col-lg-4{\r\n        padding: 4px;\r\n    }\r\n    \r\n}",
                    "styleUrl": "./personal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n  <h1><b>Personal Details</b></h1>\r\n  <form [formGroup]=\"personalForm\" (submit)=\"success()\">\r\n    <div class=\"form-group row \">\r\n      <label for=\"lnch\" class=\"col-sm-8 col-form-label\">LNCH</label>\r\n      <div class=\"col-lg-4\">\r\n        <input type=\"text\" class=\"form-control\" id=\"lnch\" placeholder=\"Enter LNCH\" [(ngModel)]=\"lnch\" formControlName=\"lnch\" name=\"lnch\"\r\n          (change)=\"change()\">\r\n        <div\r\n          *ngIf=\"personalForm.controls.lnch.hasError('required') &&(personalForm.controls.lnch.dirty || personalForm.controls.lnch.touched)\"\r\n          class=\"error\">This field is mandatory</div>\r\n        <div\r\n          *ngIf=\"personalForm.controls.lnch.hasError('pattern') &&(personalForm.controls.lnch.dirty || personalForm.controls.lnch.touched)\"\r\n          class=\"error\">Only 10 digit numerical value allowed</div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\">\r\n    <div formGroupName=\"fullname\">\r\n      <label class=\"\">Full Name</label><br>\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-4\">\r\n          <input type=\"text\" class=\"form-control\" id=\"firstname\" [(ngModel)]=\"firstname\" placeholder=\"Enter firstname\"\r\n            formControlName=\"firstname\" name=\"firstname\" (change)=\"change()\">\r\n          <div\r\n            *ngIf=\"personalForm.get('fullname').get('firstname').hasError('required') &&(personalForm.get('fullname').get('firstname').dirty || personalForm.get('fullname').get('firstname').touched)\"\r\n            class=\"error\">This field is mandatory</div>\r\n          <div\r\n            *ngIf=\"personalForm.get('fullname').get('firstname').hasError('pattern') &&(personalForm.get('fullname').get('firstname').dirty || personalForm.get('fullname').get('firstname').touched)\"\r\n            class=\"error\">Only alphabets allowed</div>\r\n          <div\r\n            *ngIf=\"personalForm.get('fullname').get('firstname').hasError('maxlength') &&(personalForm.get('fullname').get('firstname').dirty || personalForm.get('fullname').get('firstname').touched)\"\r\n            class=\"error\">Max length can be 20 characters</div>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <input type=\"text\" class=\"form-control\" id=\"lastname\" [(ngModel)]=\"lastname\" placeholder=\"Enter middlename\" formControlName=\"lastname\"\r\n            name=\"lastname\" (change)=\"change()\">\r\n          <div\r\n            *ngIf=\"personalForm.get('fullname').get('lastname').hasError('pattern') &&(personalForm.get('fullname').get('lastname').dirty || personalForm.get('fullname').get('lastname').touched)\"\r\n            class=\"error\">Only alphabets allowed</div>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <input type=\"text\" class=\"form-control\" id=\"surname\" [(ngModel)]=\"surname\" placeholder=\"Enter lastname\" formControlName=\"surname\"\r\n            name=\"suname\" (change)=\"change()\">\r\n          <div\r\n            *ngIf=\"personalForm.get('fullname').get('surname').hasError('required') &&(personalForm.get('fullname').get('surname').dirty || personalForm.get('fullname').get('surname').touched)\"\r\n            class=\"error\">This field is mandatory</div>\r\n          <div\r\n            *ngIf=\"personalForm.get('fullname').get('surname').hasError('pattern') &&(personalForm.get('fullname').get('surname').dirty || personalForm.get('fullname').get('surname').touched)\"\r\n            class=\"error\">Only alphabets allowed</div>\r\n          <div\r\n            *ngIf=\"personalForm.get('fullname').get('surname').hasError('maxlength') &&(personalForm.get('fullname').get('surname').dirty || personalForm.get('fullname').get('surname').touched)\"\r\n            class=\"error\">Max length can be 20 characters</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\">\r\n    <div formGroupName=\"fullnameeng\">\r\n      <label>Full Name in English</label><br>\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-4\">\r\n          <input type=\"text\" class=\"form-control\" id=\"firstnameeng\" [(ngModel)]=\"firstnameeng\" placeholder=\"Enter firstname\"\r\n            formControlName=\"firstnameeng\" name=\"firstnameeng\" (change)=\"change()\">\r\n          <div\r\n            *ngIf=\"personalForm.get('fullnameeng').get('firstnameeng').hasError('required') &&(personalForm.get('fullnameeng').get('firstnameeng').dirty || personalForm.get('fullnameeng').get('firstnameeng').touched)\"\r\n            class=\"error\">This field is mandatory</div>\r\n          <div\r\n            *ngIf=\"personalForm.get('fullnameeng').get('firstnameeng').hasError('pattern') &&(personalForm.get('fullnameeng').get('firstnameeng').dirty || personalForm.get('fullnameeng').get('firstnameeng').touched)\"\r\n            class=\"error\">Only alphabets allowed</div>\r\n          <div\r\n            *ngIf=\"personalForm.get('fullnameeng').get('firstnameeng').hasError('maxlength') &&(personalForm.get('fullnameeng').get('firstnameeng').dirty || personalForm.get('fullnameeng').get('firstnameeng').touched)\"\r\n            class=\"error\">Max length can be 20 characters</div>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <input type=\"text\" class=\"form-control\" id=\"lastnameeng\" [(ngModel)]=\"lastnameeng\" placeholder=\"Enter middlename\"\r\n            formControlName=\"lastnameeng\" name=\"lastnameeng\" (change)=\"change()\">\r\n          <div\r\n            *ngIf=\"personalForm.get('fullnameeng').get('lastnameeng').hasError('pattern') &&(personalForm.get('fullnameeng').get('lastnameeng').dirty || personalForm.get('fullnameeng').get('lastnameeng').touched)\"\r\n            class=\"error\">Only alphabets allowed</div>\r\n        </div>\r\n        <div class=\"col-lg-4\">\r\n          <input type=\"text\" class=\"form-control\" id=\"surnameeng\" [(ngModel)]=\"surnameeng\" placeholder=\"Enter lastname\"\r\n            formControlName=\"surnameeng\" (change)=\"change()\">\r\n          <div\r\n            *ngIf=\"personalForm.get('fullnameeng').get('surnameeng').hasError('required') &&(personalForm.get('fullnameeng').get('surnameeng').dirty || personalForm.get('fullnameeng').get('surnameeng').touched)\"\r\n            class=\"error\">This field is mandatory</div>\r\n          <div\r\n            *ngIf=\"personalForm.get('fullnameeng').get('surnameeng').hasError('pattern') &&(personalForm.get('fullnameeng').get('surnameeng').dirty || personalForm.get('fullnameeng').get('surnameeng').touched)\"\r\n            class=\"error\">Only alphabets allowed</div>\r\n          <div\r\n            *ngIf=\"personalForm.get('fullnameeng').get('surnameeng').hasError('maxlength') &&(personalForm.get('fullnameeng').get('surnameeng').dirty || personalForm.get('fullnameeng').get('surnameeng').touched)\"\r\n            class=\"error\">Max length can be 20 characters</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"panel col-lg-12\">\r\n       <img class=\"user-key\" src=\"../../assets/excl.jpg\">\r\n        Please compare data in latin with data in vehicle registration certificate\r\n        or identity document.Data will be used for printout of Green Card Certificate.\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <label for=\"citizen\" class=\"col-lg-8\">Citizenship</label>\r\n      <div class=\"col-lg-4\">\r\n        <select class=\"form-control\" id=\"citizen\" [(ngModel)]=\"citizen\" formControlName=\"citizen\" name=\"citizen\" (change)=\"change()\">\r\n          <option selected disabled value=\"\">--SELECT--</option>\r\n          <option *ngFor=\"let c of citizens\" [value]=\"c\">{{c}}</option>\r\n        </select>\r\n        <div\r\n          *ngIf=\"personalForm.controls.citizen.hasError('required') &&(personalForm.controls.citizen.dirty || personalForm.controls.citizen.touched)\"\r\n          class=\"error\">Please select your Citizenship</div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\">\r\n    <div class=\"form-group row\">\r\n      <label for=\"birth\" class=\"col-lg-8\">Birth Date</label>\r\n      <div class=\"col-lg-4\">\r\n        <input type=\"date\" class=\"form-control\" [ngModel]=\"dob | date: 'yyyy-MM-dd'\" id=\"birth\" placeholder=\"Enter Birth date\" formControlName=\"birth\"\r\n          name=\"birth\" (change)=\"change()\">\r\n        <div\r\n          *ngIf=\"personalForm.controls.birth.hasError('required') &&(personalForm.controls.birth.dirty || personalForm.controls.birth.touched)\"\r\n          class=\"error\">Please select your birth date </div>\r\n      </div>\r\n    </div>\r\n    <hr class=\"line\">\r\n    <button type=\"submit\" class=\"btn btn-primary rounded-pill  col-sm-4 col-lg-2 col-md-3 nextbtn\" mat-raised-button matStepperNext\r\n      [disabled]=\"!personalForm.valid\">Next</button>\r\n  </form> \r\n"
        },
        {
            "name": "PolicyDetailsComponent",
            "id": "component-PolicyDetailsComponent-b0de267a8c0640925441a3c73bf2c1dd",
            "file": "src/app/components/policy-details/policy-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-policy-details",
            "styleUrls": [
                "./policy-details.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./policy-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "policyDate",
                    "line": 15,
                    "type": "Date"
                },
                {
                    "name": "policyLength",
                    "line": 16,
                    "type": "number"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "day",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "mindate",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "month",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "registerForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "todaydate",
                    "defaultValue": "new Date()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\n\r\n@Component({\r\n  selector: 'app-policy-details',\r\n  templateUrl: './policy-details.component.html',\r\n  styleUrls: ['./policy-details.component.css']\r\n})\r\nexport class PolicyDetailsComponent implements OnInit {\r\n\r\n  @Output() OnRegister = new EventEmitter()\r\n  @Output() OnToggle = new EventEmitter()\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n  @Input() policyDate: Date;\r\n  @Input() policyLength: number;\r\n  registerForm: FormGroup;\r\n  todaydate=new Date()\r\n  day=''\r\n  month=''\r\n  mindate=\"\"\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private GAService: GoogleAnalyticsService) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      policyDate: ['', Validators.required],\r\n      policyLength: ['', Validators.required],\r\n      check1: ['', Validators.requiredTrue],\r\n      check2: ['', Validators.requiredTrue]\r\n    });\r\n    this.todaydate.setDate(this.todaydate.getDate() + 1);\r\n    console.log(this.todaydate);\r\n    if((this.todaydate.getMonth()+1)<10){\r\n      this.month=\"0\"+(this.todaydate.getMonth()+1)\r\n    }else{\r\n      this.month=\"\"+(this.todaydate.getMonth()+1)\r\n    }\r\n    if(this.todaydate.getDate()<10){\r\n      this.day=\"0\"+this.todaydate.getDate()\r\n    }else{\r\n      this.day=\"\"+this.todaydate.getDate()\r\n    }\r\n    this.mindate=\"\"+this.todaydate.getFullYear()+\"-\"+this.month+\"-\"+this.day\r\n    console.log(this.mindate);\r\n    \r\n  }\r\n  submit=()=>{\r\n    this.GAService.event('Calculate Button clicked','Policy Details','Calculate')\r\n    console.log(this.registerForm.value, \"policy details\");\r\n    this.OnRegister.emit(this.registerForm.value);\r\n    this.OnSubmission.emit('Policy Details form is submitted!')\r\n  }\r\n  change=()=>{\r\n    if(this.registerForm.valid){\r\n      this.OnToggle.emit(true)\r\n      this.OnRegister.emit(this.registerForm.value);\r\n    }else{\r\n      this.OnToggle.emit(false)\r\n    }\r\n  }\r\n  get formControls(){\r\n    return this.registerForm.controls\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@media screen and (max-width: 768px){\r\n    .line{\r\n        display : none;\r\n    }\r\n}\r\n@media screen and (max-width: 575px){\r\n    .btn{\r\n        width: 250px;\r\n        margin: auto;\r\n        display: block;\r\n     \r\n        \r\n    }\r\n}\r\n",
                    "styleUrl": "./policy-details.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formControls": {
                    "name": "formControls",
                    "getSignature": {
                        "name": "formControls",
                        "type": "",
                        "returnType": "",
                        "line": 63
                    }
                }
            },
            "templateData": "<h1 class=\"font-weight-bold\"  style=\"color:rgb(8,56,95) ;font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\" >\r\n    Policy Details</h1>\r\n<form [formGroup]=\"registerForm\" (submit)=\"submit()\" style=\"color:rgb(8,56,95)\"><br>\r\n<div class=\"form-row\">\r\n    <div class=\" col-12 col-sm-7 col-md-8 col-lg-8 \">\r\n        <label for=\"policydate\">Start Date</label>\r\n    </div>\r\n    <div class=\" col-12 col-sm-5 col-md-4 col-lg-4  \">\r\n        <input class=\"form-control\" id=\"policydate\" type=\"date\" formControlName=\"policyDate\" (change)=\"change()\" [min]=\"mindate\" [ngModel]=\"policyDate|date:'yyyy-MM-dd'\">\r\n        <div class=\"error\" *ngIf=\"formControls.policyDate.touched && formControls.policyDate.errors\">\r\n            <div *ngIf=\"formControls.policyDate.errors.required\">This field is mandatory</div>\r\n        </div>\r\n    </div>  \r\n</div>\r\n<hr class=\"line\">\r\n<br>\r\n<div class=\"form-row\">\r\n    <div class=\" col-12 col-sm-7 col-md-8 col-lg-8\">\r\n        <label for=\"policyLength\"> Policy length</label>\r\n    </div>\r\n    <div class=\"col-12 col-sm-5 col-md-4 col-lg-4 \">\r\n        <select formControlName=\"policyLength\" [(ngModel)]=\"policyLength\" class=\"form-control\" (change)=\"change()\">\r\n            <option selected disabled value=\"\" >--SELECT--</option>\r\n            <option value=\"1\" id=\"policyLength\" [selected]=\"1===policyLength\">1 Month</option>\r\n            <option value=\"3\" id=\"policyLength\" [selected]=\"3===policyLength\">3 Months</option>\r\n            <option value=\"6\" id=\"policyLength\" [selected]=\"6===policyLength\">6 Months</option>\r\n            <option value=\"12\" id=\"policyLength\" [selected]=\"12===policyLength\">12 Months</option>\r\n        </select>\r\n        <div class=\"error\" *ngIf=\"formControls.policyLength.touched && formControls.policyLength.errors\">\r\n            <div *ngIf=\"formControls.policyLength.errors.required\">Policy Length is required</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<hr class=\"line\">\r\n<br><br>\r\n<div class=\" border shadow  col-12 col-sm-12 col-md-12 col-lg-12 p-3 mb-3 bg-white rounded\">\r\n    <input type=\"checkbox\" formControlName=\"check1\" (change)=\"change()\"> I have read and accepted <span class=\"text-primary\">\"Personal Data Protection Information\"</span>\r\n\r\n</div>\r\n<div class=\"error\" *ngIf=\"formControls.check1.touched && formControls.check1.errors\">\r\n    <div *ngIf=\"formControls.check1.invalid\">Please read and accept </div>\r\n</div>\r\n<br>\r\n<div class=\"border shadow col-12 col-sm-12 col-md-12 col-lg-12 p-3 mb-3 bg-white rounded\">\r\n    <input type=\"checkbox\" formControlName=\"check2\" (change)=\"change()\"> I have read the <span class=\"text-primary\">\"Motor Insurance Third Party Liability Insurance Document\"</span>\r\n\r\n</div>\r\n<div class=\"error\" *ngIf=\"formControls.check2.touched && formControls.check2.errors\">\r\n    <div *ngIf=\"formControls.check2.invalid\">Please read and accept </div>\r\n</div>\r\n<br>\r\n<button class=\"btn btn-primary rounded-pill col-sm-4 col-lg-2 col-md-3\" matStepperNext [disabled]=\"!registerForm.valid\">Calculate</button>\r\n</form>\r\n"
        },
        {
            "name": "ProposalComponent",
            "id": "component-ProposalComponent-01e18fc7b60eaf04906b514796f75b34",
            "file": "src/app/components/proposal/proposal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-proposal",
            "styleUrls": [
                "./proposal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./proposal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "changeStep",
                    "defaultValue": "new EventEmitter()",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "moveTab",
                    "defaultValue": "new EventEmitter()",
                    "line": 22,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnAdditionalCovers",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnDelivery",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 28,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnInstallment",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnInsuringParty",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 26,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnPolicyDates",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 29,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnVehicleInfo",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 25,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnVehicleOwner",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 27,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "edit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "first",
                    "defaultValue": "\"170.27 BGN\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "fourth",
                    "defaultValue": "'abcd'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "installmentData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "moveToCalculator",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "mtplCalculatorData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "mtplPolicyData",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "sdate",
                    "defaultValue": "'04-03-54'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "secondI",
                    "defaultValue": "\"182.40 BGN\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "summaryForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "third",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CommonDataService } from 'src/app/common-data.service';\r\n\r\n@Component({\r\n  selector: 'app-proposal',\r\n  templateUrl: './proposal.component.html',\r\n  styleUrls: ['./proposal.component.css']\r\n})\r\nexport class ProposalComponent implements OnInit {\r\n\r\n  summaryForm:FormGroup;\r\n  first:string=\"170.27 BGN\";\r\n  secondI:string=\"182.40 BGN\";\r\n  third:string='';\r\n  fourth:string='abcd';\r\n  sdate:string='04-03-54';\r\n  mtplCalculatorData;\r\n  mtplPolicyData;\r\n  installmentData\r\n  @Output() changeStep = new EventEmitter()\r\n  @Output() moveTab = new EventEmitter()\r\n  @Output() OnInstallment = new EventEmitter<any>();\r\n  @Output() OnAdditionalCovers = new EventEmitter<any>();\r\n  @Output() OnVehicleInfo = new EventEmitter<any>();\r\n  @Output() OnInsuringParty = new EventEmitter<any>();\r\n  @Output() OnVehicleOwner = new EventEmitter<any>();\r\n  @Output() OnDelivery = new EventEmitter<any>();\r\n  @Output() OnPolicyDates = new EventEmitter<any>();\r\n  moveToCalculator=(index)=>{\r\n    this.moveTab.emit(index)\r\n      if(index===0){\r\n        this.OnVehicleInfo.emit('Vehicle edit button clicked')\r\n      }\r\n      if(index===1){\r\n        this.OnInsuringParty.emit('Insuring Party edit button clicked')\r\n      }\r\n      if(index===2){\r\n        this.OnPolicyDates.emit('Policy Dates edit button clicked')\r\n      }\r\n      if(index===3){\r\n        this.OnInstallment.emit('Installment edit button clicked')\r\n      }\r\n      if(index===4){\r\n        this.OnAdditionalCovers.emit('Additional Covers edit button clicked')\r\n      }\r\n    }\r\n\r\n    \r\n  constructor(private fb: FormBuilder,private _dataService:CommonDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._dataService.formData.subscribe(data=>{\r\n      this.mtplCalculatorData=data;\r\n      this.installmentData=data[\"installmentsData\"].installments\r\n      console.log(this.installmentData);\r\n      \r\n     })\r\n     this._dataService.policyData.subscribe(data=>{\r\n       console.log(data);\r\n       \r\n       this.mtplPolicyData=data;\r\n       console.log(this.mtplPolicyData[\"vehicleOwnerInformation\"]);\r\n       \r\n       if(this.mtplPolicyData[\"vehicleOwnerInformation\"]==\"Yes\"){\r\n         var obj={    fullname: {firstname: this.mtplPolicyData[\"personalInformation\"].fullname.firstname,\r\n          lastname: this.mtplPolicyData[\"personalInformation\"].fullname.lastname, \r\n          surname: this.mtplPolicyData[\"personalInformation\"].fullname.surname},\r\n          city: this.mtplPolicyData[\"contactInformation\"].city,\r\n          street:this.mtplPolicyData[\"contactInformation\"].street,\r\n     \r\n       lnch: this.mtplPolicyData[\"personalInformation\"].lnch\r\n     \r\n            \r\n         }\r\n         this.mtplPolicyData[\"vehicleOwnerInformation\"]=obj\r\n         \r\n         \r\n         \r\n       }\r\n       \r\n\r\n     })\r\n//      this._dataService.installmentData.subscribe(data=>{\r\n// this.installmentData=data\r\n// console.log(data);\r\n\r\n//      })\r\n    \r\n    this.summaryForm=this.fb.group({\r\n      firstInstalment:[this.first],\r\n      secondInstalment:[this.secondI],\r\n      thirdInstalment:[this.third],\r\n      fourthInstalment:[this.fourth],\r\n      additionalCover:[''],\r\n      startDate:[this.sdate],\r\n      endDate:[''],\r\n      vehicleRegistration:[''],\r\n      vehiclePurpose:[''],\r\n      certificationNumber:[''],\r\n      days:[''],\r\n      number:[''],\r\n      fullName:[''],\r\n      phoneNumber:[''],\r\n      email:[''],\r\n      cityZipcode:[''],\r\n      streetNumber:[''],\r\n      apartment:[''],\r\n      egnnumber:[''],\r\n      fullnamevehicleowner:[''],\r\n      cityZipcodevehicleOwner:[''],\r\n      streetNumbervehicleowner:[''],\r\n      fullNameDelivery:[''],\r\n      phoneNumDelivery:[''],\r\n      addressType:[''],\r\n      cityZipcodeDelivery:[''],\r\n      streetNumberDelivery:[''],\r\n      block:[''],\r\n      apartmentDelivery:[''],\r\n      AgreeToAll:[false,Validators.requiredTrue],\r\n      receiveNewsletter:[false,Validators.requiredTrue],\r\n      generalTerms:[false,Validators.requiredTrue]\r\n    })\r\n  }\r\n  edit=(index)=>{\r\n    console.log(\"inside edit\",index);\r\n    if(index===2){\r\n      this.OnVehicleOwner.emit('Vehicle owner edit button clicked');\r\n    }\r\n    if(index===3){\r\n      this.OnDelivery.emit('Delivery edit button clicked');\r\n    }\r\n    this.changeStep.emit(index)\r\n  }\r\n\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".edit_prop{\r\n    color: dodgerblue;\r\n}\r\n\r\n.email_btn_prop{\r\n    border-radius: 3rem;\r\n    margin-right: 1rem;\r\n}\r\n\r\n.label_prop{\r\n    color:rgb(8,56,95);\r\n    font-family: 'Trebuchet MS',Arial,sans-serif;\r\n    font-weight: bold;\r\n    margin-left: 1rem;\r\n}\r\n.middle-heading{\r\n    display: flex;\r\n    height: 100%;\r\n    align-items: center;\r\n    font-size: 17px;\r\n    padding-left: 20px;\r\n    /* padding-top: 2rem; */\r\n\r\n}\r\n.img-middle{\r\n    align-items: center;\r\n}\r\n.card-num{\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n}\r\n.sub_label_prop{\r\n    font-size: small;\r\n}\r\nh6{\r\n    color: rgb(0, 53, 103); \r\n}\r\np{\r\n    color: rgb(80, 108, 134); \r\n    text-align: justify;\r\n}\r\ninput{\r\n    color: rgb(0, 53, 103); \r\n    border:none;\r\n    outline: no;\r\n}\r\n.edit{\r\n    width: 50%;\r\n}\r\n\r\n.card_bg{\r\n    background-color:  #003564;\r\n    color: #ffffff;\r\n    /* background-color: \trgb(0, 53, 103);*/\r\n    border-radius: 0.5rem; \r\n}\r\n\r\n.shadow{\r\n    box-shadow: darkgray;\r\n}\r\n\r\n.font_color{\r\n    color:rgb(0, 53, 103);\r\n}\r\n.tick{\r\n    width: 30px;\r\n    height: 20px;\r\n    margin-left: -1rem;\r\n}\r\n.text{\r\n    margin-left: -1rem;\r\n    color:rgb(8,56,95);\r\n}\r\n.nearelm{\r\n    font-size: 20px;\r\n}\r\n.num{\r\n    color:rgb(8,56,95);\r\n    \r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    \r\n    padding: 0%;\r\n   \r\n}\r\n.bgn  {\r\n    color:white;\r\n    /* margin-left: 30px; */\r\n    margin-left: auto;\r\n    }\r\n.user-key{\r\n        width: 40px;\r\n        position: absolute;\r\n        z-index: 1;\r\n        top:15px;\r\n        left: -25px;\r\n}\r\n.panel{\r\n    border-width: thin;\r\n    border-style: solid;\r\n    border-color:orange;\r\n    border-radius:5px;\r\n    padding:25px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n\r\n@media screen and (max-width: 450px){\r\n    .bgn{\r\n        margin-left: 18px;\r\n     }\r\n     .num{\r\n        margin-left: 30px;\r\n    }\r\n    .middle-heading{\r\n        margin-left: 20px;\r\n        font-size: 15px;\r\n    }\r\n\r\n}\r\n\r\n@media all and (max-width: 767px) {\r\n    .middle-heading{\r\n        font-size: 15px;\r\n        padding-left: 5%;\r\n        height:80%;\r\n        padding-top: 0%;\r\n        padding-bottom: 0%;\r\n        \r\n    }\r\n    .text-small{\r\n        font-size:11px;\r\n    }\r\n    .num{\r\n        font-size: 20px;\r\n        padding-left: 10%;\r\n        text-align: left;\r\n        padding-left: 0%;\r\n        padding-top: 5%;\r\n    }\r\n    .nearelm{\r\n        font-size: 13px;\r\n    }\r\n    .bgn{\r\n        font-size: 12px;\r\n        padding-left: 5%;\r\n        text-align: left;\r\n        \r\n    }\r\n}\r\n",
                    "styleUrl": "./proposal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "_dataService",
                        "type": "CommonDataService"
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_dataService",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    <div class=\"container\">\r\n    <div class=\"row\">\r\n    <h1 class=\"label_prop\">Proposal</h1>\r\n    <button class=\"btn btn-outline-primary email_btn_prop ml-auto\">Send to email</button>\r\n    </div>\r\n    \r\n        <!-- <div class=\"d-flex justify-content-between col-md-12 mx-auto\">\r\n            <h1 class=\"p-2 label_prop\">Proposal</h1>\r\n            <div class=\"p-2\"><button class=\"btn btn-outline-primary email_btn_prop\">Send to email</button></div>\r\n        </div> -->\r\n        <br/>\r\n\r\n       <div class=\"row\">\r\n       <div class=\"card card_bg col-md-12 col-12 mx-auto\"> \r\n        <div class=\"card-body\">\r\n        <div class=\"row\">\r\n        <div class=\"col-md-1 col-2 p-0\">\r\n            <img src=\"../../../assets/motor_policy.PNG\">\r\n        </div>\r\n        \r\n           <div class=\"col-md-10 col-9 pr-0 m-auto\">\r\n            <div class=\"row\">\r\n               <div class=\"col-md-8 col-12 p-0\">\r\n               <span class=\"card-text middle-heading text-small\" style=\"color: white;\">Motor Third Party Liability Policy</span>\r\n            </div>\r\n            <!-- </div>             -->\r\n                <div class=\"col-md-4 col-12 ml-auto p-0\">\r\n                <div class=\"card-text card-num num\" style=\"color: white;\">324<span class=\"nearelm\">,00 BGN</span></div>\r\n                <div class=\"bgn\" style=\"color: white;\">Four Payments</div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n        </div>\r\n            <!-- <div class=\"col-lg-3 col-md-3 col-sm-12 ml-auto\">\r\n            <p  class=\"card-text\" style=\"color:white;font-weight: 100;\">{{mtplCalculatorData[\"installmentsData\"].term}}</p>\r\n            </div> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n<br/>\r\n        <!-- <div class=\"col-md-12 col-12 mx-auto\"> -->\r\n            <!-- <div class=\"card\" style=\"border:none\"> -->\r\n                <!-- <div class=\"card-body  border-bottom\"> -->\r\n                    <div class=\"row\">\r\n                   <div class=\"col-1\"><img class=\"tick\" src=\"../../../assets/tick.jpg\"></div>\r\n                        <span class=\"col-10 text\">Premium indicated are final and include Contribution to the Gaurantee and Insurance Fund, stickers and 2% tax on insurance payment.</span>\r\n                    </div><br/>\r\n                <div class=\"row\">\r\n                    <div class=\"col-1\"><img class=\"tick\" src=\"../../../assets/tick.jpg\"></div>\r\n                    <span class=\"col-10 text\">The insurance payment is calculated with included - 5% discount for insurance with \"Casco+\".</span>\r\n                </div><br/>\r\n                <div class=\"row\">\r\n                <div class=\"col-1\"><img class=\"tick\" src=\"../../../assets/tick.jpg\"></div>\r\n                    <span class=\"col-10 text\">Annual Technical Inspection Voucher</span>\r\n                </div>\r\n                <!-- </div> -->\r\n            <!-- </div> -->\r\n            <br/>\r\n            \r\n\r\n            <form [formGroup]=\"summaryForm\">\r\n\r\n            <div class=\"card\" style=\"border:none\">\r\n                <div class=\"card-body border-bottom\">\r\n                    \r\n                    <label class=\"label_prop\">Instalments</label>&nbsp;&nbsp;&nbsp;\r\n                    <button (click)=\" moveToCalculator(3)\" class=\"btn btn-outline-none email_btn_prop\" style=\"text-decoration: underline;color: rgb(43, 168, 226);\">Edit</button>\r\n                    <div class=\"row\">\r\n\r\n          \r\n                <div class=\"col-md-3\">                    \r\n                    <div  *ngFor='let ele of installmentData;let indexOfEle=index;'>\r\n                    <label class=\"font_color sub_label_prop\" >{{indexOfEle+1 |ordinal}} Installment</label>\r\n                    <!-- <input type=\"text\" class=\"form-control\" id=\"firstInstalment\"  value={{first}}> -->\r\n                    <p>{{ele}}</p>\r\n                    </div>\r\n                    <!-- <span *ngIf=\"summaryForm.controls.firstInstalment.errors\" style=\"color: red;\">Required</span> -->\r\n                </div>\r\n\r\n                \r\n            </div>\r\n\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n            <div class=\"card\" style=\"border:none\">\r\n                <div class=\"card-body  border-bottom\">\r\n                    <label class=\"label_prop\">Additional Cover</label>&nbsp;&nbsp;&nbsp;\r\n                    <button (click)=\" moveToCalculator(4)\" class=\"btn btn-outline-none email_btn_prop\" style=\"text-decoration: underline;color: rgb(43, 168, 226);\">Edit</button>\r\n                    <div class=\"form-group\">\r\n                    <!-- <input type=\"text\" formControlName=\"additionalCover\" class=\"form-control label_prop\" [value]=\"\"> -->\r\n                    {{mtplCalculatorData[\"coversData\"].cover}}\r\n                </div>\r\n                <!-- <span *ngIf=\"summaryForm.controls.additionalCover.errors\" style=\"color: red;\">Required</span> -->\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n            <div class=\"card\" style=\"border:none\">\r\n                <div class=\"card-body  border-bottom\">\r\n                    <label class=\"label_prop\">Policy Dates</label>&nbsp;&nbsp;&nbsp;\r\n                    <a href=\"#\" class=\"edit_prop\">Edit</a>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                           <label class=\"font_color sub_label_prop\">Start Date</label><br>\r\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"startDate\" [value]=\"\"> -->\r\n                            {{mtplCalculatorData[\"policyDetailsData\"].policyDate}}\r\n                            </div>\r\n                            <!-- <span *ngIf=\"summaryForm.controls.startDate.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">End Date</label>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"endDate\" [value]=\"\"> -->\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.endDate.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n            <div class=\"card\" style=\"border:none\">\r\n                <div class=\"card-body  border-bottom\">\r\n                    <label class=\"label_prop\">Vehicle</label>\r\n                    <button (click)=\" moveToCalculator(0)\" class=\"btn btn-outline-none email_btn_prop\" style=\"text-decoration: underline;color: rgb(43, 168, 226);\">Edit</button>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Vehicle Registration Number</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"vehicleRegistration\" [value]=\"\" > -->\r\n                       {{mtplCalculatorData[\"vehicleData\"].registrationNumber}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.vehicleRegistration.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Vehicle Purpose</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"vehiclePurpose\" [value]=\"\"> -->\r\n                        {{mtplCalculatorData[\"vehicleData\"].purpose}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.vehiclePurpose.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Vehicle Certification Number</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"certificationNumber\" [value]=\"\"> -->\r\n                        {{mtplCalculatorData[\"vehicleData\"].certificateNumber}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.certificationNumber.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Driven outside bulgaria for more than 60 days</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"days\" [value]=\"\"> -->\r\n                        {{mtplCalculatorData[\"vehicleData\"].yesNo}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.days.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                        <!--<div class=\"card border-warning\">\r\n                            <img class=\"edit\" src=\"../../assets/edit.jpg\">\r\n                            <div class=\"card-body font_color\">\r\n                                <i class=\"fa fa-pencil-square-o fa-2x\" style=\"color: orange; text-align: justify;\"></i>\r\n                                <div style=\"text-align: justify; padding-left: 15px; padding-right: 15px; padding-top: 10px; padding-bottom: 15px;\">Casco has an active policy for the same vehicle with different data.The change in the \r\n                                data will be reflacted in an. The ann will be sent to you by courier/ email or will be\r\n                                provided for signing by e-signature.\r\n                                </div>\r\n                                        \r\n                            </div>\r\n                        </div>-->\r\n                        <div class=\"panel col-lg-12\">\r\n                            <img class=\"user-key\" src=\"../../assets/edit.jpg\">\r\n                            Casco has an active policy for the same vehicle with different data.The change in the \r\n                            data will be reflacted in an. The ann will be sent to you by courier/ email or will be\r\n                            provided for signing by e-signature.\r\n                         </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n            <div class=\"card\" style=\"border:none\">\r\n                <div class=\"card-body border-bottom\">\r\n                    <label class=\"label_prop\">Insuring Party</label>&nbsp;&nbsp;&nbsp;\r\n                    <button (click)=\" moveToCalculator(1)\" class=\"btn btn-outline-none email_btn_prop\" style=\"text-decoration: underline;color: rgb(43, 168, 226);\">Edit</button>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">ENG/ELK/LNCH Number</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"number\" [value]=\"\"> -->\r\n                        {{mtplCalculatorData[\"insuringPartyData\"].egn}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.number.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Full Name</label><br>\r\n                        {{mtplPolicyData[\"personalInformation\"].fullname.firstname}} {{mtplPolicyData[\"personalInformation\"].fullname.lastname}} {{mtplPolicyData[\"personalInformation\"].fullname.surname}}\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"fullName\" [value]=\"\"> -->\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.fullName.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Phone Number</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"phoneNumber\" [value]=\"\"> -->\r\n                        {{mtplPolicyData[\"contactInformation\"].phone}} <br>\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.phoneNumber.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Email</label><br>\r\n                        {{mtplCalculatorData[\"insuringPartyData\"].email}}\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"email\" [value]=\"\"> -->\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.email.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">City and zipcode</label><br>\r\n                        {{mtplPolicyData[\"contactInformation\"].city}}   {{mtplPolicyData[\"contactInformation\"].pincode}} \r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"cityZipcode\" [value]=\"\"> -->\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.cityZipcode.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Street & Number</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"streetNumber\" [value]=\"\"> -->\r\n                        {{mtplPolicyData[\"contactInformation\"].street}}   {{mtplPolicyData[\"contactInformation\"].No}} \r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.streetNumberors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Apartment</label><br>\r\n                        {{mtplPolicyData[\"contactInformation\"].appartment}} \r\n                        <!-- <input type=\"number\" class=\"form-control\" formControlName=\"apartment\" [value]=\"\"> -->\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.apartment.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n            <div class=\"card\" style=\"border:none\">\r\n                <div class=\"card-body border-bottom\">\r\n                    <label class=\"label_prop\">Vehicle Owner</label>&nbsp;&nbsp;&nbsp;\r\n                    <button (click)=\"edit(2)\" class=\"edit_prop\" class=\"btn btn-outline-none email_btn_prop\" style=\"text-decoration: underline;color: rgb(43, 168, 226);\">Edit</button>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                            <label class=\"font_color sub_label_prop\">EGN/ELK/LNCH Number</label><br>\r\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"egnnumber\" [value]=\"\"> -->\r\n                            {{mtplPolicyData[\"vehicleOwnerInformation\"].lnch}}\r\n                            </div>\r\n                            <!-- <span *ngIf=\"summaryForm.controls.egnnumber.errors\" style=\"color: red;\">Required</span> -->\r\n                            <div class=\"form-group\">\r\n                            <label class=\"font_color sub_label_prop\">Full Name</label><br>\r\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"fullnamevehicleowner\" [value]=\"\"> -->\r\n                            {{mtplPolicyData[\"vehicleOwnerInformation\"].fullname.firstname}}\r\n                            </div>\r\n                            <!-- <span *ngIf=\"summaryForm.controls.fullnamevehicleowner.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                            <label class=\"font_color sub_label_prop\">city & zipcode</label><br>\r\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"cityZipcodevehicleOwner\" [value]=\"\"> -->\r\n                            {{mtplPolicyData[\"vehicleOwnerInformation\"].city}}      \r\n                            </div>\r\n                            <!-- <span *ngIf=\"summaryForm.controls.cityZipcodevehicleOwner.errors\" style=\"color: red;\">Required</span> -->\r\n                            <div class=\"form-group\">\r\n                            <label class=\"font_color sub_label_prop\">street & Number</label><br>\r\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"streetNumbervehicleowner\" [value]=\"\"> -->\r\n                            {{mtplPolicyData[\"vehicleOwnerInformation\"].street}}      {{mtplPolicyData[\"vehicleOwnerInformation\"].No}}\r\n                            </div>\r\n                            <!-- <span *ngIf=\"summaryForm.controls.streetNumbervehicleowner.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n            <div class=\"card\" style=\"border:none\">\r\n                <div class=\"card-body border-bottom\">\r\n                    <label class=\"label_prop\">Delivery</label>&nbsp;&nbsp;&nbsp;\r\n                    <button (click)=\"edit(3)\" class=\"edit_prop\" class=\"btn btn-outline-none email_btn_prop\" style=\"text-decoration: underline;color: rgb(43, 168, 226);\">Edit</button>\r\n                    <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Full Name</label><br>\r\n                        {{mtplPolicyData[\"deliveryInformation\"].fullName}}\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"fullNameDelivery\" [value]=\"\"> -->\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.fullNameDelivery.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Phone Number</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"phoneNumDelivery\" [value]=\"\"> -->\r\n                        {{mtplPolicyData[\"deliveryInformation\"].contact}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.phoneNumDelivery.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Address Type</label><br>\r\n                        {{mtplPolicyData[\"deliveryInformation\"].business}}\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"addressType\" [value]=\"\"> -->\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.addressType.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">City and zipcode</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"cityZipcodeDelivery\" [value]=\"\"> -->\r\n                        {{mtplPolicyData[\"deliveryInformation\"].city}} and {{mtplPolicyData[\"deliveryInformation\"].pincode}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.cityZipcodeDelivery.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Street & Number</label><br>\r\n                        <!-- <input type=\"text\" class=\"form-control\" formControlName=\"streetNumberDelivery\" [value]=\"\"> -->\r\n                        {{mtplPolicyData[\"deliveryInformation\"].street}} and {{mtplPolicyData[\"deliveryInformation\"].number}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.streetNumberDelivery.errors\" style=\"color: red;\">Required</span> -->\r\n                      \r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Block</label><br>\r\n                        <!-- <input type=\"number\" class=\"form-control\" formControlName=\"block\" [value]=\"\"> -->\r\n                        {{mtplPolicyData[\"deliveryInformation\"].block}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.block.errors\" style=\"color: red;\">Required</span> -->\r\n                        <div class=\"form-group\">\r\n                        <label class=\"font_color sub_label_prop\">Apartment</label><br>\r\n                        <!-- <input type=\"number\" class=\"form-control\" formControlName=\"apartmentDelivery\" [value]=\"\"> -->\r\n                        {{mtplPolicyData[\"deliveryInformation\"].appt}}\r\n                        </div>\r\n                        <!-- <span *ngIf=\"summaryForm.controls.apartmentDelivery.errors\" style=\"color: red;\">Required</span> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n        \r\n            <div class=\"card\" style=\"border:none\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group form-check\">\r\n                    <input type=\"checkbox\" class=\"font_color form-check-input\" formControlName=\"AgreeToAll\">\r\n                    <div>  Agree to all</div>\r\n                </div>\r\n                <span *ngIf=\"summaryForm.controls.AgreeToAll.errors && summaryForm.controls.AgreeToAll.touched\" style=\"color: red;\">Required</span>\r\n            </div>\r\n            </div><br/>\r\n            <div class=\"card\" style=\"box-shadow:2px 2px 2px gray;\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group form-check\">\r\n                    <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"receiveNewsletter\" style=\"color: rgb(0, 53, 103)\" > \r\n                    <div>I agree to receive DZI newsletter</div>\r\n                </div>\r\n                <span *ngIf=\"summaryForm.controls.receiveNewsletter.errors && summaryForm.controls.receiveNewsletter.touched\" style=\"color: red;\">Required</span>\r\n            </div>\r\n            </div><br/>\r\n            <div class=\"card\" style=\"box-shadow: 2px 2px 2px gray;\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"form-group form-check\">\r\n                    <input type=\"checkbox\" style=\"color: rgb(0, 53, 103);\" class=\"form-check-input\" formControlName=\"generalTerms\"> \r\n                   <div>I agree to the <a href=\"#\" style=\"color:dodgerblue ;\">general terms and conditions</a></div>\r\n                   <span *ngIf=\"summaryForm.controls.generalTerms.errors && summaryForm.controls.generalTerms.touched\" style=\"color:red\">required</span>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </form><br/><br/>\r\n\r\n            <button class=\"btn btn-primary\" style=\"border-radius: 3rem;\" matStepperNext [disabled]=\"summaryForm.invalid\">Continue to payment</button>\r\n        <!-- </div> -->\r\n        \r\n    </div>\r\n</body>\r\n</html>"
        },
        {
            "name": "SignUpComponent",
            "id": "component-SignUpComponent-fe850e107b63366f849577eb6aab1ac5",
            "file": "src/app/components/sign-up/sign-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-up",
            "styleUrls": [
                "./sign-up.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "confirmPassword",
                    "line": 14,
                    "type": "String"
                },
                {
                    "name": "email",
                    "line": 12,
                    "type": "String"
                },
                {
                    "name": "fullName",
                    "line": 11,
                    "type": "String"
                },
                {
                    "name": "password",
                    "line": 13,
                    "type": "String"
                },
                {
                    "name": "phoneNo",
                    "line": 15,
                    "type": "Number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "register",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "signUpForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  @Input() fullName:String;\r\n  @Input() email:String;\r\n  @Input() password:String;\r\n  @Input() confirmPassword:String;\r\n  @Input() phoneNo:Number;\r\n  signUpForm:FormGroup\r\n\r\n  constructor(private fb:FormBuilder, private router:Router) { }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.signUpForm=this.fb.group({\r\n      fullName:['',[Validators.required]],\r\n      email:['',[Validators.required,Validators.pattern(/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/)]],\r\n      password:['',[Validators.required]],\r\n      confirmPassword:['',[Validators.required]],\r\n      phoneNo:['',[Validators.required,Validators.minLength(10),Validators.maxLength(10)]]\r\n    },{validator:passwordValidator})\r\n  }\r\n\r\n  register=()=>{\r\n    // if(this.signUpForm.value.password==this.signUpForm.value.confirmPassword){\r\n    //   console.log(this.signUpForm.value);\r\n    //   this.router.navigate([\"/signIn\"]);\r\n    // }\r\n    // else{\r\n    //   alert('password should be same')\r\n    // }\r\n    console.log(this.signUpForm.value);\r\n    alert(\"You are registered Succussfully\")\r\n    // this.router.navigate([\"/signIn\"])\r\n    \r\n    setTimeout(()=>{\r\n      this.router.navigate([\"/signIn\"])\r\n    })\r\n  }\r\n\r\n  \r\n\r\n}\r\nfunction passwordValidator(c:AbstractControl) {\r\n  const password=c.get('password')\r\n  const confirmPassword=c.get('confirmPassword')\r\n  if(password.pristine || confirmPassword.pristine){\r\n    return null\r\n  }\r\n  return password.value != confirmPassword.value ? {'misMatch':true} : null\r\n  \r\n  \r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n    margin-top: 30px;\r\n    margin-bottom: 30px;\r\n    \r\n    \r\n  }\r\n  ",
                    "styleUrl": "./sign-up.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-md-6 offset-md-3\">\r\n            <div class=\"jumbotron\">\r\n                <h1 style=\"text-align: center;\" class=\"text-primary\">Sign Up</h1>\r\n            <form [formGroup]='signUpForm'>\r\n                <div class=\"form-group\">\r\n                    <label for=\"fullName\">Full Name:</label>\r\n                    <input id=\"fullName\" class=\"form-control\" [(ngModel)]=\"fullName\" formControlName='fullName'>\r\n                </div>\r\n                <div id='fullNameError' *ngIf='signUpForm.controls.fullName.touched'>\r\n                    <span class=\"text-danger\" *ngIf='signUpForm.controls.fullName.errors?.required'>Required</span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for='email'>Email:</label>\r\n                    <input id='email' class=\"form-control\" [(ngModel)]=\"email\" formControlName='email'>\r\n                </div>\r\n                <div id='emailError' *ngIf='signUpForm.controls.email.touched'>\r\n                    <span class=\"text-danger\" *ngIf='signUpForm.controls.email.errors?.required'>Required</span>\r\n                    <span class=\"text-danger\" *ngIf='signUpForm.controls.email.errors?.pattern'>enter valid email Id</span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password:</label>\r\n                    <input id='password' type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" formControlName='password'>\r\n\r\n                </div>\r\n                <div id='passwordError' *ngIf='signUpForm.controls.password.touched'>\r\n                    <span class=\"text-danger\" *ngIf='signUpForm.controls.password.errors?.required'>Required</span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"confirmPassword\">Confirm Password:</label>\r\n                    <input id='confirmPassword' type='password' class=\"form-control\" [(ngModel)]=\"confirmPassword\" formControlName='confirmPassword'>\r\n                </div>\r\n                <div id='confirmPasswordError' *ngIf='signUpForm.controls.confirmPassword.touched'>\r\n                    <span class=\"text-danger\" *ngIf='signUpForm.controls.confirmPassword.errors?.required'>Required</span>\r\n                </div>\r\n                <div *ngIf=\"(signUpForm.errors?.misMatch && !signUpForm.controls.confirmPassword.errors?.required) && (signUpForm.controls.confirmPassword.dirty && signUpForm.controls.confirmPassword.touched)\" class=\"error\">Password did not match</div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"phoneNo\">Phone No:</label>\r\n                    <input id=\"phoneNo\" class=\"form-control\" [(ngModel)]=\"phoneNo\" formControlName='phoneNo'>\r\n                </div>\r\n                <div id='phoneNoError' *ngIf='signUpForm.controls.phoneNo.touched'>\r\n                    <span class=\"text-danger\" *ngIf='signUpForm.controls.phoneNo.errors?.required'>Required</span>\r\n                    <span class=\"text-danger\" *ngIf='signUpForm.controls.phoneNo.errors?.minlength || signUpForm.controls.phoneNo.errors?.maxlength'>Enter valid phone No</span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <button class=\"btn btn-block btn-primary\" [disabled]='!signUpForm.valid' (click)='register()'>Register</button>\r\n                </div>\r\n            </form>\r\n            <div class=\"text-center\">Already have an account? <a [routerLink]=\"['/signIn']\" >Sign in</a></div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n</div>\r\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-1e4416abe4208e496daed3a4d2a50542",
            "file": "src/app/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper",
            "styleUrls": [
                "./stepper.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addressForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isLinear",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "personalInformation",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "status",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "toggle",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "checked",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "courseReg",
                    "args": [
                        {
                            "name": "data",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { CommonDataService } from '../common-data.service';\r\n@Component({\r\n  selector: 'app-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.css']\r\n})\r\nexport class StepperComponent implements OnInit {\r\n  isLinear = true;\r\n  status= false;\r\n  personalInformation: FormGroup;\r\n  addressForm: FormGroup;\r\n  toggle=false\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _commonData:CommonDataService) { }\r\n\r\n  ngOnInit(): void {this.personalInformation = this._formBuilder.group({\r\n    first: ['', [Validators.required,Validators.pattern(/^[A-z][A-z]+$/)]],\r\n    middle: ['', ],\r\n    last: ['', [Validators.required,Validators.pattern(/^[A-z][A-z]+$/)]],\r\n    gender: ['', Validators.required],\r\n    birth: ['', Validators.required],\r\n    email: ['', [Validators.required,Validators.pattern(/^[A-z][A-z0-9]+(@)[A-z]+(.com)$/)]],\r\n    SSN: ['', Validators.required]\r\n  });\r\n  \r\n  \r\n  this.addressForm = this._formBuilder.group({\r\n    mailingAddress: ['', Validators.required],\r\n    city: ['', Validators.required],\r\n    state: ['', Validators.required],\r\n    phoneNo: ['', [Validators.required,Validators.minLength(10),Validators.maxLength(10)]],\r\n    \r\n  });\r\n  \r\n  }\r\n  checked(event){\r\nthis.status=event.checked\r\n\r\n  }\r\n  onSubmit(){\r\n    console.log(this.personalInformation.value);\r\n    console.log(this.addressForm.value);\r\n    this._commonData.formData.next(this.personalInformation.value)\r\n    \r\n    \r\n    \r\n  }\r\n  courseReg(data) {\r\n    console.log(data,\"stepper\");\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-form-field {\r\n    margin-left: 8px;\r\n  }\r\n",
                    "styleUrl": "./stepper.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "_commonData",
                        "type": "CommonDataService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_commonData",
                        "type": "CommonDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-horizontal-stepper labelPosition=\"bottom\" #stepper linear>\r\n\r\n  <mat-step completed={{toggle}}>\r\n    <ng-template matStepLabel>Policy Details</ng-template>\r\n    <app-policy-details (OnRegister)=\"courseReg($event)\" (OnToggle)=\"toggle=$event\"></app-policy-details>\r\n  </mat-step>\r\n\r\n  <mat-step completed={{toggle}}>\r\n    <ng-template matStepLabel>Vehicle </ng-template>\r\n    <app-v-info (OnRegister)=\"courseReg($event)\" (OnToggle)=\"toggle=$event\"></app-v-info>\r\n    {{toggle}}\r\n  </mat-step>\r\n\r\n\r\n\r\n  <mat-step [stepControl]=\"personalInformation\">\r\n    <mat-card>\r\n      <form [formGroup]=\"personalInformation\">\r\n        <ng-template matStepLabel>Enter your personal information</ng-template>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>First</mat-label>\r\n          <input matInput placeholder=\"First name\" formControlName=\"first\" required>\r\n          <mat-error *ngIf=\"personalInformation.controls.first.errors?.required\">Please enter the first name</mat-error>\r\n          <mat-error *ngIf=\"personalInformation.controls.first.errors?.pattern\">Please enter the Valid first name\r\n          </mat-error>\r\n        </mat-form-field><br />\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Middle (optional)</mat-label>\r\n          <input matInput placeholder=\"Middle name (optional)\" formControlName=\"middle\">\r\n        </mat-form-field><br />\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>last</mat-label>\r\n          <input matInput placeholder=\" Last name\" formControlName=\"last\" required>\r\n          <mat-error *ngIf=\"personalInformation.controls.last.errors?.required\">Please enter the last name</mat-error>\r\n          <mat-error *ngIf=\"personalInformation.controls.last.errors?.pattern\">Please enter the Valid last name\r\n          </mat-error>\r\n        </mat-form-field><br />\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Select Gender</mat-label>\r\n          <mat-select formControlName=\"gender\">\r\n            <mat-option value=\"Male\">Male</mat-option>\r\n            <mat-option value=\"Female\">Female</mat-option>\r\n            <mat-option value=\"Other\">Other</mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"personalInformation.controls.gender.errors?.required\">Please select the gender</mat-error>\r\n        </mat-form-field><br />\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Birth date</mat-label>\r\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"birth\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n          <mat-error *ngIf=\"personalInformation.controls.birth.errors?.required\">Please select the birth date\r\n          </mat-error>\r\n        </mat-form-field><br />\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>SSN</mat-label>\r\n          <input matInput formControlName=\"SSN\" required>\r\n          <mat-error *ngIf=\"personalInformation.controls.SSN.errors?.required\">Please select the SSN</mat-error>\r\n        </mat-form-field><br />\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Email Id</mat-label>\r\n          <input matInput placeholder=\"karan@gmail.com\" formControlName=\"email\" required>\r\n          <mat-error *ngIf=\"personalInformation.controls.email.errors?.required\">Please enter the email id</mat-error>\r\n          <mat-error *ngIf=\"personalInformation.controls.email.errors?.pattern\">Please enter the Valid emailId\r\n          </mat-error>\r\n        </mat-form-field><br />\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <button mat-raised-button matStepperNext>Next</button>\r\n        </div>\r\n      </form>\r\n    </mat-card>\r\n\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"addressForm\">\r\n    <form [formGroup]=\"addressForm\">\r\n      <ng-template matStepLabel>Enter your address details</ng-template>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Mailing address</mat-label>\r\n        <input matInput formControlName=\"mailingAddress\" placeholder=\"Ex. 1 Main St, New York, NY\" required>\r\n        <mat-error *ngIf=\"addressForm.controls.mailingAddress.errors?.required\">Please enter the mailing address\r\n        </mat-error>\r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>city</mat-label>\r\n        <input matInput formControlName=\"city\" placeholder=\"pune\" required>\r\n        <mat-error *ngIf=\"addressForm.controls.city.errors?.required\">Please enter the city</mat-error>\r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>state</mat-label>\r\n        <input matInput formControlName=\"state\" placeholder=\"Maharastra\" required>\r\n        <mat-error *ngIf=\"addressForm.controls.state.errors?.required\">Please enter the state</mat-error>\r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>Phone no</mat-label>\r\n        <input matInput formControlName=\"phoneNo\" placeholder=\"7507820170\" required>\r\n        <mat-error *ngIf=\"addressForm.controls.phoneNo.errors?.required\">Please enter the phone no</mat-error>\r\n        <mat-error *ngIf=\"addressForm.controls.phoneNo.errors?.minlength \">Please enter the Valid phone no</mat-error>\r\n        <mat-error *ngIf=\"addressForm.controls.phoneNo.errors?.maxlength \">Please enter the Valid phone no</mat-error>\r\n      </mat-form-field><br>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Confirmation</ng-template>\r\n    <mat-checkbox (change)=\"checked($event)\">I agree to the Terms and Conditions\"</mat-checkbox><br><br>\r\n    <button mat-button color=\"primary\" (click)=\"onSubmit()\" [disabled]=\"!status\">Submit </button><br><br>\r\n    <div>\r\n      <button mat-button matStepperPrevious>Back</button>\r\n      <button mat-button (click)=\"stepper.reset()\">Reset</button>\r\n    </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n\r\n"
        },
        {
            "name": "Tab2Component",
            "id": "component-Tab2Component-f10c6f41298d7edab351bcbfd1a49654",
            "file": "src/app/components/tab2/tab2.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab2",
            "styleUrls": [
                "./tab2.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tab2.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "navigate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tab2',\r\n  templateUrl: './tab2.component.html',\r\n  styleUrls: ['./tab2.component.css']\r\n})\r\nexport class Tab2Component implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  navigate(){\r\n    this.router.navigate([\"tab2\"]);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "html, body {\r\n    width: 100%;\r\n  }\r\n  \r\n  h1 {\r\n    font-size: 26px;\r\n    padding: 40px 0 100px 20%;\r\n    margin-bottom: 50px;\r\n    margin-left: 200px;\r\n  }\r\n  \r\n  label, p, a, h1, div {\r\n    font-family: Roboto, sans-serif;\r\n  }\r\n  \r\n  .tab-wrap {\r\n    width: 70%;\r\n    margin-left: 15%;\r\n    position: relative;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    top: -106px;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"] {\r\n    position: absolute;\r\n    z-index: -1;\r\n    display: none;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:checked + .tab-label-content label {\r\n    color:rgb(34, 34, 185);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:checked + .tab-label-content .tab-content {\r\n    display: block;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(1):checked ~ .slide {\r\n    left: calc((100% / 6) * 0);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(2):checked ~ .slide {\r\n    left: calc((100% / 6) * 1);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(3):checked ~ .slide {\r\n    left: calc((100% / 6) * 2);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(4):checked ~ .slide {\r\n    left: calc((100% / 6) * 3);\r\n  }\r\n\r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(5):checked ~ .slide {\r\n    left: calc((100% / 6) * 4);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(6):checked ~ .slide {\r\n    left: calc((100% / 6) * 5);\r\n  }\r\n  input[type=\"radio\"][name=\"tabs\"]:first-of-type:checked ~ .slide {\r\n    left: 0;\r\n  }\r\n  \r\n  label {\r\n    cursor: pointer;\r\n    color:rgb(102, 102, 110);\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    display: -webkit-inline-box;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -webkit-box-align: center;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n    -webkit-box-pack: center;\r\n        -ms-flex-pack: center;\r\n            justify-content: center;\r\n    text-align: center;\r\n    height: 56px;\r\n    -webkit-transition: color 0.2s ease;\r\n    transition: color 0.2s ease;\r\n    width: 100%;\r\n   \r\n  }\r\n  \r\n  .slide {\r\n    background:#00bcd4;\r\n    width: calc(100% /6);\r\n    height: 4px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: calc(100% - 4px);\r\n    -webkit-transition: left 0.3s ease-out;\r\n    transition: left 0.3s ease-out;\r\n  }\r\n  \r\n  .tab-label-content {\r\n    width: 100%;\r\n  }\r\n  \r\n  .tab-label-content .tab-content {\r\n    position: absolute;\r\n    top: 100px;\r\n    left: 16px;\r\n    right :16px;\r\n    line-height: 130%;\r\n    display: none;\r\n  }\r\n  \r\n  @media screen and (max-width: 800px) {\r\n    h1 {\r\n      padding: 40px 0 90px 10%;\r\n    }\r\n    .tab-wrap {\r\n      width: 80%;\r\n      margin-left: 10%;\r\n      top: -106px;\r\n    }\r\n  }\r\n\r\n  ",
                    "styleUrl": "./tab2.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>MTPL Calculator</h1>\r\n<div class=\"tab-wrap\">\r\n  \r\n    <input type=\"radio\" name=\"tabs\" id=\"tab1\" checked>\r\n    <div class=\"tab-label-content\" id=\"tab1-content\">\r\n      <label for=\"tab1\">Vehicle</label>\r\n      \r\n        \r\n\r\n      <div class=\"tab-content\">\r\n        <!-- TAB 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis laoreet eget lectus eu congue. Nam finibus urna eget nisl aliquam, in dictum ligula feugiat. Donec mollis ligula purus, et interdum velit bibendum eget. Aliquam magna diam, tristique eu libero nec, sagittis finibus sapien. Cras a ex ultricies, faucibus elit sagittis, maximus nisi. Donec quis arcu sapien. Aenean risus nibh, varius sed porttitor a, ornare nec leo. Sed vitae lacus in ipsum varius sagittis. Ut in quam cursus, ullamcorper sapien posuere, laoreet elit. Suspendisse interdum, risus ut ultricies scelerisque, nibh est commodo leo, sed tristique nisl odio et turpis. Fusce pellentesque nunc nec arcu feugiat accumsan. Praesent mauris sem, eleifend sit amet tortor in, cursus vehicula arcu. Curabitur convallis sit amet nunc ac feugiat. Sed at risus id diam porta pretium id vel felis. Donec nec dui id nisl hendrerit laoreet eu id odio. -->\r\n        <app-v-info></app-v-info>\r\n      </div>\r\n    </div>\r\n     \r\n    <input type=\"radio\" name=\"tabs\" id=\"tab2\">\r\n    <div class=\"tab-label-content\" id=\"tab2-content\">\r\n      <label for=\"tab2\">Insuring Party</label>\r\n      <div class=\"tab-content\">\r\n        <!-- TAB 2 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie. -->\r\n        <app-insuring-party></app-insuring-party>\r\n      </div>\r\n    </div>\r\n    \r\n    <input type=\"radio\" name=\"tabs\" id=\"tab3\">\r\n    <div class=\"tab-label-content\" id=\"tab3-content\">\r\n      <label for=\"tab3\">Policy Details</label>\r\n      <div class=\"tab-content\">\r\n        <!-- TAB 3 - Donec vulputate ante ac ligula vestibulum, id mollis diam commodo. Integer at consequat magna. Sed elit sem, dictum nec porttitor ac, ultrices id enim. Morbi semper eros a enim malesuada, eu finibus erat dictum. Ut vitae orci a odio sagittis malesuada. Cras volutpat vel lorem in tempor. Duis ultricies lectus sit amet tellus vehicula faucibus. Etiam sed leo ac erat tempor feugiat at quis ipsum. Mauris pellentesque nisl lorem, ac finibus sapien sagittis vel. Donec et lobortis est. Vestibulum dignissim ligula nec erat interdum, quis sollicitudin metus pretium. Vestibulum quis dui sapien. Proin commodo justo ac orci elementum molestie. Aliquam mattis orci vitae volutpat commodo. -->\r\n        <app-policy-details></app-policy-details>\r\n      </div>\r\n    </div>\r\n  \r\n     <input type=\"radio\" name=\"tabs\" id=\"tab4\">\r\n     <div class=\"tab-label-content\" id=\"tab4-content\">\r\n      <label for=\"tab4\">Instalments</label>\r\n      <div class=\"tab-content\">TAB 4 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\r\n    </div>\r\n\r\n    <input type=\"radio\" name=\"tabs\" id=\"tab5\">\r\n     <div class=\"tab-label-content\" id=\"tab5-content\">\r\n      <label for=\"tab5\">Covers</label>\r\n      <div class=\"tab-content\">\r\n        <app-additional-covers></app-additional-covers>\r\n        <!-- TAB 5 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie. -->\r\n      </div>\r\n    </div>\r\n     \r\n\r\n    <input type=\"radio\" name=\"tabs\" id=\"tab6\">\r\n     <div class=\"tab-label-content\" id=\"tab6-content\">\r\n      <label for=\"tab6\">Summary</label>\r\n      <div class=\"tab-content\">\r\n        <input name=\"navigate\" id=\"navigate\" class=\"btn btn-primary\" type=\"button\" (click)=\"navigate()\" value=\"next\">\r\n        \r\n        TAB 6 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\r\n  \r\n    </div>\r\n    \r\n    <div class=\"slide\"></div>\r\n  \r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-fb5a34fc86ed8bc92544a989df228dd3",
            "file": "src/app/tab/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [
                "./tab.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "0",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "changeTab",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "policyTabToggle",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "switch",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { MTPLCalculatorComponent } from '../components/mtpl-calculator/mtpl-calculator.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tab',\r\n  templateUrl: './tab.component.html',\r\n  styleUrls: ['./tab.component.css']\r\n})\r\nexport class TabComponent implements OnInit {\r\n  activeTab = 0;\r\n  policyTabToggle=true\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  changeTab=(data)=>{\r\n    this.policyTabToggle=false\r\n    this.activeTab=data\r\n  }\r\n  switch=(index)=>{\r\n    this.activeTab=0\r\n   }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./tab.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button (click)=\"policyTabToggle=!policyTabToggle\">toggle</button>\r\n<mat-tab-group mat-align-tabs=\"center\" [(selectedIndex)]=\"activeTab\">\r\n    <mat-tab label=\"MTPL Calculator\">\r\n        <app-mtpl-calculator (NextTabSwitch)=\"changeTab($event)\"></app-mtpl-calculator>\r\n    </mat-tab>\r\n    <mat-tab label=\"Purchase MTPL Policy\" [disabled]=\"policyTabToggle\"> \r\n        <app-mtpl-policy (switchTab)=\"switch($event)\"></app-mtpl-policy>\r\n    </mat-tab>\r\n    \r\n</mat-tab-group>\r\n"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-09af06cfdc0391013e3d950d3a571d0c",
            "file": "src/app/components/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [
                "./tabs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.css']\r\n})\r\nexport class TabsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "html, body {\r\n    width: 100%;\r\n  }\r\n  \r\n  h1 {\r\n    font-size: 26px;\r\n    padding: 40px 0 100px 20%;\r\n    margin-bottom: 50px;\r\n    margin-left: 200px;\r\n  }\r\n  \r\n  label, p, a, h1, div {\r\n    font-family: Roboto, sans-serif;\r\n  }\r\n  \r\n  .tab-wrap {\r\n    width: 70%;\r\n    margin-left: 15%;\r\n    position: relative;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    top: -106px;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"] {\r\n    position: absolute;\r\n    z-index: -1;\r\n    display: none;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:checked + .tab-label-content label {\r\n    color:rgb(34, 34, 185);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:checked + .tab-label-content .tab-content {\r\n    display: block;\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(1):checked ~ .slide {\r\n    left: calc((100% / 6) * 0);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(2):checked ~ .slide {\r\n    left: calc((100% / 6) * 1);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(3):checked ~ .slide {\r\n    left: calc((100% / 6) * 2);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(4):checked ~ .slide {\r\n    left: calc((100% / 6) * 3);\r\n  }\r\n\r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(5):checked ~ .slide {\r\n    left: calc((100% / 6) * 4);\r\n  }\r\n  \r\n  input[type=\"radio\"][name=\"tabs\"]:nth-of-type(6):checked ~ .slide {\r\n    left: calc((100% / 6) * 5);\r\n  }\r\n  input[type=\"radio\"][name=\"tabs\"]:first-of-type:checked ~ .slide {\r\n    left: 0;\r\n  }\r\n  \r\n  label {\r\n    cursor: pointer;\r\n    color:rgb(102, 102, 110);\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    display: -webkit-inline-box;\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -webkit-box-align: center;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n    -webkit-box-pack: center;\r\n        -ms-flex-pack: center;\r\n            justify-content: center;\r\n    text-align: center;\r\n    height: 56px;\r\n    -webkit-transition: color 0.2s ease;\r\n    transition: color 0.2s ease;\r\n    width: 100%;\r\n  }\r\n  \r\n  .slide {\r\n    background:#00bcd4;\r\n    width: calc(100% /6);\r\n    height: 4px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: calc(100% - 4px);\r\n    -webkit-transition: left 0.3s ease-out;\r\n    transition: left 0.3s ease-out;\r\n  }\r\n  \r\n  .tab-label-content {\r\n    width: 100%;\r\n  }\r\n  \r\n  .tab-label-content .tab-content {\r\n    position: absolute;\r\n    top: 100px;\r\n    left: 16px;\r\n    line-height: 130%;\r\n    display: none;\r\n  }\r\n  \r\n  @media screen and (max-width: 800px) {\r\n    h1 {\r\n      padding: 40px 0 90px 10%;\r\n    }\r\n    .tab-wrap {\r\n      width: 80%;\r\n      margin-left: 10%;\r\n      top: -106px;\r\n    }\r\n  }\r\n\r\n  ",
                    "styleUrl": "./tabs.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Purchase MTPL Policy</h1>\r\n<div class=\"tab-wrap\">\r\n  \r\n    <input type=\"radio\" name=\"tabs\" id=\"tab1\" checked>\r\n    <div class=\"tab-label-content\" id=\"tab1-content\">\r\n      <label for=\"tab1\">Personal Details</label>\r\n      <div class=\"tab-content\">TAB 1 - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis laoreet eget lectus eu congue. Nam finibus urna eget nisl aliquam, in dictum ligula feugiat. Donec mollis ligula purus, et interdum velit bibendum eget. Aliquam magna diam, tristique eu libero nec, sagittis finibus sapien. Cras a ex ultricies, faucibus elit sagittis, maximus nisi. Donec quis arcu sapien. Aenean risus nibh, varius sed porttitor a, ornare nec leo. Sed vitae lacus in ipsum varius sagittis. Ut in quam cursus, ullamcorper sapien posuere, laoreet elit. Suspendisse interdum, risus ut ultricies scelerisque, nibh est commodo leo, sed tristique nisl odio et turpis. Fusce pellentesque nunc nec arcu feugiat accumsan. Praesent mauris sem, eleifend sit amet tortor in, cursus vehicula arcu. Curabitur convallis sit amet nunc ac feugiat. Sed at risus id diam porta pretium id vel felis. Donec nec dui id nisl hendrerit laoreet eu id odio.</div>\r\n    </div>\r\n     \r\n    <input type=\"radio\" name=\"tabs\" id=\"tab2\">\r\n    <div class=\"tab-label-content\" id=\"tab2-content\">\r\n      <label for=\"tab2\" class=\"head\">Contact details</label>\r\n      <div class=\"tab-content\">TAB 2 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\r\n    </div>\r\n    \r\n    <input type=\"radio\" name=\"tabs\" id=\"tab3\">\r\n    <div class=\"tab-label-content\" id=\"tab3-content\">\r\n      <label for=\"tab3\" class=\"head\">Vehicle Owner</label>\r\n      <div class=\"tab-content\">TAB 3 - Donec vulputate ante ac ligula vestibulum, id mollis diam commodo. Integer at consequat magna. Sed elit sem, dictum nec porttitor ac, ultrices id enim. Morbi semper eros a enim malesuada, eu finibus erat dictum. Ut vitae orci a odio sagittis malesuada. Cras volutpat vel lorem in tempor. Duis ultricies lectus sit amet tellus vehicula faucibus. Etiam sed leo ac erat tempor feugiat at quis ipsum. Mauris pellentesque nisl lorem, ac finibus sapien sagittis vel. Donec et lobortis est. Vestibulum dignissim ligula nec erat interdum, quis sollicitudin metus pretium. Vestibulum quis dui sapien. Proin commodo justo ac orci elementum molestie. Aliquam mattis orci vitae volutpat commodo.</div>\r\n    </div>\r\n  \r\n     <input type=\"radio\" name=\"tabs\" id=\"tab4\">\r\n     <div class=\"tab-label-content\" id=\"tab4-content\">\r\n      <label for=\"tab4\" class=\"head\">Delivery</label>\r\n      <div class=\"tab-content\">\r\n        <app-delivery></app-delivery>\r\n      </div>\r\n    </div>\r\n\r\n    <input type=\"radio\" name=\"tabs\" id=\"tab5\">\r\n     <div class=\"tab-label-content\" id=\"tab5-content\">\r\n      <label for=\"tab5\" class=\"head2\">Summary</label>\r\n      <div class=\"tab-content\">TAB 5 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\r\n    </div>\r\n\r\n    <input type=\"radio\" name=\"tabs\" id=\"tab6\">\r\n     <div class=\"tab-label-content\" id=\"tab6-content\">\r\n      <label for=\"tab6\" class=\"head\">Payment</label>\r\n      <div class=\"tab-content\">TAB 6 - Quisque egestas, purus in tempor vulputate, diam augue mollis quam, quis elementum ipsum ex a risus. Quisque sed augue porta, facilisis felis vitae, cursus mi. Nullam mollis magna eget tincidunt mollis. Sed suscipit placerat ultricies. Sed eget lorem et ipsum ultricies congue eu a enim. Nam quis ex nec lorem dignissim suscipit eu ut felis. Vivamus molestie felis id purus congue, vel ultrices sem molestie.</div>\r\n    </div>\r\n    \r\n    <div class=\"slide\"></div>\r\n  \r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "VehicleOwnerComponent",
            "id": "component-VehicleOwnerComponent-fa2285dfb53513614d10675e8b4ac109",
            "file": "src/app/components/vehicle-owner/vehicle-owner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-vehicle-owner",
            "styleUrls": [
                "./vehicle-owner.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./vehicle-owner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appartment",
                    "line": 34,
                    "type": "String"
                },
                {
                    "name": "block",
                    "line": 32,
                    "type": "String"
                },
                {
                    "name": "citizen",
                    "line": 26,
                    "type": "String"
                },
                {
                    "name": "city",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "dob",
                    "line": 27,
                    "type": "Date"
                },
                {
                    "name": "entrance",
                    "line": 33,
                    "type": "String"
                },
                {
                    "name": "firstname",
                    "line": 19,
                    "type": "String"
                },
                {
                    "name": "firstnameeng",
                    "line": 23,
                    "type": "String"
                },
                {
                    "name": "lastname",
                    "line": 20,
                    "type": "String"
                },
                {
                    "name": "lastnameeng",
                    "line": 24,
                    "type": "String"
                },
                {
                    "name": "lnch",
                    "line": 18,
                    "type": "String"
                },
                {
                    "name": "No",
                    "line": 31,
                    "type": "String"
                },
                {
                    "name": "owner",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "pincode",
                    "line": 29,
                    "type": "String"
                },
                {
                    "name": "street",
                    "line": 30,
                    "type": "String"
                },
                {
                    "name": "surname",
                    "line": 21,
                    "type": "String"
                },
                {
                    "name": "surnameeng",
                    "line": 25,
                    "type": "String"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "button",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "citizens",
                    "defaultValue": "['Indian', 'American', 'African']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "Details",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "gaTrigger",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "selectedLink",
                    "defaultValue": "\"Yes\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "toggle",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 105
                }
            ],
            "methodsClass": [
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "name",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 78,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45
                },
                {
                    "name": "setradio",
                    "args": [
                        {
                            "name": "e",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\n\r\n@Component({\r\n  selector: 'app-vehicle-owner',\r\n  templateUrl: './vehicle-owner.component.html',\r\n  styleUrls: ['./vehicle-owner.component.css']\r\n})\r\nexport class VehicleOwnerComponent implements OnInit {\r\n  @Output() OnRegister = new EventEmitter()\r\n  @Output() OnToggle = new EventEmitter()\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n\r\n  // Input fields\r\n  @Input() owner:string;\r\n  @Input() lnch:String;\r\n  @Input() firstname:String;\r\n  @Input() lastname:String;\r\n  @Input() surname:String;\r\n\r\n  @Input() firstnameeng:String;\r\n  @Input() lastnameeng:String;\r\n  @Input() surnameeng:String;\r\n  @Input() citizen:String;\r\n  @Input() dob:Date;\r\n  @Input() city:string;\r\n  @Input() pincode:String;\r\n  @Input() street:String;\r\n  @Input() No:String;\r\n  @Input() block:String;\r\n  @Input() entrance:String;\r\n  @Input() appartment:String;\r\n\r\n  Details: FormGroup;\r\n  citizens = ['Indian', 'American', 'African'];\r\n  constructor(private formBuilder: FormBuilder, private GAService: GoogleAnalyticsService) { }\r\n\r\n  // success() {\r\n  //   console.log(this.Details.value);\r\n  // }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.Details = this.formBuilder.group({\r\n      lnch: ['',[Validators.required,Validators.pattern(\"^[0-9]{10}$\")]],\r\n      fullname: this.formBuilder.group({\r\n        firstname:['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\"),Validators.maxLength(20)]],\r\n        lastname:['',Validators.pattern(\"^[a-zA-Z]*$\")],\r\n        surname:['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\"),Validators.maxLength(20)]]\r\n      }),\r\n      fullnameeng: this.formBuilder.group({\r\n        firstnameeng:['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\"),Validators.maxLength(20)]],\r\n        lastnameeng:['',Validators.pattern(\"^[a-zA-Z]*$\")],\r\n        surnameeng:['',[Validators.required,Validators.pattern(\"^[a-zA-Z]*$\"),Validators.maxLength(20)]]\r\n      }),\r\n      citizen: ['', Validators.required],\r\n      birth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      pincode: ['', Validators.required],\r\n      street: [''],\r\n      No: [''],\r\n      block:[''],\r\n      entrance:[''],\r\n      appartment:[''],\r\n    });\r\n  }\r\n\r\n  private selectedLink: string = \"Yes\";\r\n\r\n  setradio(e: string): void {\r\n\r\n    this.selectedLink = e;\r\n\r\n  }\r\n\r\n  isSelected(name: string): boolean {\r\n\r\n    if (!this.selectedLink) {\r\n      return false;\r\n    }\r\n\r\n    return (this.selectedLink === name);\r\n  }\r\n\r\n  submit=()=>{\r\n    this.GAService.event('Next Button clicked','Vehicle Owner','Next')\r\n    console.log(this.Details.value, \"vehicle owner\");\r\n    this.OnRegister.emit(this.Details.value);\r\n    this.OnSubmission.emit('Vehicle owner information form is submitted!')\r\n  }\r\n  gaTrigger=()=>{\r\n    this.GAService.event('Next Button clicked','Vehicle Owner','Next')\r\n  }\r\n  change=()=>{\r\n    if(this.Details.valid){\r\n      this.OnToggle.emit(true)\r\n      this.OnRegister.emit(this.Details.value);\r\n    }else{\r\n      this.OnToggle.emit(false)\r\n    }\r\n  }\r\n  button=false\r\n  toggle=(data)=>{\r\n    if(data){\r\n      this.OnToggle.emit(true)\r\n      this.OnRegister.emit(\"Yes\");\r\n      this.button=true\r\n    }else{\r\n      this.change()\r\n    }\r\n  }\r\n  // next=()=>{\r\n  //   console.log(this.selectedLink, \"vehicle owner\");\r\n  //   this.OnRegister.emit(10);\r\n  // }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* .form-control{\r\n    width:180px\r\n} */\r\n\r\n\r\nh1{\r\n    \r\n    color:rgb(8,56,95);\r\n    font-family: 'Trebuchet MS',Arial,sans-serif;\r\n    font-weight: bold;\r\n}\r\nh2{\r\n    color:rgb(8,56,95); \r\n    font-family:Arial, Helvetica, sans-serif\r\n}\r\nlabel{\r\n    color:rgb(8,56,95);\r\n    font-family: Arial, Helvetica, sans-serif;\r\n}\r\n/* .col-sm-4{\r\n    padding-left: 205px;\r\n   \r\n} */\r\n\r\n.panel{\r\n    border-color:yellow;\r\n    /* width: 555px; */\r\n}\r\n.error{\r\n    color: red;\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n@media screen and (max-width: 800px) {\r\n    .line{\r\n        display : none;\r\n    }\r\n}\r\n@media screen and (max-width: 1090px){\r\n    .space{\r\n        padding: 4px;\r\n    }\r\n    \r\n}\r\n@media screen and (max-width: 575px){\r\n    .nextbtn{\r\n        width: 250px;\r\n        margin: auto;\r\n        display: block;\r\n    }\r\n        \r\n}\r\n/* .col-sm-2\r\n{\r\n    \r\n   /* width:200px;  \r\n} */\r\n.user-key{\r\n    width: 40px;\r\n    position: absolute;\r\n  \r\n    top: 10px;\r\n    left: -17px;\r\n}\r\n\r\n",
                    "styleUrl": "./vehicle-owner.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n    <h1>Vehicle Owner</h1>\r\n\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <label class=\"col-md-5\">Are u the owner of the vehicle</label>\r\n            <label class=\"radio-inline col-md-3\">\r\n                <input type=\"radio\" name=\"gender\" id=\"Radios1\" value=\"Yes\" [(ngModel)]=\"owner\" [checked]=\"owner==='Yes'\" (click)=\"setradio('Yes')\"\r\n                    (change)=\"toggle(true)\">\r\n                Yes\r\n            </label>\r\n\r\n            <label class=\"radio-inline col-md-3\">\r\n                <input type=\"radio\" name=\"gender\" id=\"Radios2\" value=\"No\" [(ngModel)]=\"owner\" [checked]=\"owner==='No'\" (click)=\"setradio('No')\"\r\n                    (change)=\"toggle(false)\">\r\n                No\r\n            </label>\r\n        </div>\r\n    </div>\r\n\r\n    <hr class=\"line\">\r\n    <div *ngIf=\"isSelected('Yes')\">\r\n        <button type=\"button\" class=\"btn btn-primary rounded-pill col-sm-4 col-lg-2 col-md-3 nextbtn\" (click)=\"gaTrigger()\" [disabled]=\"!button\"\r\n            matStepperNext>Next</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"isSelected('No')\">\r\n        <form [formGroup]=\"Details\" (ngSubmit)=\"submit()\">\r\n            <h2><b>Vehicle Owner Details</b></h2>\r\n\r\n            <div class=\"form-group row\">\r\n                <label for=\"lnch\" class=\"col-lg-8\">Enter your EGN/EIK/LNCH</label>\r\n                <div class=\"col-lg-4\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"lnch\" id=\"lnch\" placeholder=\"Enter your Number\"\r\n                        formControlName=\"lnch\" name=\"lnch\" (change)=\"change()\">\r\n                    <div *ngIf=\"Details.controls.lnch.hasError('required') &&(Details.controls.lnch.dirty || Details.controls.lnch.touched)\"\r\n                        class=\"error\">This field is mandatory</div>\r\n                    <div *ngIf=\"Details.controls.lnch.hasError('pattern') &&(Details.controls.lnch.dirty || Details.controls.lnch.touched)\"\r\n                        class=\"error\">Only 10 digit numerical value allowed</div>\r\n                </div>\r\n            </div>\r\n            <hr class=\"line\">\r\n            <div formGroupName=\"fullname\">\r\n                <label class=\"\">Full Name</label><br>\r\n                <div class=\"form-group row\">\r\n\r\n                    <div class=\"col-md-4 space\">\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"firstname\" id=\"firstname\" placeholder=\"Enter firstname\"\r\n                            formControlName=\"firstname\" name=\"firstname\" (change)=\"change()\">\r\n                        <div *ngIf=\"Details.get('fullname').get('firstname').hasError('required') &&(Details.get('fullname').get('firstname').dirty || Details.get('fullname').get('firstname').touched)\"\r\n                            class=\"error\">This field is mandatory</div>\r\n                        <div *ngIf=\"Details.get('fullname').get('firstname').hasError('pattern') &&(Details.get('fullname').get('firstname').dirty || Details.get('fullname').get('firstname').touched)\"\r\n                            class=\"error\">Only alphabets allowed</div>\r\n                        <div *ngIf=\"Details.get('fullname').get('firstname').hasError('maxlength') &&(Details.get('fullname').get('firstname').dirty || Details.get('fullname').get('firstname').touched)\"\r\n                            class=\"error\">Max length can be 20 characters</div>\r\n                    </div>\r\n                    <div class=\"col-md-4 space\">\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"lastname\" id=\"lastname\" placeholder=\"Enter middlename\"\r\n                            formControlName=\"lastname\" name=\"lastname\" (change)=\"change()\">\r\n                        <div *ngIf=\"Details.get('fullname').get('lastname').hasError('pattern') &&(Details.get('fullname').get('lastname').dirty || Details.get('fullname').get('lastname').touched)\"\r\n                            class=\"error\">Only alphabets allowed</div>\r\n                    </div>\r\n                    <div class=\"col-md-4 space\">\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"surname\" id=\"surname\" placeholder=\"Enter lastname\"\r\n                            formControlName=\"surname\" name=\"suname\" (change)=\"change()\">\r\n                        <div *ngIf=\"Details.get('fullname').get('surname').hasError('required') &&(Details.get('fullname').get('surname').dirty || Details.get('fullname').get('surname').touched)\"\r\n                            class=\"error\">This field is mandatory</div>\r\n                        <div *ngIf=\"Details.get('fullname').get('surname').hasError('pattern') &&(Details.get('fullname').get('surname').dirty || Details.get('fullname').get('surname').touched)\"\r\n                            class=\"error\">Only alphabets allowed</div>\r\n                        <div *ngIf=\"Details.get('fullname').get('surname').hasError('maxlength') &&(Details.get('fullname').get('surname').dirty || Details.get('fullname').get('surname').touched)\"\r\n                            class=\"error\">Max length can be 20 characters</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr class=\"line\">\r\n            <div formGroupName=\"fullnameeng\">\r\n                <label>Full Name in English</label><br>\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-md-4 space\">\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"firstnameeng\" id=\"firstnameeng\" placeholder=\"Enter firstname\"\r\n                            formControlName=\"firstnameeng\" name=\"firstnameeng\" (change)=\"change()\">\r\n                        <div *ngIf=\"Details.get('fullnameeng').get('firstnameeng').hasError('required') &&(Details.get('fullnameeng').get('firstnameeng').dirty || Details.get('fullnameeng').get('firstnameeng').touched)\"\r\n                            class=\"error\">This field is mandatory</div>\r\n                        <div *ngIf=\"Details.get('fullnameeng').get('firstnameeng').hasError('pattern') &&(Details.get('fullnameeng').get('firstnameeng').dirty || Details.get('fullnameeng').get('firstnameeng').touched)\"\r\n                            class=\"error\">Only alphabets allowed</div>\r\n                        <div *ngIf=\"Details.get('fullnameeng').get('firstnameeng').hasError('maxlength') &&(Details.get('fullnameeng').get('firstnameeng').dirty || Details.get('fullnameeng').get('firstnameeng').touched)\"\r\n                            class=\"error\">Max length can be 20 characters</div>\r\n                    </div>\r\n                    <div class=\"col-md-4 space\">\r\n                        <input type=\"text\" class=\"form-control\" value={{lastnameeng}} id=\"lastnameeng\" placeholder=\"Enter lastname\"\r\n                            formControlName=\"lastnameeng\" name=\"lastnameeng\" (change)=\"change()\">\r\n                        <div *ngIf=\"Details.get('fullnameeng').get('lastnameeng').hasError('pattern') &&(Details.get('fullnameeng').get('lastnameeng').dirty || Details.get('fullnameeng').get('lastnameeng').touched)\"\r\n                            class=\"error\">Only alphabets allowed</div>\r\n                    </div>\r\n                    <div class=\"col-md-4 space\">\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"surnameeng\" id=\"surnameeng\" placeholder=\"Enter surname\"\r\n                            formControlName=\"surnameeng\" name=\"sunameeng\" (change)=\"change()\">\r\n                        <div *ngIf=\"Details.get('fullnameeng').get('surnameeng').hasError('required') &&(Details.get('fullnameeng').get('surnameeng').dirty || Details.get('fullnameeng').get('surnameeng').touched)\"\r\n                            class=\"error\">This field is mandatory</div>\r\n                        <div *ngIf=\"Details.get('fullnameeng').get('surnameeng').hasError('pattern') &&(Details.get('fullnameeng').get('surnameeng').dirty || Details.get('fullnameeng').get('surnameeng').touched)\"\r\n                            class=\"error\">Only alphabets allowed</div>\r\n                        <div *ngIf=\"Details.get('fullnameeng').get('surnameeng').hasError('maxlength') &&(Details.get('fullnameeng').get('surnameeng').dirty || Details.get('fullnameeng').get('surnameeng').touched)\"\r\n                            class=\"error\">Max length can be 20 characters</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"card border-warning mb-4  \" style=\"width: inherit;\">\r\n                <img class=\"user-key\" src=\"../../assets/excl.jpg\">\r\n                <div class=\"card-body\">\r\n                    <p class=\"card-text pl-3 text-color\">\r\n                        Please compare data in Latin with data in the vehicle registration certificate\r\n                        or identity document.Data will be used for printout of Green Card\r\n                        Certificate.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group row\">\r\n                <label for=\"citizen\" class=\"col-lg-8\">Citizenship</label>\r\n                <div class=\"col-lg-4\">\r\n                    <select class=\"form-control\" id=\"citizen\" [(ngModel)]=\"citizen\" formControlName=\"citizen\" name=\"citizen\"\r\n                        (change)=\"change()\">\r\n                        <option selected disabled value=\"\">--SELECT--</option>\r\n                        <option *ngFor=\"let c of citizens\" [value]=\"c\">{{c}}</option>\r\n                    </select>\r\n                    <div *ngIf=\"Details.controls.citizen.hasError('required') &&(Details.controls.citizen.dirty || Details.controls.citizen.touched)\"\r\n                        class=\"error\">Please select your Citizenship</div>\r\n\r\n                </div>\r\n            </div>\r\n            <hr class=\"line\">\r\n            <div class=\"form-group row\">\r\n                <label for=\"birth\" class=\"col-lg-8\">Birth Date</label>\r\n                <div class=\"col-lg-4\">\r\n                    <input type=\"date\" class=\"form-control\" [ngModel]=\"dob | date: 'yyyy-MM-dd'\" id=\"birth\" placeholder=\"Enter Birth date\"\r\n                        formControlName=\"birth\" name=\"birth\" (change)=\"change()\">\r\n                    <div *ngIf=\"Details.controls.birth.hasError('required') &&(Details.controls.birth.dirty || Details.controls.birth.touched)\"\r\n                        class=\"error\">Please select your birth date </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"h-divider\">\r\n            </div>\r\n\r\n            <h2>\r\n                <b>Contact Information</b>\r\n            </h2>\r\n\r\n\r\n            <div class=\"form-group row\">\r\n                <label for=\"city\" class=\"col-md-5 col-12\">City</label>\r\n\r\n                <div class=\"col-md-4 col-8 space\">\r\n                    <select class=\"form-control\" id=\"sel1\" formControlName=\"city\" [(ngModel)]=\"city\" name=\"city\" (change)=\"change()\">\r\n                        <option selected disabled value=\"\">--SELECT--</option>\r\n\r\n                        <option value=\"Hyd\" [selected]=\"city==='Hyd'\">Hyderabad</option>\r\n                        <option value=\"Mum\" [selected]=\"city==='Mum'\">Mumbai</option>\r\n                        <option value=\"Pune\" [selected]=\"city==='Pune'\">Pune</option>\r\n                        <option value=\"Chennai\" [selected]=\"city==='Chennai'\">Chennai</option>\r\n                        <option value=\"Banglore\" [selected]=\"city==='Bangalore'\">Banglore</option>\r\n                        <option value=\"Goa\" [selected]=\"city==='Goa'\">Goa</option>\r\n                        <option value=\"Maharashtra\" [selected]=\"city==='Maharashtra'\">Maharashtra</option>\r\n\r\n                    </select>\r\n                    <div *ngIf=\"Details.controls.city.hasError('required') &&(Details.controls.city.dirty || Details.controls.city.touched)\"\r\n                        class=\"error\">This field is mandatory</div>\r\n                </div>\r\n                <div class=\"col-md-3 col-4 space\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"pincode\" placeholder=\"1000\" (change)=\"change()\"\r\n                            formControlName=\"pincode\">\r\n                        <div *ngIf=\"Details.controls.pincode.hasError('required') &&(Details.controls.pincode.dirty || Details.controls.pincode.touched)\"\r\n                            class=\"error\">This field is mandatory</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr class=\"line\">\r\n            <div class=\"form-group row\">\r\n              \r\n                    <label for=\"s&n\"  class=\"col-md-5 col-12\">Street & Number </label>\r\n               \r\n                <div class=\"col-md-4 col-8 space\">\r\n                    <input type=\"text\" class=\"form-control\" value={{street}} formControlName=\"street\" (change)=\"change()\">\r\n                    <!-- <div *ngIf=\"Details.controls.street.hasError('required') &&(Details.controls.street.dirty || Details.controls.street.touched)\" class=\"error\">Please select your street</div> -->\r\n\r\n                </div>\r\n                <div class=\"col-sm-3 col-4 space\">\r\n                    <input type=\"text\" class=\"form-control\" value={{No}} formControlName=\"No\" (change)=\"change()\">\r\n                    <!-- <div *ngIf=\"Details.controls.No.hasError('required') &&(Details.controls.No.dirty || Details.controls.No.touched)\" class=\"error\">Please enter your House NO</div> -->\r\n                </div>\r\n\r\n            </div>\r\n            <hr class=\"line\">\r\n            <div class=\"form-group row\">\r\n              \r\n                    <label for=\"be&a\" class=\"col-md-5 col-12\">Block Entrance & Apartment </label>\r\n               \r\n                <div class=\"col-md-2 col-4\">\r\n\r\n                    <input type=\"text\" value={{block}} class=\"form-control\" (change)=\"change()\">\r\n                    <label>Optional</label>\r\n\r\n                </div>\r\n                <div class=\"col-md-2 col-4\">\r\n                    <input type=\"text\" value={{entrance}} class=\"form-control\" (change)=\"change()\">\r\n                    <label>Optional</label>\r\n                </div>\r\n                <div class=\"col-md-3 col-4\">\r\n                    <input type=\"text\" value={{appartment}} class=\"form-control\" (change)=\"change()\">\r\n                    <label>Optional</label>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary rounded-pill col-sm-4 col-lg-2 col-md-3 nextbtn\" [disabled]=\"!Details.valid\"\r\n                matStepperNext>Next</button>\r\n        </form>\r\n    \r\n"
        },
        {
            "name": "VInfoComponent",
            "id": "component-VInfoComponent-828826080b47ca4cbe4ff6668df0c368",
            "file": "src/app/components/v-info/v-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-v-info",
            "styleUrls": [
                "./v-info.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./v-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "certificateNumber",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "purpose",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "registrationNumber",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "yesNo",
                    "line": 19,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "OnRegister",
                    "defaultValue": "new EventEmitter()",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnSubmission",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "OnToggle",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "change",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "purposeList",
                    "defaultValue": "['Personal Use','Public Use']",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "submit",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "vehicleInfoForm",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output,EventEmitter,Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\r\n\r\n\r\n@Component({\r\n  selector: 'app-v-info',\r\n  templateUrl: './v-info.component.html',\r\n  styleUrls: ['./v-info.component.css']\r\n})\r\nexport class VInfoComponent implements OnInit{\r\n  @Output() OnRegister= new EventEmitter()\r\n  @Output() OnToggle=new EventEmitter()\r\n  @Output() OnSubmission = new EventEmitter<any>();\r\n  @Input() registrationNumber:string;\r\n  @Input() certificateNumber:string;\r\n  @Input() purpose:string;\r\n  @Input() yesNo:string;\r\n vehicleInfoForm:FormGroup;\r\n purposeList =['Personal Use','Public Use']\r\n  constructor(private router: Router, private formBuilder:FormBuilder, private GAService : GoogleAnalyticsService ) { } \r\n\r\n  ngOnInit(): void {\r\n    this.vehicleInfoForm=this.formBuilder.group({\r\n      registrationNumber:['',[Validators.required,Validators.minLength(8),Validators.maxLength(8)]],\r\n      certificateNumber:['',[Validators.required,Validators.minLength(9),Validators.maxLength(9)]],\r\n      purpose:['',Validators.required],\r\n      yesNo:['Yes',Validators.required]\r\n    })\r\n  }\r\n    submit=() => {\r\n      this.GAService.event('Next Button clicked','Vehicle Infomation','Next')\r\n      //this.router.navigate(['./insuring-party.component']);\r\n      console.log(this.vehicleInfoForm.value,\"vehicle Info\");\r\n      // this.OnToggle.emit(true)\r\n      this.OnRegister.emit(this.vehicleInfoForm.value);\r\n       // setTimeout(this.OnToggle.emit(true),)\r\n       this.OnSubmission.emit('Vehicle Information form is submitted!');\r\n    }\r\n    change=()=>{\r\n      \r\n      if(this.vehicleInfoForm.valid){\r\n        this.OnToggle.emit(true)\r\n        this.OnRegister.emit(this.vehicleInfoForm.value);\r\n      }else{\r\n        this.OnToggle.emit(false)\r\n        // this.OnRegister.emit(this.vehicleInfoForm.value);\r\n      }\r\n    }\r\n\r\n    get formsControl(){\r\n      return this.vehicleInfoForm.controls;\r\n    }\r\n  }\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "form { \r\n    margin: 0  auto; \r\n    widows: 500px;;\r\n    }\r\n@media screen and (max-width: 768px){\r\n        .line{\r\n            display : none;\r\n        }\r\n       \r\n        \r\n}\r\n@media screen and (max-width: 575px){\r\n    .btn{\r\n        width: 250px;\r\n        margin: auto;\r\n        display: block;\r\n     \r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n  ",
                    "styleUrl": "./v-info.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder"
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService"
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "GAService",
                        "type": "GoogleAnalyticsService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "formsControl": {
                    "name": "formsControl",
                    "getSignature": {
                        "name": "formsControl",
                        "type": "",
                        "returnType": "",
                        "line": 52
                    }
                }
            },
            "templateData": "<h1 style=\"color:rgb(8,56,95);font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\">\r\n    <b>Vehicle Information</b></h1>\r\n<form [formGroup]=\"vehicleInfoForm\" (submit)=\"submit()\"  style=\"color:rgb(8,56,95)\"><br>\r\n    <div class=\"form-row\">\r\n        <div class=\" col-12 col-sm-7 col-md-8 col-lg-8 col-auto\"> \r\n            <label for=\"registrationNumber\">Vehicle Registration Number</label>\r\n        </div>\r\n        <div class=\" col-12 col-sm-5 col-md-4 col-lg-4 col-auto\">\r\n            <input class=\"form-control\" id=\"registrationNumber\" type=\"text\" placeholder=\"XX0000XX\" formControlName=\"registrationNumber\"\r\n                (change)=\"change()\" [(ngModel)]=\"registrationNumber\">\r\n            <div class=\"error\"\r\n                *ngIf=\"formsControl.registrationNumber.touched && formsControl.registrationNumber.errors\">\r\n                <div *ngIf=\"formsControl.registrationNumber.errors.required\">Vehicle Registartion Number is required\r\n                </div>\r\n                <div\r\n                    *ngIf=\"formsControl.registrationNumber.errors.minlength || formsControl.registrationNumber.errors.maxlength\">\r\n                    Vehicle Registartion Number Should be 8 characters </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <hr class=\"line\">\r\n    <br>\r\n    <div class=\"form-row\">\r\n        <div class=\" col-12 col-sm-7  col-md-8 col-lg-8\">\r\n            <label for=\"certificateNumber\"> Vehicle Certificate Number<br>\r\n            <a href=\"\"><u>Where can I find this number?</u></a></label>\r\n        </div>\r\n        <div class=\" col-12 col-sm-5 col-md-4 col-lg-4\">\r\n            <input class=\"form-control\" id=\"certificateNumber\" type=\"text\" placeholder=\"000000000\" formControlName=\"certificateNumber\"\r\n                (change)=\"change()\" [(ngModel)]=\"certificateNumber\">\r\n            <div class=\"error\" *ngIf=\"formsControl.certificateNumber.touched && formsControl.certificateNumber.errors\">\r\n                <div *ngIf=\"formsControl.certificateNumber.errors.required\">Vehicle Certificate Number is required\r\n                </div>\r\n                <div\r\n                    *ngIf=\"formsControl.certificateNumber.errors.minlength || formsControl.certificateNumber.errors.maxlength\">\r\n                    Vehicle Certificate Number Should be 9 characters </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <hr class=\"line\">\r\n    <br>\r\n    <div class=\"form-row\">\r\n        <div class=\" col-12 col-sm-7 col-md-8 col-lg-8\">\r\n            <label for=\"purpose\"> What purpose does this vehicle serve?</label>\r\n        </div>\r\n        <div class=\" col-12 col-sm-5 col-md-4 col-lg-4\">\r\n            <select formControlName=\"purpose\" [(ngModel)]=\"purpose\" class=\"form-control\" (change)=\"change()\">\r\n                <option  [selected]=\"''===purpose\" disabled value=\"\" id=\"purpose\">--SELECT--</option>\r\n                <option [selected]=\"p===purpose\" *ngFor=\"let p of purposeList\" value='p'>{{p}}</option>\r\n            </select>\r\n            <div class=\"error\" *ngIf=\"formsControl.purpose.touched && formsControl.purpose.errors\">\r\n                <div *ngIf=\"formsControl.purpose.errors.required\">Please select what purpose does this vehicle serve\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <hr class=\"line\">\r\n    <br>\r\n    <div class=\"form-row\">\r\n        <div class=\" col-12 col-sm-7 col-md-8 col-lg-8\">\r\n           <label for=\"Driving\">\r\n               Are you Driving outside Bulgarian territory with this vehicle for more than 60 days?\r\n           </label>\r\n        </div>\r\n      \r\n        <div class=\"col-12 col-sm-5 col-md-4 col-lg-4\">\r\n            \r\n            <input type=\"radio\" id=\"Driving\" name=\"yesNo\" (change)=\"change()\" formControlName=\"yesNo\" value=\"Yes\" [(ngModel)]=\"yesNo\" [checked]=\"yesNo=='Yes'\"> &nbsp; Yes &nbsp;&nbsp;\r\n            <input type=\"radio\" id=\"Driving\" name=\"yesNo\" (change)=\"change()\" formControlName=\"yesNo\" value=\"No\" [(ngModel)]=\"yesNo\" [checked]=\"yesNo=='No'\"> &nbsp; No\r\n        </div>\r\n        \r\n    </div>\r\n    <hr class=\"line\">\r\n    <br>\r\n\r\n    <button class=\"btn btn-primary rounded-pill col-sm-4 col-lg-2 col-md-3\" type=\"submit\" matStepperNext\r\n    [disabled]=\"!vehicleInfoForm.valid\">Next</button>\r\n\r\n</form>\r\n\r\n<!-- {{vehicleInfoForm.value | json}} -->"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "LoggedInServiceService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdditionalCoversComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ContactComponent"
                        },
                        {
                            "name": "DeliveryComponent"
                        },
                        {
                            "name": "InstallmentComponent"
                        },
                        {
                            "name": "InsuringPartyComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "MTPLCalculatorComponent"
                        },
                        {
                            "name": "MTPLPolicyComponent"
                        },
                        {
                            "name": "OrdinalPipe"
                        },
                        {
                            "name": "PaymentComponent"
                        },
                        {
                            "name": "PersonalComponent"
                        },
                        {
                            "name": "PolicyDetailsComponent"
                        },
                        {
                            "name": "ProposalComponent"
                        },
                        {
                            "name": "SignUpComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "Tab2Component"
                        },
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabsComponent"
                        },
                        {
                            "name": "VInfoComponent"
                        },
                        {
                            "name": "VehicleOwnerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: LoginComponent,\r\n  props: {\r\n    \r\n  }\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            }
        ],
        "functions": [
            {
                "name": "passwordValidator",
                "file": "src/app/components/sign-up/sign-up.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "c"
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "c",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/login.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: LoginComponent,\r\n  props: {\r\n    \r\n  }\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/components/sign-up/sign-up.component.ts": [
                {
                    "name": "passwordValidator",
                    "file": "src/app/components/sign-up/sign-up.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "c"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "c",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "form",
                        "component": "Tab2Component"
                    },
                    {
                        "path": "signIn",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "tab",
                        "component": "TabComponent",
                        "canActivate": [
                            "LoggedInGuardGuard"
                        ]
                    },
                    {
                        "path": "signUp",
                        "component": "SignUpComponent"
                    },
                    {
                        "path": "**",
                        "redirectTo": "/signIn",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/common-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommonDataService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/additional-covers/additional-covers.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdditionalCoversComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/contact/contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/components/delivery/delivery.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeliveryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/components/installment/installment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InstallmentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/components/installment/installment.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InstallmentService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/installment/ordinal.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OrdinalPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/insuring-party/insuring-party.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InsuringPartyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mtpl-calculator/mtpl-calculator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MTPLCalculatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mtpl-policy/mtpl-policy.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MTPLPolicyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/components/payment/payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/personal/personal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PersonalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/components/policy-details/policy-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PolicyDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/proposal/proposal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProposalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/components/sign-up/sign-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/sign-up/sign-up.component.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "passwordValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab2/tab2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Tab2Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/v-info/v-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/vehicle-owner/vehicle-owner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VehicleOwnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "src/app/logged-in-guard.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "LoggedInGuardGuard",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/logged-in-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoggedInServiceService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}